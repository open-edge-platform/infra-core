// Code generated by ent, DO NOT EDIT.

package hostresource

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/open-edge-platform/infra-core/inventory/v2/internal/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldID, id))
}

// ResourceID applies equality check predicate on the "resource_id" field. It's identical to ResourceIDEQ.
func ResourceID(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldResourceID, v))
}

// Kind applies equality check predicate on the "kind" field. It's identical to KindEQ.
func Kind(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldKind, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldName, v))
}

// Note applies equality check predicate on the "note" field. It's identical to NoteEQ.
func Note(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldNote, v))
}

// HardwareKind applies equality check predicate on the "hardware_kind" field. It's identical to HardwareKindEQ.
func HardwareKind(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldHardwareKind, v))
}

// SerialNumber applies equality check predicate on the "serial_number" field. It's identical to SerialNumberEQ.
func SerialNumber(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldSerialNumber, v))
}

// UUID applies equality check predicate on the "uuid" field. It's identical to UUIDEQ.
func UUID(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldUUID, v))
}

// MemoryBytes applies equality check predicate on the "memory_bytes" field. It's identical to MemoryBytesEQ.
func MemoryBytes(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldMemoryBytes, v))
}

// CPUModel applies equality check predicate on the "cpu_model" field. It's identical to CPUModelEQ.
func CPUModel(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldCPUModel, v))
}

// CPUSockets applies equality check predicate on the "cpu_sockets" field. It's identical to CPUSocketsEQ.
func CPUSockets(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldCPUSockets, v))
}

// CPUCores applies equality check predicate on the "cpu_cores" field. It's identical to CPUCoresEQ.
func CPUCores(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldCPUCores, v))
}

// CPUCapabilities applies equality check predicate on the "cpu_capabilities" field. It's identical to CPUCapabilitiesEQ.
func CPUCapabilities(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldCPUCapabilities, v))
}

// CPUArchitecture applies equality check predicate on the "cpu_architecture" field. It's identical to CPUArchitectureEQ.
func CPUArchitecture(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldCPUArchitecture, v))
}

// CPUThreads applies equality check predicate on the "cpu_threads" field. It's identical to CPUThreadsEQ.
func CPUThreads(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldCPUThreads, v))
}

// CPUTopology applies equality check predicate on the "cpu_topology" field. It's identical to CPUTopologyEQ.
func CPUTopology(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldCPUTopology, v))
}

// MgmtIP applies equality check predicate on the "mgmt_ip" field. It's identical to MgmtIPEQ.
func MgmtIP(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldMgmtIP, v))
}

// BmcIP applies equality check predicate on the "bmc_ip" field. It's identical to BmcIPEQ.
func BmcIP(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldBmcIP, v))
}

// BmcUsername applies equality check predicate on the "bmc_username" field. It's identical to BmcUsernameEQ.
func BmcUsername(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldBmcUsername, v))
}

// BmcPassword applies equality check predicate on the "bmc_password" field. It's identical to BmcPasswordEQ.
func BmcPassword(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldBmcPassword, v))
}

// PxeMAC applies equality check predicate on the "pxe_mac" field. It's identical to PxeMACEQ.
func PxeMAC(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldPxeMAC, v))
}

// Hostname applies equality check predicate on the "hostname" field. It's identical to HostnameEQ.
func Hostname(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldHostname, v))
}

// ProductName applies equality check predicate on the "product_name" field. It's identical to ProductNameEQ.
func ProductName(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldProductName, v))
}

// BiosVersion applies equality check predicate on the "bios_version" field. It's identical to BiosVersionEQ.
func BiosVersion(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldBiosVersion, v))
}

// BiosReleaseDate applies equality check predicate on the "bios_release_date" field. It's identical to BiosReleaseDateEQ.
func BiosReleaseDate(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldBiosReleaseDate, v))
}

// BiosVendor applies equality check predicate on the "bios_vendor" field. It's identical to BiosVendorEQ.
func BiosVendor(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldBiosVendor, v))
}

// Metadata applies equality check predicate on the "metadata" field. It's identical to MetadataEQ.
func Metadata(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldMetadata, v))
}

// PowerStatus applies equality check predicate on the "power_status" field. It's identical to PowerStatusEQ.
func PowerStatus(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldPowerStatus, v))
}

// PowerStatusTimestamp applies equality check predicate on the "power_status_timestamp" field. It's identical to PowerStatusTimestampEQ.
func PowerStatusTimestamp(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldPowerStatusTimestamp, v))
}

// PowerOnTime applies equality check predicate on the "power_on_time" field. It's identical to PowerOnTimeEQ.
func PowerOnTime(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldPowerOnTime, v))
}

// HostStatus applies equality check predicate on the "host_status" field. It's identical to HostStatusEQ.
func HostStatus(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldHostStatus, v))
}

// HostStatusTimestamp applies equality check predicate on the "host_status_timestamp" field. It's identical to HostStatusTimestampEQ.
func HostStatusTimestamp(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldHostStatusTimestamp, v))
}

// OnboardingStatus applies equality check predicate on the "onboarding_status" field. It's identical to OnboardingStatusEQ.
func OnboardingStatus(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldOnboardingStatus, v))
}

// OnboardingStatusTimestamp applies equality check predicate on the "onboarding_status_timestamp" field. It's identical to OnboardingStatusTimestampEQ.
func OnboardingStatusTimestamp(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldOnboardingStatusTimestamp, v))
}

// RegistrationStatus applies equality check predicate on the "registration_status" field. It's identical to RegistrationStatusEQ.
func RegistrationStatus(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldRegistrationStatus, v))
}

// RegistrationStatusTimestamp applies equality check predicate on the "registration_status_timestamp" field. It's identical to RegistrationStatusTimestampEQ.
func RegistrationStatusTimestamp(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldRegistrationStatusTimestamp, v))
}

// AmtSku applies equality check predicate on the "amt_sku" field. It's identical to AmtSkuEQ.
func AmtSku(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldAmtSku, v))
}

// AmtStatus applies equality check predicate on the "amt_status" field. It's identical to AmtStatusEQ.
func AmtStatus(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldAmtStatus, v))
}

// AmtStatusTimestamp applies equality check predicate on the "amt_status_timestamp" field. It's identical to AmtStatusTimestampEQ.
func AmtStatusTimestamp(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldAmtStatusTimestamp, v))
}

// UserLvmSize applies equality check predicate on the "user_lvm_size" field. It's identical to UserLvmSizeEQ.
func UserLvmSize(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldUserLvmSize, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldTenantID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldUpdatedAt, v))
}

// ResourceIDEQ applies the EQ predicate on the "resource_id" field.
func ResourceIDEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldResourceID, v))
}

// ResourceIDNEQ applies the NEQ predicate on the "resource_id" field.
func ResourceIDNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldResourceID, v))
}

// ResourceIDIn applies the In predicate on the "resource_id" field.
func ResourceIDIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldResourceID, vs...))
}

// ResourceIDNotIn applies the NotIn predicate on the "resource_id" field.
func ResourceIDNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldResourceID, vs...))
}

// ResourceIDGT applies the GT predicate on the "resource_id" field.
func ResourceIDGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldResourceID, v))
}

// ResourceIDGTE applies the GTE predicate on the "resource_id" field.
func ResourceIDGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldResourceID, v))
}

// ResourceIDLT applies the LT predicate on the "resource_id" field.
func ResourceIDLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldResourceID, v))
}

// ResourceIDLTE applies the LTE predicate on the "resource_id" field.
func ResourceIDLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldResourceID, v))
}

// ResourceIDContains applies the Contains predicate on the "resource_id" field.
func ResourceIDContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldResourceID, v))
}

// ResourceIDHasPrefix applies the HasPrefix predicate on the "resource_id" field.
func ResourceIDHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldResourceID, v))
}

// ResourceIDHasSuffix applies the HasSuffix predicate on the "resource_id" field.
func ResourceIDHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldResourceID, v))
}

// ResourceIDEqualFold applies the EqualFold predicate on the "resource_id" field.
func ResourceIDEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldResourceID, v))
}

// ResourceIDContainsFold applies the ContainsFold predicate on the "resource_id" field.
func ResourceIDContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldResourceID, v))
}

// KindEQ applies the EQ predicate on the "kind" field.
func KindEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldKind, v))
}

// KindNEQ applies the NEQ predicate on the "kind" field.
func KindNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldKind, v))
}

// KindIn applies the In predicate on the "kind" field.
func KindIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldKind, vs...))
}

// KindNotIn applies the NotIn predicate on the "kind" field.
func KindNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldKind, vs...))
}

// KindGT applies the GT predicate on the "kind" field.
func KindGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldKind, v))
}

// KindGTE applies the GTE predicate on the "kind" field.
func KindGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldKind, v))
}

// KindLT applies the LT predicate on the "kind" field.
func KindLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldKind, v))
}

// KindLTE applies the LTE predicate on the "kind" field.
func KindLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldKind, v))
}

// KindContains applies the Contains predicate on the "kind" field.
func KindContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldKind, v))
}

// KindHasPrefix applies the HasPrefix predicate on the "kind" field.
func KindHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldKind, v))
}

// KindHasSuffix applies the HasSuffix predicate on the "kind" field.
func KindHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldKind, v))
}

// KindIsNil applies the IsNil predicate on the "kind" field.
func KindIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldKind))
}

// KindNotNil applies the NotNil predicate on the "kind" field.
func KindNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldKind))
}

// KindEqualFold applies the EqualFold predicate on the "kind" field.
func KindEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldKind, v))
}

// KindContainsFold applies the ContainsFold predicate on the "kind" field.
func KindContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldKind, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldName, v))
}

// NameIsNil applies the IsNil predicate on the "name" field.
func NameIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldName))
}

// NameNotNil applies the NotNil predicate on the "name" field.
func NameNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldName))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldName, v))
}

// DesiredStateEQ applies the EQ predicate on the "desired_state" field.
func DesiredStateEQ(v DesiredState) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldDesiredState, v))
}

// DesiredStateNEQ applies the NEQ predicate on the "desired_state" field.
func DesiredStateNEQ(v DesiredState) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldDesiredState, v))
}

// DesiredStateIn applies the In predicate on the "desired_state" field.
func DesiredStateIn(vs ...DesiredState) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldDesiredState, vs...))
}

// DesiredStateNotIn applies the NotIn predicate on the "desired_state" field.
func DesiredStateNotIn(vs ...DesiredState) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldDesiredState, vs...))
}

// DesiredStateIsNil applies the IsNil predicate on the "desired_state" field.
func DesiredStateIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldDesiredState))
}

// DesiredStateNotNil applies the NotNil predicate on the "desired_state" field.
func DesiredStateNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldDesiredState))
}

// CurrentStateEQ applies the EQ predicate on the "current_state" field.
func CurrentStateEQ(v CurrentState) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldCurrentState, v))
}

// CurrentStateNEQ applies the NEQ predicate on the "current_state" field.
func CurrentStateNEQ(v CurrentState) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldCurrentState, v))
}

// CurrentStateIn applies the In predicate on the "current_state" field.
func CurrentStateIn(vs ...CurrentState) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldCurrentState, vs...))
}

// CurrentStateNotIn applies the NotIn predicate on the "current_state" field.
func CurrentStateNotIn(vs ...CurrentState) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldCurrentState, vs...))
}

// CurrentStateIsNil applies the IsNil predicate on the "current_state" field.
func CurrentStateIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldCurrentState))
}

// CurrentStateNotNil applies the NotNil predicate on the "current_state" field.
func CurrentStateNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldCurrentState))
}

// NoteEQ applies the EQ predicate on the "note" field.
func NoteEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldNote, v))
}

// NoteNEQ applies the NEQ predicate on the "note" field.
func NoteNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldNote, v))
}

// NoteIn applies the In predicate on the "note" field.
func NoteIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldNote, vs...))
}

// NoteNotIn applies the NotIn predicate on the "note" field.
func NoteNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldNote, vs...))
}

// NoteGT applies the GT predicate on the "note" field.
func NoteGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldNote, v))
}

// NoteGTE applies the GTE predicate on the "note" field.
func NoteGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldNote, v))
}

// NoteLT applies the LT predicate on the "note" field.
func NoteLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldNote, v))
}

// NoteLTE applies the LTE predicate on the "note" field.
func NoteLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldNote, v))
}

// NoteContains applies the Contains predicate on the "note" field.
func NoteContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldNote, v))
}

// NoteHasPrefix applies the HasPrefix predicate on the "note" field.
func NoteHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldNote, v))
}

// NoteHasSuffix applies the HasSuffix predicate on the "note" field.
func NoteHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldNote, v))
}

// NoteIsNil applies the IsNil predicate on the "note" field.
func NoteIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldNote))
}

// NoteNotNil applies the NotNil predicate on the "note" field.
func NoteNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldNote))
}

// NoteEqualFold applies the EqualFold predicate on the "note" field.
func NoteEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldNote, v))
}

// NoteContainsFold applies the ContainsFold predicate on the "note" field.
func NoteContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldNote, v))
}

// HardwareKindEQ applies the EQ predicate on the "hardware_kind" field.
func HardwareKindEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldHardwareKind, v))
}

// HardwareKindNEQ applies the NEQ predicate on the "hardware_kind" field.
func HardwareKindNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldHardwareKind, v))
}

// HardwareKindIn applies the In predicate on the "hardware_kind" field.
func HardwareKindIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldHardwareKind, vs...))
}

// HardwareKindNotIn applies the NotIn predicate on the "hardware_kind" field.
func HardwareKindNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldHardwareKind, vs...))
}

// HardwareKindGT applies the GT predicate on the "hardware_kind" field.
func HardwareKindGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldHardwareKind, v))
}

// HardwareKindGTE applies the GTE predicate on the "hardware_kind" field.
func HardwareKindGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldHardwareKind, v))
}

// HardwareKindLT applies the LT predicate on the "hardware_kind" field.
func HardwareKindLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldHardwareKind, v))
}

// HardwareKindLTE applies the LTE predicate on the "hardware_kind" field.
func HardwareKindLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldHardwareKind, v))
}

// HardwareKindContains applies the Contains predicate on the "hardware_kind" field.
func HardwareKindContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldHardwareKind, v))
}

// HardwareKindHasPrefix applies the HasPrefix predicate on the "hardware_kind" field.
func HardwareKindHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldHardwareKind, v))
}

// HardwareKindHasSuffix applies the HasSuffix predicate on the "hardware_kind" field.
func HardwareKindHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldHardwareKind, v))
}

// HardwareKindIsNil applies the IsNil predicate on the "hardware_kind" field.
func HardwareKindIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldHardwareKind))
}

// HardwareKindNotNil applies the NotNil predicate on the "hardware_kind" field.
func HardwareKindNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldHardwareKind))
}

// HardwareKindEqualFold applies the EqualFold predicate on the "hardware_kind" field.
func HardwareKindEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldHardwareKind, v))
}

// HardwareKindContainsFold applies the ContainsFold predicate on the "hardware_kind" field.
func HardwareKindContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldHardwareKind, v))
}

// SerialNumberEQ applies the EQ predicate on the "serial_number" field.
func SerialNumberEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldSerialNumber, v))
}

// SerialNumberNEQ applies the NEQ predicate on the "serial_number" field.
func SerialNumberNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldSerialNumber, v))
}

// SerialNumberIn applies the In predicate on the "serial_number" field.
func SerialNumberIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldSerialNumber, vs...))
}

// SerialNumberNotIn applies the NotIn predicate on the "serial_number" field.
func SerialNumberNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldSerialNumber, vs...))
}

// SerialNumberGT applies the GT predicate on the "serial_number" field.
func SerialNumberGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldSerialNumber, v))
}

// SerialNumberGTE applies the GTE predicate on the "serial_number" field.
func SerialNumberGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldSerialNumber, v))
}

// SerialNumberLT applies the LT predicate on the "serial_number" field.
func SerialNumberLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldSerialNumber, v))
}

// SerialNumberLTE applies the LTE predicate on the "serial_number" field.
func SerialNumberLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldSerialNumber, v))
}

// SerialNumberContains applies the Contains predicate on the "serial_number" field.
func SerialNumberContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldSerialNumber, v))
}

// SerialNumberHasPrefix applies the HasPrefix predicate on the "serial_number" field.
func SerialNumberHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldSerialNumber, v))
}

// SerialNumberHasSuffix applies the HasSuffix predicate on the "serial_number" field.
func SerialNumberHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldSerialNumber, v))
}

// SerialNumberIsNil applies the IsNil predicate on the "serial_number" field.
func SerialNumberIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldSerialNumber))
}

// SerialNumberNotNil applies the NotNil predicate on the "serial_number" field.
func SerialNumberNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldSerialNumber))
}

// SerialNumberEqualFold applies the EqualFold predicate on the "serial_number" field.
func SerialNumberEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldSerialNumber, v))
}

// SerialNumberContainsFold applies the ContainsFold predicate on the "serial_number" field.
func SerialNumberContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldSerialNumber, v))
}

// UUIDEQ applies the EQ predicate on the "uuid" field.
func UUIDEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldUUID, v))
}

// UUIDNEQ applies the NEQ predicate on the "uuid" field.
func UUIDNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldUUID, v))
}

// UUIDIn applies the In predicate on the "uuid" field.
func UUIDIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldUUID, vs...))
}

// UUIDNotIn applies the NotIn predicate on the "uuid" field.
func UUIDNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldUUID, vs...))
}

// UUIDGT applies the GT predicate on the "uuid" field.
func UUIDGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldUUID, v))
}

// UUIDGTE applies the GTE predicate on the "uuid" field.
func UUIDGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldUUID, v))
}

// UUIDLT applies the LT predicate on the "uuid" field.
func UUIDLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldUUID, v))
}

// UUIDLTE applies the LTE predicate on the "uuid" field.
func UUIDLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldUUID, v))
}

// UUIDContains applies the Contains predicate on the "uuid" field.
func UUIDContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldUUID, v))
}

// UUIDHasPrefix applies the HasPrefix predicate on the "uuid" field.
func UUIDHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldUUID, v))
}

// UUIDHasSuffix applies the HasSuffix predicate on the "uuid" field.
func UUIDHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldUUID, v))
}

// UUIDIsNil applies the IsNil predicate on the "uuid" field.
func UUIDIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldUUID))
}

// UUIDNotNil applies the NotNil predicate on the "uuid" field.
func UUIDNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldUUID))
}

// UUIDEqualFold applies the EqualFold predicate on the "uuid" field.
func UUIDEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldUUID, v))
}

// UUIDContainsFold applies the ContainsFold predicate on the "uuid" field.
func UUIDContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldUUID, v))
}

// MemoryBytesEQ applies the EQ predicate on the "memory_bytes" field.
func MemoryBytesEQ(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldMemoryBytes, v))
}

// MemoryBytesNEQ applies the NEQ predicate on the "memory_bytes" field.
func MemoryBytesNEQ(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldMemoryBytes, v))
}

// MemoryBytesIn applies the In predicate on the "memory_bytes" field.
func MemoryBytesIn(vs ...uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldMemoryBytes, vs...))
}

// MemoryBytesNotIn applies the NotIn predicate on the "memory_bytes" field.
func MemoryBytesNotIn(vs ...uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldMemoryBytes, vs...))
}

// MemoryBytesGT applies the GT predicate on the "memory_bytes" field.
func MemoryBytesGT(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldMemoryBytes, v))
}

// MemoryBytesGTE applies the GTE predicate on the "memory_bytes" field.
func MemoryBytesGTE(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldMemoryBytes, v))
}

// MemoryBytesLT applies the LT predicate on the "memory_bytes" field.
func MemoryBytesLT(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldMemoryBytes, v))
}

// MemoryBytesLTE applies the LTE predicate on the "memory_bytes" field.
func MemoryBytesLTE(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldMemoryBytes, v))
}

// MemoryBytesIsNil applies the IsNil predicate on the "memory_bytes" field.
func MemoryBytesIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldMemoryBytes))
}

// MemoryBytesNotNil applies the NotNil predicate on the "memory_bytes" field.
func MemoryBytesNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldMemoryBytes))
}

// CPUModelEQ applies the EQ predicate on the "cpu_model" field.
func CPUModelEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldCPUModel, v))
}

// CPUModelNEQ applies the NEQ predicate on the "cpu_model" field.
func CPUModelNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldCPUModel, v))
}

// CPUModelIn applies the In predicate on the "cpu_model" field.
func CPUModelIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldCPUModel, vs...))
}

// CPUModelNotIn applies the NotIn predicate on the "cpu_model" field.
func CPUModelNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldCPUModel, vs...))
}

// CPUModelGT applies the GT predicate on the "cpu_model" field.
func CPUModelGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldCPUModel, v))
}

// CPUModelGTE applies the GTE predicate on the "cpu_model" field.
func CPUModelGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldCPUModel, v))
}

// CPUModelLT applies the LT predicate on the "cpu_model" field.
func CPUModelLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldCPUModel, v))
}

// CPUModelLTE applies the LTE predicate on the "cpu_model" field.
func CPUModelLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldCPUModel, v))
}

// CPUModelContains applies the Contains predicate on the "cpu_model" field.
func CPUModelContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldCPUModel, v))
}

// CPUModelHasPrefix applies the HasPrefix predicate on the "cpu_model" field.
func CPUModelHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldCPUModel, v))
}

// CPUModelHasSuffix applies the HasSuffix predicate on the "cpu_model" field.
func CPUModelHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldCPUModel, v))
}

// CPUModelIsNil applies the IsNil predicate on the "cpu_model" field.
func CPUModelIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldCPUModel))
}

// CPUModelNotNil applies the NotNil predicate on the "cpu_model" field.
func CPUModelNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldCPUModel))
}

// CPUModelEqualFold applies the EqualFold predicate on the "cpu_model" field.
func CPUModelEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldCPUModel, v))
}

// CPUModelContainsFold applies the ContainsFold predicate on the "cpu_model" field.
func CPUModelContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldCPUModel, v))
}

// CPUSocketsEQ applies the EQ predicate on the "cpu_sockets" field.
func CPUSocketsEQ(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldCPUSockets, v))
}

// CPUSocketsNEQ applies the NEQ predicate on the "cpu_sockets" field.
func CPUSocketsNEQ(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldCPUSockets, v))
}

// CPUSocketsIn applies the In predicate on the "cpu_sockets" field.
func CPUSocketsIn(vs ...uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldCPUSockets, vs...))
}

// CPUSocketsNotIn applies the NotIn predicate on the "cpu_sockets" field.
func CPUSocketsNotIn(vs ...uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldCPUSockets, vs...))
}

// CPUSocketsGT applies the GT predicate on the "cpu_sockets" field.
func CPUSocketsGT(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldCPUSockets, v))
}

// CPUSocketsGTE applies the GTE predicate on the "cpu_sockets" field.
func CPUSocketsGTE(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldCPUSockets, v))
}

// CPUSocketsLT applies the LT predicate on the "cpu_sockets" field.
func CPUSocketsLT(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldCPUSockets, v))
}

// CPUSocketsLTE applies the LTE predicate on the "cpu_sockets" field.
func CPUSocketsLTE(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldCPUSockets, v))
}

// CPUSocketsIsNil applies the IsNil predicate on the "cpu_sockets" field.
func CPUSocketsIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldCPUSockets))
}

// CPUSocketsNotNil applies the NotNil predicate on the "cpu_sockets" field.
func CPUSocketsNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldCPUSockets))
}

// CPUCoresEQ applies the EQ predicate on the "cpu_cores" field.
func CPUCoresEQ(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldCPUCores, v))
}

// CPUCoresNEQ applies the NEQ predicate on the "cpu_cores" field.
func CPUCoresNEQ(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldCPUCores, v))
}

// CPUCoresIn applies the In predicate on the "cpu_cores" field.
func CPUCoresIn(vs ...uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldCPUCores, vs...))
}

// CPUCoresNotIn applies the NotIn predicate on the "cpu_cores" field.
func CPUCoresNotIn(vs ...uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldCPUCores, vs...))
}

// CPUCoresGT applies the GT predicate on the "cpu_cores" field.
func CPUCoresGT(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldCPUCores, v))
}

// CPUCoresGTE applies the GTE predicate on the "cpu_cores" field.
func CPUCoresGTE(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldCPUCores, v))
}

// CPUCoresLT applies the LT predicate on the "cpu_cores" field.
func CPUCoresLT(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldCPUCores, v))
}

// CPUCoresLTE applies the LTE predicate on the "cpu_cores" field.
func CPUCoresLTE(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldCPUCores, v))
}

// CPUCoresIsNil applies the IsNil predicate on the "cpu_cores" field.
func CPUCoresIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldCPUCores))
}

// CPUCoresNotNil applies the NotNil predicate on the "cpu_cores" field.
func CPUCoresNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldCPUCores))
}

// CPUCapabilitiesEQ applies the EQ predicate on the "cpu_capabilities" field.
func CPUCapabilitiesEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldCPUCapabilities, v))
}

// CPUCapabilitiesNEQ applies the NEQ predicate on the "cpu_capabilities" field.
func CPUCapabilitiesNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldCPUCapabilities, v))
}

// CPUCapabilitiesIn applies the In predicate on the "cpu_capabilities" field.
func CPUCapabilitiesIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldCPUCapabilities, vs...))
}

// CPUCapabilitiesNotIn applies the NotIn predicate on the "cpu_capabilities" field.
func CPUCapabilitiesNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldCPUCapabilities, vs...))
}

// CPUCapabilitiesGT applies the GT predicate on the "cpu_capabilities" field.
func CPUCapabilitiesGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldCPUCapabilities, v))
}

// CPUCapabilitiesGTE applies the GTE predicate on the "cpu_capabilities" field.
func CPUCapabilitiesGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldCPUCapabilities, v))
}

// CPUCapabilitiesLT applies the LT predicate on the "cpu_capabilities" field.
func CPUCapabilitiesLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldCPUCapabilities, v))
}

// CPUCapabilitiesLTE applies the LTE predicate on the "cpu_capabilities" field.
func CPUCapabilitiesLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldCPUCapabilities, v))
}

// CPUCapabilitiesContains applies the Contains predicate on the "cpu_capabilities" field.
func CPUCapabilitiesContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldCPUCapabilities, v))
}

// CPUCapabilitiesHasPrefix applies the HasPrefix predicate on the "cpu_capabilities" field.
func CPUCapabilitiesHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldCPUCapabilities, v))
}

// CPUCapabilitiesHasSuffix applies the HasSuffix predicate on the "cpu_capabilities" field.
func CPUCapabilitiesHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldCPUCapabilities, v))
}

// CPUCapabilitiesIsNil applies the IsNil predicate on the "cpu_capabilities" field.
func CPUCapabilitiesIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldCPUCapabilities))
}

// CPUCapabilitiesNotNil applies the NotNil predicate on the "cpu_capabilities" field.
func CPUCapabilitiesNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldCPUCapabilities))
}

// CPUCapabilitiesEqualFold applies the EqualFold predicate on the "cpu_capabilities" field.
func CPUCapabilitiesEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldCPUCapabilities, v))
}

// CPUCapabilitiesContainsFold applies the ContainsFold predicate on the "cpu_capabilities" field.
func CPUCapabilitiesContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldCPUCapabilities, v))
}

// CPUArchitectureEQ applies the EQ predicate on the "cpu_architecture" field.
func CPUArchitectureEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldCPUArchitecture, v))
}

// CPUArchitectureNEQ applies the NEQ predicate on the "cpu_architecture" field.
func CPUArchitectureNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldCPUArchitecture, v))
}

// CPUArchitectureIn applies the In predicate on the "cpu_architecture" field.
func CPUArchitectureIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldCPUArchitecture, vs...))
}

// CPUArchitectureNotIn applies the NotIn predicate on the "cpu_architecture" field.
func CPUArchitectureNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldCPUArchitecture, vs...))
}

// CPUArchitectureGT applies the GT predicate on the "cpu_architecture" field.
func CPUArchitectureGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldCPUArchitecture, v))
}

// CPUArchitectureGTE applies the GTE predicate on the "cpu_architecture" field.
func CPUArchitectureGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldCPUArchitecture, v))
}

// CPUArchitectureLT applies the LT predicate on the "cpu_architecture" field.
func CPUArchitectureLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldCPUArchitecture, v))
}

// CPUArchitectureLTE applies the LTE predicate on the "cpu_architecture" field.
func CPUArchitectureLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldCPUArchitecture, v))
}

// CPUArchitectureContains applies the Contains predicate on the "cpu_architecture" field.
func CPUArchitectureContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldCPUArchitecture, v))
}

// CPUArchitectureHasPrefix applies the HasPrefix predicate on the "cpu_architecture" field.
func CPUArchitectureHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldCPUArchitecture, v))
}

// CPUArchitectureHasSuffix applies the HasSuffix predicate on the "cpu_architecture" field.
func CPUArchitectureHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldCPUArchitecture, v))
}

// CPUArchitectureIsNil applies the IsNil predicate on the "cpu_architecture" field.
func CPUArchitectureIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldCPUArchitecture))
}

// CPUArchitectureNotNil applies the NotNil predicate on the "cpu_architecture" field.
func CPUArchitectureNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldCPUArchitecture))
}

// CPUArchitectureEqualFold applies the EqualFold predicate on the "cpu_architecture" field.
func CPUArchitectureEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldCPUArchitecture, v))
}

// CPUArchitectureContainsFold applies the ContainsFold predicate on the "cpu_architecture" field.
func CPUArchitectureContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldCPUArchitecture, v))
}

// CPUThreadsEQ applies the EQ predicate on the "cpu_threads" field.
func CPUThreadsEQ(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldCPUThreads, v))
}

// CPUThreadsNEQ applies the NEQ predicate on the "cpu_threads" field.
func CPUThreadsNEQ(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldCPUThreads, v))
}

// CPUThreadsIn applies the In predicate on the "cpu_threads" field.
func CPUThreadsIn(vs ...uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldCPUThreads, vs...))
}

// CPUThreadsNotIn applies the NotIn predicate on the "cpu_threads" field.
func CPUThreadsNotIn(vs ...uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldCPUThreads, vs...))
}

// CPUThreadsGT applies the GT predicate on the "cpu_threads" field.
func CPUThreadsGT(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldCPUThreads, v))
}

// CPUThreadsGTE applies the GTE predicate on the "cpu_threads" field.
func CPUThreadsGTE(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldCPUThreads, v))
}

// CPUThreadsLT applies the LT predicate on the "cpu_threads" field.
func CPUThreadsLT(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldCPUThreads, v))
}

// CPUThreadsLTE applies the LTE predicate on the "cpu_threads" field.
func CPUThreadsLTE(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldCPUThreads, v))
}

// CPUThreadsIsNil applies the IsNil predicate on the "cpu_threads" field.
func CPUThreadsIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldCPUThreads))
}

// CPUThreadsNotNil applies the NotNil predicate on the "cpu_threads" field.
func CPUThreadsNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldCPUThreads))
}

// CPUTopologyEQ applies the EQ predicate on the "cpu_topology" field.
func CPUTopologyEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldCPUTopology, v))
}

// CPUTopologyNEQ applies the NEQ predicate on the "cpu_topology" field.
func CPUTopologyNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldCPUTopology, v))
}

// CPUTopologyIn applies the In predicate on the "cpu_topology" field.
func CPUTopologyIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldCPUTopology, vs...))
}

// CPUTopologyNotIn applies the NotIn predicate on the "cpu_topology" field.
func CPUTopologyNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldCPUTopology, vs...))
}

// CPUTopologyGT applies the GT predicate on the "cpu_topology" field.
func CPUTopologyGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldCPUTopology, v))
}

// CPUTopologyGTE applies the GTE predicate on the "cpu_topology" field.
func CPUTopologyGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldCPUTopology, v))
}

// CPUTopologyLT applies the LT predicate on the "cpu_topology" field.
func CPUTopologyLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldCPUTopology, v))
}

// CPUTopologyLTE applies the LTE predicate on the "cpu_topology" field.
func CPUTopologyLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldCPUTopology, v))
}

// CPUTopologyContains applies the Contains predicate on the "cpu_topology" field.
func CPUTopologyContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldCPUTopology, v))
}

// CPUTopologyHasPrefix applies the HasPrefix predicate on the "cpu_topology" field.
func CPUTopologyHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldCPUTopology, v))
}

// CPUTopologyHasSuffix applies the HasSuffix predicate on the "cpu_topology" field.
func CPUTopologyHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldCPUTopology, v))
}

// CPUTopologyIsNil applies the IsNil predicate on the "cpu_topology" field.
func CPUTopologyIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldCPUTopology))
}

// CPUTopologyNotNil applies the NotNil predicate on the "cpu_topology" field.
func CPUTopologyNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldCPUTopology))
}

// CPUTopologyEqualFold applies the EqualFold predicate on the "cpu_topology" field.
func CPUTopologyEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldCPUTopology, v))
}

// CPUTopologyContainsFold applies the ContainsFold predicate on the "cpu_topology" field.
func CPUTopologyContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldCPUTopology, v))
}

// MgmtIPEQ applies the EQ predicate on the "mgmt_ip" field.
func MgmtIPEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldMgmtIP, v))
}

// MgmtIPNEQ applies the NEQ predicate on the "mgmt_ip" field.
func MgmtIPNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldMgmtIP, v))
}

// MgmtIPIn applies the In predicate on the "mgmt_ip" field.
func MgmtIPIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldMgmtIP, vs...))
}

// MgmtIPNotIn applies the NotIn predicate on the "mgmt_ip" field.
func MgmtIPNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldMgmtIP, vs...))
}

// MgmtIPGT applies the GT predicate on the "mgmt_ip" field.
func MgmtIPGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldMgmtIP, v))
}

// MgmtIPGTE applies the GTE predicate on the "mgmt_ip" field.
func MgmtIPGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldMgmtIP, v))
}

// MgmtIPLT applies the LT predicate on the "mgmt_ip" field.
func MgmtIPLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldMgmtIP, v))
}

// MgmtIPLTE applies the LTE predicate on the "mgmt_ip" field.
func MgmtIPLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldMgmtIP, v))
}

// MgmtIPContains applies the Contains predicate on the "mgmt_ip" field.
func MgmtIPContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldMgmtIP, v))
}

// MgmtIPHasPrefix applies the HasPrefix predicate on the "mgmt_ip" field.
func MgmtIPHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldMgmtIP, v))
}

// MgmtIPHasSuffix applies the HasSuffix predicate on the "mgmt_ip" field.
func MgmtIPHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldMgmtIP, v))
}

// MgmtIPIsNil applies the IsNil predicate on the "mgmt_ip" field.
func MgmtIPIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldMgmtIP))
}

// MgmtIPNotNil applies the NotNil predicate on the "mgmt_ip" field.
func MgmtIPNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldMgmtIP))
}

// MgmtIPEqualFold applies the EqualFold predicate on the "mgmt_ip" field.
func MgmtIPEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldMgmtIP, v))
}

// MgmtIPContainsFold applies the ContainsFold predicate on the "mgmt_ip" field.
func MgmtIPContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldMgmtIP, v))
}

// BmcKindEQ applies the EQ predicate on the "bmc_kind" field.
func BmcKindEQ(v BmcKind) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldBmcKind, v))
}

// BmcKindNEQ applies the NEQ predicate on the "bmc_kind" field.
func BmcKindNEQ(v BmcKind) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldBmcKind, v))
}

// BmcKindIn applies the In predicate on the "bmc_kind" field.
func BmcKindIn(vs ...BmcKind) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldBmcKind, vs...))
}

// BmcKindNotIn applies the NotIn predicate on the "bmc_kind" field.
func BmcKindNotIn(vs ...BmcKind) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldBmcKind, vs...))
}

// BmcKindIsNil applies the IsNil predicate on the "bmc_kind" field.
func BmcKindIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldBmcKind))
}

// BmcKindNotNil applies the NotNil predicate on the "bmc_kind" field.
func BmcKindNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldBmcKind))
}

// BmcIPEQ applies the EQ predicate on the "bmc_ip" field.
func BmcIPEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldBmcIP, v))
}

// BmcIPNEQ applies the NEQ predicate on the "bmc_ip" field.
func BmcIPNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldBmcIP, v))
}

// BmcIPIn applies the In predicate on the "bmc_ip" field.
func BmcIPIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldBmcIP, vs...))
}

// BmcIPNotIn applies the NotIn predicate on the "bmc_ip" field.
func BmcIPNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldBmcIP, vs...))
}

// BmcIPGT applies the GT predicate on the "bmc_ip" field.
func BmcIPGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldBmcIP, v))
}

// BmcIPGTE applies the GTE predicate on the "bmc_ip" field.
func BmcIPGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldBmcIP, v))
}

// BmcIPLT applies the LT predicate on the "bmc_ip" field.
func BmcIPLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldBmcIP, v))
}

// BmcIPLTE applies the LTE predicate on the "bmc_ip" field.
func BmcIPLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldBmcIP, v))
}

// BmcIPContains applies the Contains predicate on the "bmc_ip" field.
func BmcIPContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldBmcIP, v))
}

// BmcIPHasPrefix applies the HasPrefix predicate on the "bmc_ip" field.
func BmcIPHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldBmcIP, v))
}

// BmcIPHasSuffix applies the HasSuffix predicate on the "bmc_ip" field.
func BmcIPHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldBmcIP, v))
}

// BmcIPIsNil applies the IsNil predicate on the "bmc_ip" field.
func BmcIPIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldBmcIP))
}

// BmcIPNotNil applies the NotNil predicate on the "bmc_ip" field.
func BmcIPNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldBmcIP))
}

// BmcIPEqualFold applies the EqualFold predicate on the "bmc_ip" field.
func BmcIPEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldBmcIP, v))
}

// BmcIPContainsFold applies the ContainsFold predicate on the "bmc_ip" field.
func BmcIPContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldBmcIP, v))
}

// BmcUsernameEQ applies the EQ predicate on the "bmc_username" field.
func BmcUsernameEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldBmcUsername, v))
}

// BmcUsernameNEQ applies the NEQ predicate on the "bmc_username" field.
func BmcUsernameNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldBmcUsername, v))
}

// BmcUsernameIn applies the In predicate on the "bmc_username" field.
func BmcUsernameIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldBmcUsername, vs...))
}

// BmcUsernameNotIn applies the NotIn predicate on the "bmc_username" field.
func BmcUsernameNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldBmcUsername, vs...))
}

// BmcUsernameGT applies the GT predicate on the "bmc_username" field.
func BmcUsernameGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldBmcUsername, v))
}

// BmcUsernameGTE applies the GTE predicate on the "bmc_username" field.
func BmcUsernameGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldBmcUsername, v))
}

// BmcUsernameLT applies the LT predicate on the "bmc_username" field.
func BmcUsernameLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldBmcUsername, v))
}

// BmcUsernameLTE applies the LTE predicate on the "bmc_username" field.
func BmcUsernameLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldBmcUsername, v))
}

// BmcUsernameContains applies the Contains predicate on the "bmc_username" field.
func BmcUsernameContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldBmcUsername, v))
}

// BmcUsernameHasPrefix applies the HasPrefix predicate on the "bmc_username" field.
func BmcUsernameHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldBmcUsername, v))
}

// BmcUsernameHasSuffix applies the HasSuffix predicate on the "bmc_username" field.
func BmcUsernameHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldBmcUsername, v))
}

// BmcUsernameIsNil applies the IsNil predicate on the "bmc_username" field.
func BmcUsernameIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldBmcUsername))
}

// BmcUsernameNotNil applies the NotNil predicate on the "bmc_username" field.
func BmcUsernameNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldBmcUsername))
}

// BmcUsernameEqualFold applies the EqualFold predicate on the "bmc_username" field.
func BmcUsernameEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldBmcUsername, v))
}

// BmcUsernameContainsFold applies the ContainsFold predicate on the "bmc_username" field.
func BmcUsernameContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldBmcUsername, v))
}

// BmcPasswordEQ applies the EQ predicate on the "bmc_password" field.
func BmcPasswordEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldBmcPassword, v))
}

// BmcPasswordNEQ applies the NEQ predicate on the "bmc_password" field.
func BmcPasswordNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldBmcPassword, v))
}

// BmcPasswordIn applies the In predicate on the "bmc_password" field.
func BmcPasswordIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldBmcPassword, vs...))
}

// BmcPasswordNotIn applies the NotIn predicate on the "bmc_password" field.
func BmcPasswordNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldBmcPassword, vs...))
}

// BmcPasswordGT applies the GT predicate on the "bmc_password" field.
func BmcPasswordGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldBmcPassword, v))
}

// BmcPasswordGTE applies the GTE predicate on the "bmc_password" field.
func BmcPasswordGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldBmcPassword, v))
}

// BmcPasswordLT applies the LT predicate on the "bmc_password" field.
func BmcPasswordLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldBmcPassword, v))
}

// BmcPasswordLTE applies the LTE predicate on the "bmc_password" field.
func BmcPasswordLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldBmcPassword, v))
}

// BmcPasswordContains applies the Contains predicate on the "bmc_password" field.
func BmcPasswordContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldBmcPassword, v))
}

// BmcPasswordHasPrefix applies the HasPrefix predicate on the "bmc_password" field.
func BmcPasswordHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldBmcPassword, v))
}

// BmcPasswordHasSuffix applies the HasSuffix predicate on the "bmc_password" field.
func BmcPasswordHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldBmcPassword, v))
}

// BmcPasswordIsNil applies the IsNil predicate on the "bmc_password" field.
func BmcPasswordIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldBmcPassword))
}

// BmcPasswordNotNil applies the NotNil predicate on the "bmc_password" field.
func BmcPasswordNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldBmcPassword))
}

// BmcPasswordEqualFold applies the EqualFold predicate on the "bmc_password" field.
func BmcPasswordEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldBmcPassword, v))
}

// BmcPasswordContainsFold applies the ContainsFold predicate on the "bmc_password" field.
func BmcPasswordContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldBmcPassword, v))
}

// PxeMACEQ applies the EQ predicate on the "pxe_mac" field.
func PxeMACEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldPxeMAC, v))
}

// PxeMACNEQ applies the NEQ predicate on the "pxe_mac" field.
func PxeMACNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldPxeMAC, v))
}

// PxeMACIn applies the In predicate on the "pxe_mac" field.
func PxeMACIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldPxeMAC, vs...))
}

// PxeMACNotIn applies the NotIn predicate on the "pxe_mac" field.
func PxeMACNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldPxeMAC, vs...))
}

// PxeMACGT applies the GT predicate on the "pxe_mac" field.
func PxeMACGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldPxeMAC, v))
}

// PxeMACGTE applies the GTE predicate on the "pxe_mac" field.
func PxeMACGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldPxeMAC, v))
}

// PxeMACLT applies the LT predicate on the "pxe_mac" field.
func PxeMACLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldPxeMAC, v))
}

// PxeMACLTE applies the LTE predicate on the "pxe_mac" field.
func PxeMACLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldPxeMAC, v))
}

// PxeMACContains applies the Contains predicate on the "pxe_mac" field.
func PxeMACContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldPxeMAC, v))
}

// PxeMACHasPrefix applies the HasPrefix predicate on the "pxe_mac" field.
func PxeMACHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldPxeMAC, v))
}

// PxeMACHasSuffix applies the HasSuffix predicate on the "pxe_mac" field.
func PxeMACHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldPxeMAC, v))
}

// PxeMACIsNil applies the IsNil predicate on the "pxe_mac" field.
func PxeMACIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldPxeMAC))
}

// PxeMACNotNil applies the NotNil predicate on the "pxe_mac" field.
func PxeMACNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldPxeMAC))
}

// PxeMACEqualFold applies the EqualFold predicate on the "pxe_mac" field.
func PxeMACEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldPxeMAC, v))
}

// PxeMACContainsFold applies the ContainsFold predicate on the "pxe_mac" field.
func PxeMACContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldPxeMAC, v))
}

// HostnameEQ applies the EQ predicate on the "hostname" field.
func HostnameEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldHostname, v))
}

// HostnameNEQ applies the NEQ predicate on the "hostname" field.
func HostnameNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldHostname, v))
}

// HostnameIn applies the In predicate on the "hostname" field.
func HostnameIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldHostname, vs...))
}

// HostnameNotIn applies the NotIn predicate on the "hostname" field.
func HostnameNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldHostname, vs...))
}

// HostnameGT applies the GT predicate on the "hostname" field.
func HostnameGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldHostname, v))
}

// HostnameGTE applies the GTE predicate on the "hostname" field.
func HostnameGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldHostname, v))
}

// HostnameLT applies the LT predicate on the "hostname" field.
func HostnameLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldHostname, v))
}

// HostnameLTE applies the LTE predicate on the "hostname" field.
func HostnameLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldHostname, v))
}

// HostnameContains applies the Contains predicate on the "hostname" field.
func HostnameContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldHostname, v))
}

// HostnameHasPrefix applies the HasPrefix predicate on the "hostname" field.
func HostnameHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldHostname, v))
}

// HostnameHasSuffix applies the HasSuffix predicate on the "hostname" field.
func HostnameHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldHostname, v))
}

// HostnameIsNil applies the IsNil predicate on the "hostname" field.
func HostnameIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldHostname))
}

// HostnameNotNil applies the NotNil predicate on the "hostname" field.
func HostnameNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldHostname))
}

// HostnameEqualFold applies the EqualFold predicate on the "hostname" field.
func HostnameEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldHostname, v))
}

// HostnameContainsFold applies the ContainsFold predicate on the "hostname" field.
func HostnameContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldHostname, v))
}

// ProductNameEQ applies the EQ predicate on the "product_name" field.
func ProductNameEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldProductName, v))
}

// ProductNameNEQ applies the NEQ predicate on the "product_name" field.
func ProductNameNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldProductName, v))
}

// ProductNameIn applies the In predicate on the "product_name" field.
func ProductNameIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldProductName, vs...))
}

// ProductNameNotIn applies the NotIn predicate on the "product_name" field.
func ProductNameNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldProductName, vs...))
}

// ProductNameGT applies the GT predicate on the "product_name" field.
func ProductNameGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldProductName, v))
}

// ProductNameGTE applies the GTE predicate on the "product_name" field.
func ProductNameGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldProductName, v))
}

// ProductNameLT applies the LT predicate on the "product_name" field.
func ProductNameLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldProductName, v))
}

// ProductNameLTE applies the LTE predicate on the "product_name" field.
func ProductNameLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldProductName, v))
}

// ProductNameContains applies the Contains predicate on the "product_name" field.
func ProductNameContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldProductName, v))
}

// ProductNameHasPrefix applies the HasPrefix predicate on the "product_name" field.
func ProductNameHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldProductName, v))
}

// ProductNameHasSuffix applies the HasSuffix predicate on the "product_name" field.
func ProductNameHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldProductName, v))
}

// ProductNameIsNil applies the IsNil predicate on the "product_name" field.
func ProductNameIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldProductName))
}

// ProductNameNotNil applies the NotNil predicate on the "product_name" field.
func ProductNameNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldProductName))
}

// ProductNameEqualFold applies the EqualFold predicate on the "product_name" field.
func ProductNameEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldProductName, v))
}

// ProductNameContainsFold applies the ContainsFold predicate on the "product_name" field.
func ProductNameContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldProductName, v))
}

// BiosVersionEQ applies the EQ predicate on the "bios_version" field.
func BiosVersionEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldBiosVersion, v))
}

// BiosVersionNEQ applies the NEQ predicate on the "bios_version" field.
func BiosVersionNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldBiosVersion, v))
}

// BiosVersionIn applies the In predicate on the "bios_version" field.
func BiosVersionIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldBiosVersion, vs...))
}

// BiosVersionNotIn applies the NotIn predicate on the "bios_version" field.
func BiosVersionNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldBiosVersion, vs...))
}

// BiosVersionGT applies the GT predicate on the "bios_version" field.
func BiosVersionGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldBiosVersion, v))
}

// BiosVersionGTE applies the GTE predicate on the "bios_version" field.
func BiosVersionGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldBiosVersion, v))
}

// BiosVersionLT applies the LT predicate on the "bios_version" field.
func BiosVersionLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldBiosVersion, v))
}

// BiosVersionLTE applies the LTE predicate on the "bios_version" field.
func BiosVersionLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldBiosVersion, v))
}

// BiosVersionContains applies the Contains predicate on the "bios_version" field.
func BiosVersionContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldBiosVersion, v))
}

// BiosVersionHasPrefix applies the HasPrefix predicate on the "bios_version" field.
func BiosVersionHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldBiosVersion, v))
}

// BiosVersionHasSuffix applies the HasSuffix predicate on the "bios_version" field.
func BiosVersionHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldBiosVersion, v))
}

// BiosVersionIsNil applies the IsNil predicate on the "bios_version" field.
func BiosVersionIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldBiosVersion))
}

// BiosVersionNotNil applies the NotNil predicate on the "bios_version" field.
func BiosVersionNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldBiosVersion))
}

// BiosVersionEqualFold applies the EqualFold predicate on the "bios_version" field.
func BiosVersionEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldBiosVersion, v))
}

// BiosVersionContainsFold applies the ContainsFold predicate on the "bios_version" field.
func BiosVersionContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldBiosVersion, v))
}

// BiosReleaseDateEQ applies the EQ predicate on the "bios_release_date" field.
func BiosReleaseDateEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldBiosReleaseDate, v))
}

// BiosReleaseDateNEQ applies the NEQ predicate on the "bios_release_date" field.
func BiosReleaseDateNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldBiosReleaseDate, v))
}

// BiosReleaseDateIn applies the In predicate on the "bios_release_date" field.
func BiosReleaseDateIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldBiosReleaseDate, vs...))
}

// BiosReleaseDateNotIn applies the NotIn predicate on the "bios_release_date" field.
func BiosReleaseDateNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldBiosReleaseDate, vs...))
}

// BiosReleaseDateGT applies the GT predicate on the "bios_release_date" field.
func BiosReleaseDateGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldBiosReleaseDate, v))
}

// BiosReleaseDateGTE applies the GTE predicate on the "bios_release_date" field.
func BiosReleaseDateGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldBiosReleaseDate, v))
}

// BiosReleaseDateLT applies the LT predicate on the "bios_release_date" field.
func BiosReleaseDateLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldBiosReleaseDate, v))
}

// BiosReleaseDateLTE applies the LTE predicate on the "bios_release_date" field.
func BiosReleaseDateLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldBiosReleaseDate, v))
}

// BiosReleaseDateContains applies the Contains predicate on the "bios_release_date" field.
func BiosReleaseDateContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldBiosReleaseDate, v))
}

// BiosReleaseDateHasPrefix applies the HasPrefix predicate on the "bios_release_date" field.
func BiosReleaseDateHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldBiosReleaseDate, v))
}

// BiosReleaseDateHasSuffix applies the HasSuffix predicate on the "bios_release_date" field.
func BiosReleaseDateHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldBiosReleaseDate, v))
}

// BiosReleaseDateIsNil applies the IsNil predicate on the "bios_release_date" field.
func BiosReleaseDateIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldBiosReleaseDate))
}

// BiosReleaseDateNotNil applies the NotNil predicate on the "bios_release_date" field.
func BiosReleaseDateNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldBiosReleaseDate))
}

// BiosReleaseDateEqualFold applies the EqualFold predicate on the "bios_release_date" field.
func BiosReleaseDateEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldBiosReleaseDate, v))
}

// BiosReleaseDateContainsFold applies the ContainsFold predicate on the "bios_release_date" field.
func BiosReleaseDateContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldBiosReleaseDate, v))
}

// BiosVendorEQ applies the EQ predicate on the "bios_vendor" field.
func BiosVendorEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldBiosVendor, v))
}

// BiosVendorNEQ applies the NEQ predicate on the "bios_vendor" field.
func BiosVendorNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldBiosVendor, v))
}

// BiosVendorIn applies the In predicate on the "bios_vendor" field.
func BiosVendorIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldBiosVendor, vs...))
}

// BiosVendorNotIn applies the NotIn predicate on the "bios_vendor" field.
func BiosVendorNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldBiosVendor, vs...))
}

// BiosVendorGT applies the GT predicate on the "bios_vendor" field.
func BiosVendorGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldBiosVendor, v))
}

// BiosVendorGTE applies the GTE predicate on the "bios_vendor" field.
func BiosVendorGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldBiosVendor, v))
}

// BiosVendorLT applies the LT predicate on the "bios_vendor" field.
func BiosVendorLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldBiosVendor, v))
}

// BiosVendorLTE applies the LTE predicate on the "bios_vendor" field.
func BiosVendorLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldBiosVendor, v))
}

// BiosVendorContains applies the Contains predicate on the "bios_vendor" field.
func BiosVendorContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldBiosVendor, v))
}

// BiosVendorHasPrefix applies the HasPrefix predicate on the "bios_vendor" field.
func BiosVendorHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldBiosVendor, v))
}

// BiosVendorHasSuffix applies the HasSuffix predicate on the "bios_vendor" field.
func BiosVendorHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldBiosVendor, v))
}

// BiosVendorIsNil applies the IsNil predicate on the "bios_vendor" field.
func BiosVendorIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldBiosVendor))
}

// BiosVendorNotNil applies the NotNil predicate on the "bios_vendor" field.
func BiosVendorNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldBiosVendor))
}

// BiosVendorEqualFold applies the EqualFold predicate on the "bios_vendor" field.
func BiosVendorEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldBiosVendor, v))
}

// BiosVendorContainsFold applies the ContainsFold predicate on the "bios_vendor" field.
func BiosVendorContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldBiosVendor, v))
}

// MetadataEQ applies the EQ predicate on the "metadata" field.
func MetadataEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldMetadata, v))
}

// MetadataNEQ applies the NEQ predicate on the "metadata" field.
func MetadataNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldMetadata, v))
}

// MetadataIn applies the In predicate on the "metadata" field.
func MetadataIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldMetadata, vs...))
}

// MetadataNotIn applies the NotIn predicate on the "metadata" field.
func MetadataNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldMetadata, vs...))
}

// MetadataGT applies the GT predicate on the "metadata" field.
func MetadataGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldMetadata, v))
}

// MetadataGTE applies the GTE predicate on the "metadata" field.
func MetadataGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldMetadata, v))
}

// MetadataLT applies the LT predicate on the "metadata" field.
func MetadataLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldMetadata, v))
}

// MetadataLTE applies the LTE predicate on the "metadata" field.
func MetadataLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldMetadata, v))
}

// MetadataContains applies the Contains predicate on the "metadata" field.
func MetadataContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldMetadata, v))
}

// MetadataHasPrefix applies the HasPrefix predicate on the "metadata" field.
func MetadataHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldMetadata, v))
}

// MetadataHasSuffix applies the HasSuffix predicate on the "metadata" field.
func MetadataHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldMetadata, v))
}

// MetadataIsNil applies the IsNil predicate on the "metadata" field.
func MetadataIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldMetadata))
}

// MetadataNotNil applies the NotNil predicate on the "metadata" field.
func MetadataNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldMetadata))
}

// MetadataEqualFold applies the EqualFold predicate on the "metadata" field.
func MetadataEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldMetadata, v))
}

// MetadataContainsFold applies the ContainsFold predicate on the "metadata" field.
func MetadataContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldMetadata, v))
}

// DesiredPowerStateEQ applies the EQ predicate on the "desired_power_state" field.
func DesiredPowerStateEQ(v DesiredPowerState) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldDesiredPowerState, v))
}

// DesiredPowerStateNEQ applies the NEQ predicate on the "desired_power_state" field.
func DesiredPowerStateNEQ(v DesiredPowerState) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldDesiredPowerState, v))
}

// DesiredPowerStateIn applies the In predicate on the "desired_power_state" field.
func DesiredPowerStateIn(vs ...DesiredPowerState) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldDesiredPowerState, vs...))
}

// DesiredPowerStateNotIn applies the NotIn predicate on the "desired_power_state" field.
func DesiredPowerStateNotIn(vs ...DesiredPowerState) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldDesiredPowerState, vs...))
}

// DesiredPowerStateIsNil applies the IsNil predicate on the "desired_power_state" field.
func DesiredPowerStateIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldDesiredPowerState))
}

// DesiredPowerStateNotNil applies the NotNil predicate on the "desired_power_state" field.
func DesiredPowerStateNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldDesiredPowerState))
}

// CurrentPowerStateEQ applies the EQ predicate on the "current_power_state" field.
func CurrentPowerStateEQ(v CurrentPowerState) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldCurrentPowerState, v))
}

// CurrentPowerStateNEQ applies the NEQ predicate on the "current_power_state" field.
func CurrentPowerStateNEQ(v CurrentPowerState) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldCurrentPowerState, v))
}

// CurrentPowerStateIn applies the In predicate on the "current_power_state" field.
func CurrentPowerStateIn(vs ...CurrentPowerState) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldCurrentPowerState, vs...))
}

// CurrentPowerStateNotIn applies the NotIn predicate on the "current_power_state" field.
func CurrentPowerStateNotIn(vs ...CurrentPowerState) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldCurrentPowerState, vs...))
}

// CurrentPowerStateIsNil applies the IsNil predicate on the "current_power_state" field.
func CurrentPowerStateIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldCurrentPowerState))
}

// CurrentPowerStateNotNil applies the NotNil predicate on the "current_power_state" field.
func CurrentPowerStateNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldCurrentPowerState))
}

// PowerStatusEQ applies the EQ predicate on the "power_status" field.
func PowerStatusEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldPowerStatus, v))
}

// PowerStatusNEQ applies the NEQ predicate on the "power_status" field.
func PowerStatusNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldPowerStatus, v))
}

// PowerStatusIn applies the In predicate on the "power_status" field.
func PowerStatusIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldPowerStatus, vs...))
}

// PowerStatusNotIn applies the NotIn predicate on the "power_status" field.
func PowerStatusNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldPowerStatus, vs...))
}

// PowerStatusGT applies the GT predicate on the "power_status" field.
func PowerStatusGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldPowerStatus, v))
}

// PowerStatusGTE applies the GTE predicate on the "power_status" field.
func PowerStatusGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldPowerStatus, v))
}

// PowerStatusLT applies the LT predicate on the "power_status" field.
func PowerStatusLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldPowerStatus, v))
}

// PowerStatusLTE applies the LTE predicate on the "power_status" field.
func PowerStatusLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldPowerStatus, v))
}

// PowerStatusContains applies the Contains predicate on the "power_status" field.
func PowerStatusContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldPowerStatus, v))
}

// PowerStatusHasPrefix applies the HasPrefix predicate on the "power_status" field.
func PowerStatusHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldPowerStatus, v))
}

// PowerStatusHasSuffix applies the HasSuffix predicate on the "power_status" field.
func PowerStatusHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldPowerStatus, v))
}

// PowerStatusIsNil applies the IsNil predicate on the "power_status" field.
func PowerStatusIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldPowerStatus))
}

// PowerStatusNotNil applies the NotNil predicate on the "power_status" field.
func PowerStatusNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldPowerStatus))
}

// PowerStatusEqualFold applies the EqualFold predicate on the "power_status" field.
func PowerStatusEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldPowerStatus, v))
}

// PowerStatusContainsFold applies the ContainsFold predicate on the "power_status" field.
func PowerStatusContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldPowerStatus, v))
}

// PowerStatusIndicatorEQ applies the EQ predicate on the "power_status_indicator" field.
func PowerStatusIndicatorEQ(v PowerStatusIndicator) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldPowerStatusIndicator, v))
}

// PowerStatusIndicatorNEQ applies the NEQ predicate on the "power_status_indicator" field.
func PowerStatusIndicatorNEQ(v PowerStatusIndicator) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldPowerStatusIndicator, v))
}

// PowerStatusIndicatorIn applies the In predicate on the "power_status_indicator" field.
func PowerStatusIndicatorIn(vs ...PowerStatusIndicator) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldPowerStatusIndicator, vs...))
}

// PowerStatusIndicatorNotIn applies the NotIn predicate on the "power_status_indicator" field.
func PowerStatusIndicatorNotIn(vs ...PowerStatusIndicator) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldPowerStatusIndicator, vs...))
}

// PowerStatusIndicatorIsNil applies the IsNil predicate on the "power_status_indicator" field.
func PowerStatusIndicatorIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldPowerStatusIndicator))
}

// PowerStatusIndicatorNotNil applies the NotNil predicate on the "power_status_indicator" field.
func PowerStatusIndicatorNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldPowerStatusIndicator))
}

// PowerStatusTimestampEQ applies the EQ predicate on the "power_status_timestamp" field.
func PowerStatusTimestampEQ(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldPowerStatusTimestamp, v))
}

// PowerStatusTimestampNEQ applies the NEQ predicate on the "power_status_timestamp" field.
func PowerStatusTimestampNEQ(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldPowerStatusTimestamp, v))
}

// PowerStatusTimestampIn applies the In predicate on the "power_status_timestamp" field.
func PowerStatusTimestampIn(vs ...uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldPowerStatusTimestamp, vs...))
}

// PowerStatusTimestampNotIn applies the NotIn predicate on the "power_status_timestamp" field.
func PowerStatusTimestampNotIn(vs ...uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldPowerStatusTimestamp, vs...))
}

// PowerStatusTimestampGT applies the GT predicate on the "power_status_timestamp" field.
func PowerStatusTimestampGT(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldPowerStatusTimestamp, v))
}

// PowerStatusTimestampGTE applies the GTE predicate on the "power_status_timestamp" field.
func PowerStatusTimestampGTE(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldPowerStatusTimestamp, v))
}

// PowerStatusTimestampLT applies the LT predicate on the "power_status_timestamp" field.
func PowerStatusTimestampLT(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldPowerStatusTimestamp, v))
}

// PowerStatusTimestampLTE applies the LTE predicate on the "power_status_timestamp" field.
func PowerStatusTimestampLTE(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldPowerStatusTimestamp, v))
}

// PowerStatusTimestampIsNil applies the IsNil predicate on the "power_status_timestamp" field.
func PowerStatusTimestampIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldPowerStatusTimestamp))
}

// PowerStatusTimestampNotNil applies the NotNil predicate on the "power_status_timestamp" field.
func PowerStatusTimestampNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldPowerStatusTimestamp))
}

// PowerCommandPolicyEQ applies the EQ predicate on the "power_command_policy" field.
func PowerCommandPolicyEQ(v PowerCommandPolicy) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldPowerCommandPolicy, v))
}

// PowerCommandPolicyNEQ applies the NEQ predicate on the "power_command_policy" field.
func PowerCommandPolicyNEQ(v PowerCommandPolicy) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldPowerCommandPolicy, v))
}

// PowerCommandPolicyIn applies the In predicate on the "power_command_policy" field.
func PowerCommandPolicyIn(vs ...PowerCommandPolicy) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldPowerCommandPolicy, vs...))
}

// PowerCommandPolicyNotIn applies the NotIn predicate on the "power_command_policy" field.
func PowerCommandPolicyNotIn(vs ...PowerCommandPolicy) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldPowerCommandPolicy, vs...))
}

// PowerCommandPolicyIsNil applies the IsNil predicate on the "power_command_policy" field.
func PowerCommandPolicyIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldPowerCommandPolicy))
}

// PowerCommandPolicyNotNil applies the NotNil predicate on the "power_command_policy" field.
func PowerCommandPolicyNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldPowerCommandPolicy))
}

// PowerOnTimeEQ applies the EQ predicate on the "power_on_time" field.
func PowerOnTimeEQ(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldPowerOnTime, v))
}

// PowerOnTimeNEQ applies the NEQ predicate on the "power_on_time" field.
func PowerOnTimeNEQ(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldPowerOnTime, v))
}

// PowerOnTimeIn applies the In predicate on the "power_on_time" field.
func PowerOnTimeIn(vs ...uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldPowerOnTime, vs...))
}

// PowerOnTimeNotIn applies the NotIn predicate on the "power_on_time" field.
func PowerOnTimeNotIn(vs ...uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldPowerOnTime, vs...))
}

// PowerOnTimeGT applies the GT predicate on the "power_on_time" field.
func PowerOnTimeGT(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldPowerOnTime, v))
}

// PowerOnTimeGTE applies the GTE predicate on the "power_on_time" field.
func PowerOnTimeGTE(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldPowerOnTime, v))
}

// PowerOnTimeLT applies the LT predicate on the "power_on_time" field.
func PowerOnTimeLT(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldPowerOnTime, v))
}

// PowerOnTimeLTE applies the LTE predicate on the "power_on_time" field.
func PowerOnTimeLTE(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldPowerOnTime, v))
}

// PowerOnTimeIsNil applies the IsNil predicate on the "power_on_time" field.
func PowerOnTimeIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldPowerOnTime))
}

// PowerOnTimeNotNil applies the NotNil predicate on the "power_on_time" field.
func PowerOnTimeNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldPowerOnTime))
}

// HostStatusEQ applies the EQ predicate on the "host_status" field.
func HostStatusEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldHostStatus, v))
}

// HostStatusNEQ applies the NEQ predicate on the "host_status" field.
func HostStatusNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldHostStatus, v))
}

// HostStatusIn applies the In predicate on the "host_status" field.
func HostStatusIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldHostStatus, vs...))
}

// HostStatusNotIn applies the NotIn predicate on the "host_status" field.
func HostStatusNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldHostStatus, vs...))
}

// HostStatusGT applies the GT predicate on the "host_status" field.
func HostStatusGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldHostStatus, v))
}

// HostStatusGTE applies the GTE predicate on the "host_status" field.
func HostStatusGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldHostStatus, v))
}

// HostStatusLT applies the LT predicate on the "host_status" field.
func HostStatusLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldHostStatus, v))
}

// HostStatusLTE applies the LTE predicate on the "host_status" field.
func HostStatusLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldHostStatus, v))
}

// HostStatusContains applies the Contains predicate on the "host_status" field.
func HostStatusContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldHostStatus, v))
}

// HostStatusHasPrefix applies the HasPrefix predicate on the "host_status" field.
func HostStatusHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldHostStatus, v))
}

// HostStatusHasSuffix applies the HasSuffix predicate on the "host_status" field.
func HostStatusHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldHostStatus, v))
}

// HostStatusIsNil applies the IsNil predicate on the "host_status" field.
func HostStatusIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldHostStatus))
}

// HostStatusNotNil applies the NotNil predicate on the "host_status" field.
func HostStatusNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldHostStatus))
}

// HostStatusEqualFold applies the EqualFold predicate on the "host_status" field.
func HostStatusEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldHostStatus, v))
}

// HostStatusContainsFold applies the ContainsFold predicate on the "host_status" field.
func HostStatusContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldHostStatus, v))
}

// HostStatusIndicatorEQ applies the EQ predicate on the "host_status_indicator" field.
func HostStatusIndicatorEQ(v HostStatusIndicator) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldHostStatusIndicator, v))
}

// HostStatusIndicatorNEQ applies the NEQ predicate on the "host_status_indicator" field.
func HostStatusIndicatorNEQ(v HostStatusIndicator) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldHostStatusIndicator, v))
}

// HostStatusIndicatorIn applies the In predicate on the "host_status_indicator" field.
func HostStatusIndicatorIn(vs ...HostStatusIndicator) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldHostStatusIndicator, vs...))
}

// HostStatusIndicatorNotIn applies the NotIn predicate on the "host_status_indicator" field.
func HostStatusIndicatorNotIn(vs ...HostStatusIndicator) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldHostStatusIndicator, vs...))
}

// HostStatusIndicatorIsNil applies the IsNil predicate on the "host_status_indicator" field.
func HostStatusIndicatorIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldHostStatusIndicator))
}

// HostStatusIndicatorNotNil applies the NotNil predicate on the "host_status_indicator" field.
func HostStatusIndicatorNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldHostStatusIndicator))
}

// HostStatusTimestampEQ applies the EQ predicate on the "host_status_timestamp" field.
func HostStatusTimestampEQ(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldHostStatusTimestamp, v))
}

// HostStatusTimestampNEQ applies the NEQ predicate on the "host_status_timestamp" field.
func HostStatusTimestampNEQ(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldHostStatusTimestamp, v))
}

// HostStatusTimestampIn applies the In predicate on the "host_status_timestamp" field.
func HostStatusTimestampIn(vs ...uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldHostStatusTimestamp, vs...))
}

// HostStatusTimestampNotIn applies the NotIn predicate on the "host_status_timestamp" field.
func HostStatusTimestampNotIn(vs ...uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldHostStatusTimestamp, vs...))
}

// HostStatusTimestampGT applies the GT predicate on the "host_status_timestamp" field.
func HostStatusTimestampGT(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldHostStatusTimestamp, v))
}

// HostStatusTimestampGTE applies the GTE predicate on the "host_status_timestamp" field.
func HostStatusTimestampGTE(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldHostStatusTimestamp, v))
}

// HostStatusTimestampLT applies the LT predicate on the "host_status_timestamp" field.
func HostStatusTimestampLT(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldHostStatusTimestamp, v))
}

// HostStatusTimestampLTE applies the LTE predicate on the "host_status_timestamp" field.
func HostStatusTimestampLTE(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldHostStatusTimestamp, v))
}

// HostStatusTimestampIsNil applies the IsNil predicate on the "host_status_timestamp" field.
func HostStatusTimestampIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldHostStatusTimestamp))
}

// HostStatusTimestampNotNil applies the NotNil predicate on the "host_status_timestamp" field.
func HostStatusTimestampNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldHostStatusTimestamp))
}

// OnboardingStatusEQ applies the EQ predicate on the "onboarding_status" field.
func OnboardingStatusEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldOnboardingStatus, v))
}

// OnboardingStatusNEQ applies the NEQ predicate on the "onboarding_status" field.
func OnboardingStatusNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldOnboardingStatus, v))
}

// OnboardingStatusIn applies the In predicate on the "onboarding_status" field.
func OnboardingStatusIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldOnboardingStatus, vs...))
}

// OnboardingStatusNotIn applies the NotIn predicate on the "onboarding_status" field.
func OnboardingStatusNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldOnboardingStatus, vs...))
}

// OnboardingStatusGT applies the GT predicate on the "onboarding_status" field.
func OnboardingStatusGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldOnboardingStatus, v))
}

// OnboardingStatusGTE applies the GTE predicate on the "onboarding_status" field.
func OnboardingStatusGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldOnboardingStatus, v))
}

// OnboardingStatusLT applies the LT predicate on the "onboarding_status" field.
func OnboardingStatusLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldOnboardingStatus, v))
}

// OnboardingStatusLTE applies the LTE predicate on the "onboarding_status" field.
func OnboardingStatusLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldOnboardingStatus, v))
}

// OnboardingStatusContains applies the Contains predicate on the "onboarding_status" field.
func OnboardingStatusContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldOnboardingStatus, v))
}

// OnboardingStatusHasPrefix applies the HasPrefix predicate on the "onboarding_status" field.
func OnboardingStatusHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldOnboardingStatus, v))
}

// OnboardingStatusHasSuffix applies the HasSuffix predicate on the "onboarding_status" field.
func OnboardingStatusHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldOnboardingStatus, v))
}

// OnboardingStatusIsNil applies the IsNil predicate on the "onboarding_status" field.
func OnboardingStatusIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldOnboardingStatus))
}

// OnboardingStatusNotNil applies the NotNil predicate on the "onboarding_status" field.
func OnboardingStatusNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldOnboardingStatus))
}

// OnboardingStatusEqualFold applies the EqualFold predicate on the "onboarding_status" field.
func OnboardingStatusEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldOnboardingStatus, v))
}

// OnboardingStatusContainsFold applies the ContainsFold predicate on the "onboarding_status" field.
func OnboardingStatusContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldOnboardingStatus, v))
}

// OnboardingStatusIndicatorEQ applies the EQ predicate on the "onboarding_status_indicator" field.
func OnboardingStatusIndicatorEQ(v OnboardingStatusIndicator) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldOnboardingStatusIndicator, v))
}

// OnboardingStatusIndicatorNEQ applies the NEQ predicate on the "onboarding_status_indicator" field.
func OnboardingStatusIndicatorNEQ(v OnboardingStatusIndicator) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldOnboardingStatusIndicator, v))
}

// OnboardingStatusIndicatorIn applies the In predicate on the "onboarding_status_indicator" field.
func OnboardingStatusIndicatorIn(vs ...OnboardingStatusIndicator) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldOnboardingStatusIndicator, vs...))
}

// OnboardingStatusIndicatorNotIn applies the NotIn predicate on the "onboarding_status_indicator" field.
func OnboardingStatusIndicatorNotIn(vs ...OnboardingStatusIndicator) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldOnboardingStatusIndicator, vs...))
}

// OnboardingStatusIndicatorIsNil applies the IsNil predicate on the "onboarding_status_indicator" field.
func OnboardingStatusIndicatorIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldOnboardingStatusIndicator))
}

// OnboardingStatusIndicatorNotNil applies the NotNil predicate on the "onboarding_status_indicator" field.
func OnboardingStatusIndicatorNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldOnboardingStatusIndicator))
}

// OnboardingStatusTimestampEQ applies the EQ predicate on the "onboarding_status_timestamp" field.
func OnboardingStatusTimestampEQ(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldOnboardingStatusTimestamp, v))
}

// OnboardingStatusTimestampNEQ applies the NEQ predicate on the "onboarding_status_timestamp" field.
func OnboardingStatusTimestampNEQ(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldOnboardingStatusTimestamp, v))
}

// OnboardingStatusTimestampIn applies the In predicate on the "onboarding_status_timestamp" field.
func OnboardingStatusTimestampIn(vs ...uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldOnboardingStatusTimestamp, vs...))
}

// OnboardingStatusTimestampNotIn applies the NotIn predicate on the "onboarding_status_timestamp" field.
func OnboardingStatusTimestampNotIn(vs ...uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldOnboardingStatusTimestamp, vs...))
}

// OnboardingStatusTimestampGT applies the GT predicate on the "onboarding_status_timestamp" field.
func OnboardingStatusTimestampGT(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldOnboardingStatusTimestamp, v))
}

// OnboardingStatusTimestampGTE applies the GTE predicate on the "onboarding_status_timestamp" field.
func OnboardingStatusTimestampGTE(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldOnboardingStatusTimestamp, v))
}

// OnboardingStatusTimestampLT applies the LT predicate on the "onboarding_status_timestamp" field.
func OnboardingStatusTimestampLT(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldOnboardingStatusTimestamp, v))
}

// OnboardingStatusTimestampLTE applies the LTE predicate on the "onboarding_status_timestamp" field.
func OnboardingStatusTimestampLTE(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldOnboardingStatusTimestamp, v))
}

// OnboardingStatusTimestampIsNil applies the IsNil predicate on the "onboarding_status_timestamp" field.
func OnboardingStatusTimestampIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldOnboardingStatusTimestamp))
}

// OnboardingStatusTimestampNotNil applies the NotNil predicate on the "onboarding_status_timestamp" field.
func OnboardingStatusTimestampNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldOnboardingStatusTimestamp))
}

// RegistrationStatusEQ applies the EQ predicate on the "registration_status" field.
func RegistrationStatusEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldRegistrationStatus, v))
}

// RegistrationStatusNEQ applies the NEQ predicate on the "registration_status" field.
func RegistrationStatusNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldRegistrationStatus, v))
}

// RegistrationStatusIn applies the In predicate on the "registration_status" field.
func RegistrationStatusIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldRegistrationStatus, vs...))
}

// RegistrationStatusNotIn applies the NotIn predicate on the "registration_status" field.
func RegistrationStatusNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldRegistrationStatus, vs...))
}

// RegistrationStatusGT applies the GT predicate on the "registration_status" field.
func RegistrationStatusGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldRegistrationStatus, v))
}

// RegistrationStatusGTE applies the GTE predicate on the "registration_status" field.
func RegistrationStatusGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldRegistrationStatus, v))
}

// RegistrationStatusLT applies the LT predicate on the "registration_status" field.
func RegistrationStatusLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldRegistrationStatus, v))
}

// RegistrationStatusLTE applies the LTE predicate on the "registration_status" field.
func RegistrationStatusLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldRegistrationStatus, v))
}

// RegistrationStatusContains applies the Contains predicate on the "registration_status" field.
func RegistrationStatusContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldRegistrationStatus, v))
}

// RegistrationStatusHasPrefix applies the HasPrefix predicate on the "registration_status" field.
func RegistrationStatusHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldRegistrationStatus, v))
}

// RegistrationStatusHasSuffix applies the HasSuffix predicate on the "registration_status" field.
func RegistrationStatusHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldRegistrationStatus, v))
}

// RegistrationStatusIsNil applies the IsNil predicate on the "registration_status" field.
func RegistrationStatusIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldRegistrationStatus))
}

// RegistrationStatusNotNil applies the NotNil predicate on the "registration_status" field.
func RegistrationStatusNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldRegistrationStatus))
}

// RegistrationStatusEqualFold applies the EqualFold predicate on the "registration_status" field.
func RegistrationStatusEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldRegistrationStatus, v))
}

// RegistrationStatusContainsFold applies the ContainsFold predicate on the "registration_status" field.
func RegistrationStatusContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldRegistrationStatus, v))
}

// RegistrationStatusIndicatorEQ applies the EQ predicate on the "registration_status_indicator" field.
func RegistrationStatusIndicatorEQ(v RegistrationStatusIndicator) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldRegistrationStatusIndicator, v))
}

// RegistrationStatusIndicatorNEQ applies the NEQ predicate on the "registration_status_indicator" field.
func RegistrationStatusIndicatorNEQ(v RegistrationStatusIndicator) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldRegistrationStatusIndicator, v))
}

// RegistrationStatusIndicatorIn applies the In predicate on the "registration_status_indicator" field.
func RegistrationStatusIndicatorIn(vs ...RegistrationStatusIndicator) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldRegistrationStatusIndicator, vs...))
}

// RegistrationStatusIndicatorNotIn applies the NotIn predicate on the "registration_status_indicator" field.
func RegistrationStatusIndicatorNotIn(vs ...RegistrationStatusIndicator) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldRegistrationStatusIndicator, vs...))
}

// RegistrationStatusIndicatorIsNil applies the IsNil predicate on the "registration_status_indicator" field.
func RegistrationStatusIndicatorIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldRegistrationStatusIndicator))
}

// RegistrationStatusIndicatorNotNil applies the NotNil predicate on the "registration_status_indicator" field.
func RegistrationStatusIndicatorNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldRegistrationStatusIndicator))
}

// RegistrationStatusTimestampEQ applies the EQ predicate on the "registration_status_timestamp" field.
func RegistrationStatusTimestampEQ(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldRegistrationStatusTimestamp, v))
}

// RegistrationStatusTimestampNEQ applies the NEQ predicate on the "registration_status_timestamp" field.
func RegistrationStatusTimestampNEQ(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldRegistrationStatusTimestamp, v))
}

// RegistrationStatusTimestampIn applies the In predicate on the "registration_status_timestamp" field.
func RegistrationStatusTimestampIn(vs ...uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldRegistrationStatusTimestamp, vs...))
}

// RegistrationStatusTimestampNotIn applies the NotIn predicate on the "registration_status_timestamp" field.
func RegistrationStatusTimestampNotIn(vs ...uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldRegistrationStatusTimestamp, vs...))
}

// RegistrationStatusTimestampGT applies the GT predicate on the "registration_status_timestamp" field.
func RegistrationStatusTimestampGT(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldRegistrationStatusTimestamp, v))
}

// RegistrationStatusTimestampGTE applies the GTE predicate on the "registration_status_timestamp" field.
func RegistrationStatusTimestampGTE(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldRegistrationStatusTimestamp, v))
}

// RegistrationStatusTimestampLT applies the LT predicate on the "registration_status_timestamp" field.
func RegistrationStatusTimestampLT(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldRegistrationStatusTimestamp, v))
}

// RegistrationStatusTimestampLTE applies the LTE predicate on the "registration_status_timestamp" field.
func RegistrationStatusTimestampLTE(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldRegistrationStatusTimestamp, v))
}

// RegistrationStatusTimestampIsNil applies the IsNil predicate on the "registration_status_timestamp" field.
func RegistrationStatusTimestampIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldRegistrationStatusTimestamp))
}

// RegistrationStatusTimestampNotNil applies the NotNil predicate on the "registration_status_timestamp" field.
func RegistrationStatusTimestampNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldRegistrationStatusTimestamp))
}

// AmtSkuEQ applies the EQ predicate on the "amt_sku" field.
func AmtSkuEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldAmtSku, v))
}

// AmtSkuNEQ applies the NEQ predicate on the "amt_sku" field.
func AmtSkuNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldAmtSku, v))
}

// AmtSkuIn applies the In predicate on the "amt_sku" field.
func AmtSkuIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldAmtSku, vs...))
}

// AmtSkuNotIn applies the NotIn predicate on the "amt_sku" field.
func AmtSkuNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldAmtSku, vs...))
}

// AmtSkuGT applies the GT predicate on the "amt_sku" field.
func AmtSkuGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldAmtSku, v))
}

// AmtSkuGTE applies the GTE predicate on the "amt_sku" field.
func AmtSkuGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldAmtSku, v))
}

// AmtSkuLT applies the LT predicate on the "amt_sku" field.
func AmtSkuLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldAmtSku, v))
}

// AmtSkuLTE applies the LTE predicate on the "amt_sku" field.
func AmtSkuLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldAmtSku, v))
}

// AmtSkuContains applies the Contains predicate on the "amt_sku" field.
func AmtSkuContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldAmtSku, v))
}

// AmtSkuHasPrefix applies the HasPrefix predicate on the "amt_sku" field.
func AmtSkuHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldAmtSku, v))
}

// AmtSkuHasSuffix applies the HasSuffix predicate on the "amt_sku" field.
func AmtSkuHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldAmtSku, v))
}

// AmtSkuIsNil applies the IsNil predicate on the "amt_sku" field.
func AmtSkuIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldAmtSku))
}

// AmtSkuNotNil applies the NotNil predicate on the "amt_sku" field.
func AmtSkuNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldAmtSku))
}

// AmtSkuEqualFold applies the EqualFold predicate on the "amt_sku" field.
func AmtSkuEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldAmtSku, v))
}

// AmtSkuContainsFold applies the ContainsFold predicate on the "amt_sku" field.
func AmtSkuContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldAmtSku, v))
}

// DesiredAmtStateEQ applies the EQ predicate on the "desired_amt_state" field.
func DesiredAmtStateEQ(v DesiredAmtState) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldDesiredAmtState, v))
}

// DesiredAmtStateNEQ applies the NEQ predicate on the "desired_amt_state" field.
func DesiredAmtStateNEQ(v DesiredAmtState) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldDesiredAmtState, v))
}

// DesiredAmtStateIn applies the In predicate on the "desired_amt_state" field.
func DesiredAmtStateIn(vs ...DesiredAmtState) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldDesiredAmtState, vs...))
}

// DesiredAmtStateNotIn applies the NotIn predicate on the "desired_amt_state" field.
func DesiredAmtStateNotIn(vs ...DesiredAmtState) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldDesiredAmtState, vs...))
}

// DesiredAmtStateIsNil applies the IsNil predicate on the "desired_amt_state" field.
func DesiredAmtStateIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldDesiredAmtState))
}

// DesiredAmtStateNotNil applies the NotNil predicate on the "desired_amt_state" field.
func DesiredAmtStateNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldDesiredAmtState))
}

// CurrentAmtStateEQ applies the EQ predicate on the "current_amt_state" field.
func CurrentAmtStateEQ(v CurrentAmtState) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldCurrentAmtState, v))
}

// CurrentAmtStateNEQ applies the NEQ predicate on the "current_amt_state" field.
func CurrentAmtStateNEQ(v CurrentAmtState) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldCurrentAmtState, v))
}

// CurrentAmtStateIn applies the In predicate on the "current_amt_state" field.
func CurrentAmtStateIn(vs ...CurrentAmtState) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldCurrentAmtState, vs...))
}

// CurrentAmtStateNotIn applies the NotIn predicate on the "current_amt_state" field.
func CurrentAmtStateNotIn(vs ...CurrentAmtState) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldCurrentAmtState, vs...))
}

// CurrentAmtStateIsNil applies the IsNil predicate on the "current_amt_state" field.
func CurrentAmtStateIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldCurrentAmtState))
}

// CurrentAmtStateNotNil applies the NotNil predicate on the "current_amt_state" field.
func CurrentAmtStateNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldCurrentAmtState))
}

// AmtStatusEQ applies the EQ predicate on the "amt_status" field.
func AmtStatusEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldAmtStatus, v))
}

// AmtStatusNEQ applies the NEQ predicate on the "amt_status" field.
func AmtStatusNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldAmtStatus, v))
}

// AmtStatusIn applies the In predicate on the "amt_status" field.
func AmtStatusIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldAmtStatus, vs...))
}

// AmtStatusNotIn applies the NotIn predicate on the "amt_status" field.
func AmtStatusNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldAmtStatus, vs...))
}

// AmtStatusGT applies the GT predicate on the "amt_status" field.
func AmtStatusGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldAmtStatus, v))
}

// AmtStatusGTE applies the GTE predicate on the "amt_status" field.
func AmtStatusGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldAmtStatus, v))
}

// AmtStatusLT applies the LT predicate on the "amt_status" field.
func AmtStatusLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldAmtStatus, v))
}

// AmtStatusLTE applies the LTE predicate on the "amt_status" field.
func AmtStatusLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldAmtStatus, v))
}

// AmtStatusContains applies the Contains predicate on the "amt_status" field.
func AmtStatusContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldAmtStatus, v))
}

// AmtStatusHasPrefix applies the HasPrefix predicate on the "amt_status" field.
func AmtStatusHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldAmtStatus, v))
}

// AmtStatusHasSuffix applies the HasSuffix predicate on the "amt_status" field.
func AmtStatusHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldAmtStatus, v))
}

// AmtStatusIsNil applies the IsNil predicate on the "amt_status" field.
func AmtStatusIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldAmtStatus))
}

// AmtStatusNotNil applies the NotNil predicate on the "amt_status" field.
func AmtStatusNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldAmtStatus))
}

// AmtStatusEqualFold applies the EqualFold predicate on the "amt_status" field.
func AmtStatusEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldAmtStatus, v))
}

// AmtStatusContainsFold applies the ContainsFold predicate on the "amt_status" field.
func AmtStatusContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldAmtStatus, v))
}

// AmtStatusIndicatorEQ applies the EQ predicate on the "amt_status_indicator" field.
func AmtStatusIndicatorEQ(v AmtStatusIndicator) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldAmtStatusIndicator, v))
}

// AmtStatusIndicatorNEQ applies the NEQ predicate on the "amt_status_indicator" field.
func AmtStatusIndicatorNEQ(v AmtStatusIndicator) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldAmtStatusIndicator, v))
}

// AmtStatusIndicatorIn applies the In predicate on the "amt_status_indicator" field.
func AmtStatusIndicatorIn(vs ...AmtStatusIndicator) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldAmtStatusIndicator, vs...))
}

// AmtStatusIndicatorNotIn applies the NotIn predicate on the "amt_status_indicator" field.
func AmtStatusIndicatorNotIn(vs ...AmtStatusIndicator) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldAmtStatusIndicator, vs...))
}

// AmtStatusIndicatorIsNil applies the IsNil predicate on the "amt_status_indicator" field.
func AmtStatusIndicatorIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldAmtStatusIndicator))
}

// AmtStatusIndicatorNotNil applies the NotNil predicate on the "amt_status_indicator" field.
func AmtStatusIndicatorNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldAmtStatusIndicator))
}

// AmtStatusTimestampEQ applies the EQ predicate on the "amt_status_timestamp" field.
func AmtStatusTimestampEQ(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldAmtStatusTimestamp, v))
}

// AmtStatusTimestampNEQ applies the NEQ predicate on the "amt_status_timestamp" field.
func AmtStatusTimestampNEQ(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldAmtStatusTimestamp, v))
}

// AmtStatusTimestampIn applies the In predicate on the "amt_status_timestamp" field.
func AmtStatusTimestampIn(vs ...uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldAmtStatusTimestamp, vs...))
}

// AmtStatusTimestampNotIn applies the NotIn predicate on the "amt_status_timestamp" field.
func AmtStatusTimestampNotIn(vs ...uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldAmtStatusTimestamp, vs...))
}

// AmtStatusTimestampGT applies the GT predicate on the "amt_status_timestamp" field.
func AmtStatusTimestampGT(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldAmtStatusTimestamp, v))
}

// AmtStatusTimestampGTE applies the GTE predicate on the "amt_status_timestamp" field.
func AmtStatusTimestampGTE(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldAmtStatusTimestamp, v))
}

// AmtStatusTimestampLT applies the LT predicate on the "amt_status_timestamp" field.
func AmtStatusTimestampLT(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldAmtStatusTimestamp, v))
}

// AmtStatusTimestampLTE applies the LTE predicate on the "amt_status_timestamp" field.
func AmtStatusTimestampLTE(v uint64) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldAmtStatusTimestamp, v))
}

// AmtStatusTimestampIsNil applies the IsNil predicate on the "amt_status_timestamp" field.
func AmtStatusTimestampIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldAmtStatusTimestamp))
}

// AmtStatusTimestampNotNil applies the NotNil predicate on the "amt_status_timestamp" field.
func AmtStatusTimestampNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldAmtStatusTimestamp))
}

// UserLvmSizeEQ applies the EQ predicate on the "user_lvm_size" field.
func UserLvmSizeEQ(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldUserLvmSize, v))
}

// UserLvmSizeNEQ applies the NEQ predicate on the "user_lvm_size" field.
func UserLvmSizeNEQ(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldUserLvmSize, v))
}

// UserLvmSizeIn applies the In predicate on the "user_lvm_size" field.
func UserLvmSizeIn(vs ...uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldUserLvmSize, vs...))
}

// UserLvmSizeNotIn applies the NotIn predicate on the "user_lvm_size" field.
func UserLvmSizeNotIn(vs ...uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldUserLvmSize, vs...))
}

// UserLvmSizeGT applies the GT predicate on the "user_lvm_size" field.
func UserLvmSizeGT(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldUserLvmSize, v))
}

// UserLvmSizeGTE applies the GTE predicate on the "user_lvm_size" field.
func UserLvmSizeGTE(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldUserLvmSize, v))
}

// UserLvmSizeLT applies the LT predicate on the "user_lvm_size" field.
func UserLvmSizeLT(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldUserLvmSize, v))
}

// UserLvmSizeLTE applies the LTE predicate on the "user_lvm_size" field.
func UserLvmSizeLTE(v uint32) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldUserLvmSize, v))
}

// UserLvmSizeIsNil applies the IsNil predicate on the "user_lvm_size" field.
func UserLvmSizeIsNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldIsNull(FieldUserLvmSize))
}

// UserLvmSizeNotNil applies the NotNil predicate on the "user_lvm_size" field.
func UserLvmSizeNotNil() predicate.HostResource {
	return predicate.HostResource(sql.FieldNotNull(FieldUserLvmSize))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldTenantID, v))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldTenantID, v))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldTenantID, v))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldTenantID, v))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldTenantID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtContains applies the Contains predicate on the "created_at" field.
func CreatedAtContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldCreatedAt, v))
}

// CreatedAtHasPrefix applies the HasPrefix predicate on the "created_at" field.
func CreatedAtHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldCreatedAt, v))
}

// CreatedAtHasSuffix applies the HasSuffix predicate on the "created_at" field.
func CreatedAtHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldCreatedAt, v))
}

// CreatedAtEqualFold applies the EqualFold predicate on the "created_at" field.
func CreatedAtEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldCreatedAt, v))
}

// CreatedAtContainsFold applies the ContainsFold predicate on the "created_at" field.
func CreatedAtContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...string) predicate.HostResource {
	return predicate.HostResource(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtContains applies the Contains predicate on the "updated_at" field.
func UpdatedAtContains(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContains(FieldUpdatedAt, v))
}

// UpdatedAtHasPrefix applies the HasPrefix predicate on the "updated_at" field.
func UpdatedAtHasPrefix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasPrefix(FieldUpdatedAt, v))
}

// UpdatedAtHasSuffix applies the HasSuffix predicate on the "updated_at" field.
func UpdatedAtHasSuffix(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldHasSuffix(FieldUpdatedAt, v))
}

// UpdatedAtEqualFold applies the EqualFold predicate on the "updated_at" field.
func UpdatedAtEqualFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldEqualFold(FieldUpdatedAt, v))
}

// UpdatedAtContainsFold applies the ContainsFold predicate on the "updated_at" field.
func UpdatedAtContainsFold(v string) predicate.HostResource {
	return predicate.HostResource(sql.FieldContainsFold(FieldUpdatedAt, v))
}

// HasSite applies the HasEdge predicate on the "site" edge.
func HasSite() predicate.HostResource {
	return predicate.HostResource(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, SiteTable, SiteColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasSiteWith applies the HasEdge predicate on the "site" edge with a given conditions (other predicates).
func HasSiteWith(preds ...predicate.SiteResource) predicate.HostResource {
	return predicate.HostResource(func(s *sql.Selector) {
		step := newSiteStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasProvider applies the HasEdge predicate on the "provider" edge.
func HasProvider() predicate.HostResource {
	return predicate.HostResource(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, ProviderTable, ProviderColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasProviderWith applies the HasEdge predicate on the "provider" edge with a given conditions (other predicates).
func HasProviderWith(preds ...predicate.ProviderResource) predicate.HostResource {
	return predicate.HostResource(func(s *sql.Selector) {
		step := newProviderStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasHostStorages applies the HasEdge predicate on the "host_storages" edge.
func HasHostStorages() predicate.HostResource {
	return predicate.HostResource(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, true, HostStoragesTable, HostStoragesColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasHostStoragesWith applies the HasEdge predicate on the "host_storages" edge with a given conditions (other predicates).
func HasHostStoragesWith(preds ...predicate.HoststorageResource) predicate.HostResource {
	return predicate.HostResource(func(s *sql.Selector) {
		step := newHostStoragesStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasHostNics applies the HasEdge predicate on the "host_nics" edge.
func HasHostNics() predicate.HostResource {
	return predicate.HostResource(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, true, HostNicsTable, HostNicsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasHostNicsWith applies the HasEdge predicate on the "host_nics" edge with a given conditions (other predicates).
func HasHostNicsWith(preds ...predicate.HostnicResource) predicate.HostResource {
	return predicate.HostResource(func(s *sql.Selector) {
		step := newHostNicsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasHostUsbs applies the HasEdge predicate on the "host_usbs" edge.
func HasHostUsbs() predicate.HostResource {
	return predicate.HostResource(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, true, HostUsbsTable, HostUsbsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasHostUsbsWith applies the HasEdge predicate on the "host_usbs" edge with a given conditions (other predicates).
func HasHostUsbsWith(preds ...predicate.HostusbResource) predicate.HostResource {
	return predicate.HostResource(func(s *sql.Selector) {
		step := newHostUsbsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasHostGpus applies the HasEdge predicate on the "host_gpus" edge.
func HasHostGpus() predicate.HostResource {
	return predicate.HostResource(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, true, HostGpusTable, HostGpusColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasHostGpusWith applies the HasEdge predicate on the "host_gpus" edge with a given conditions (other predicates).
func HasHostGpusWith(preds ...predicate.HostgpuResource) predicate.HostResource {
	return predicate.HostResource(func(s *sql.Selector) {
		step := newHostGpusStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasInstance applies the HasEdge predicate on the "instance" edge.
func HasInstance() predicate.HostResource {
	return predicate.HostResource(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, InstanceTable, InstanceColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasInstanceWith applies the HasEdge predicate on the "instance" edge with a given conditions (other predicates).
func HasInstanceWith(preds ...predicate.InstanceResource) predicate.HostResource {
	return predicate.HostResource(func(s *sql.Selector) {
		step := newInstanceStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.HostResource) predicate.HostResource {
	return predicate.HostResource(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.HostResource) predicate.HostResource {
	return predicate.HostResource(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.HostResource) predicate.HostResource {
	return predicate.HostResource(sql.NotPredicates(p))
}
