// Code generated by ent, DO NOT EDIT.

package instanceresource

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/open-edge-platform/infra-core/inventory/v2/internal/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLTE(FieldID, id))
}

// ResourceID applies equality check predicate on the "resource_id" field. It's identical to ResourceIDEQ.
func ResourceID(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldResourceID, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldName, v))
}

// VMMemoryBytes applies equality check predicate on the "vm_memory_bytes" field. It's identical to VMMemoryBytesEQ.
func VMMemoryBytes(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldVMMemoryBytes, v))
}

// VMCPUCores applies equality check predicate on the "vm_cpu_cores" field. It's identical to VMCPUCoresEQ.
func VMCPUCores(v uint32) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldVMCPUCores, v))
}

// VMStorageBytes applies equality check predicate on the "vm_storage_bytes" field. It's identical to VMStorageBytesEQ.
func VMStorageBytes(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldVMStorageBytes, v))
}

// InstanceStatus applies equality check predicate on the "instance_status" field. It's identical to InstanceStatusEQ.
func InstanceStatus(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldInstanceStatus, v))
}

// InstanceStatusTimestamp applies equality check predicate on the "instance_status_timestamp" field. It's identical to InstanceStatusTimestampEQ.
func InstanceStatusTimestamp(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldInstanceStatusTimestamp, v))
}

// ProvisioningStatus applies equality check predicate on the "provisioning_status" field. It's identical to ProvisioningStatusEQ.
func ProvisioningStatus(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldProvisioningStatus, v))
}

// ProvisioningStatusTimestamp applies equality check predicate on the "provisioning_status_timestamp" field. It's identical to ProvisioningStatusTimestampEQ.
func ProvisioningStatusTimestamp(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldProvisioningStatusTimestamp, v))
}

// UpdateStatus applies equality check predicate on the "update_status" field. It's identical to UpdateStatusEQ.
func UpdateStatus(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldUpdateStatus, v))
}

// UpdateStatusTimestamp applies equality check predicate on the "update_status_timestamp" field. It's identical to UpdateStatusTimestampEQ.
func UpdateStatusTimestamp(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldUpdateStatusTimestamp, v))
}

// UpdateStatusDetail applies equality check predicate on the "update_status_detail" field. It's identical to UpdateStatusDetailEQ.
func UpdateStatusDetail(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldUpdateStatusDetail, v))
}

// TrustedAttestationStatus applies equality check predicate on the "trusted_attestation_status" field. It's identical to TrustedAttestationStatusEQ.
func TrustedAttestationStatus(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldTrustedAttestationStatus, v))
}

// TrustedAttestationStatusTimestamp applies equality check predicate on the "trusted_attestation_status_timestamp" field. It's identical to TrustedAttestationStatusTimestampEQ.
func TrustedAttestationStatusTimestamp(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldTrustedAttestationStatusTimestamp, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldTenantID, v))
}

// InstanceStatusDetail applies equality check predicate on the "instance_status_detail" field. It's identical to InstanceStatusDetailEQ.
func InstanceStatusDetail(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldInstanceStatusDetail, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldUpdatedAt, v))
}

// ResourceIDEQ applies the EQ predicate on the "resource_id" field.
func ResourceIDEQ(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldResourceID, v))
}

// ResourceIDNEQ applies the NEQ predicate on the "resource_id" field.
func ResourceIDNEQ(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldResourceID, v))
}

// ResourceIDIn applies the In predicate on the "resource_id" field.
func ResourceIDIn(vs ...string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldResourceID, vs...))
}

// ResourceIDNotIn applies the NotIn predicate on the "resource_id" field.
func ResourceIDNotIn(vs ...string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldResourceID, vs...))
}

// ResourceIDGT applies the GT predicate on the "resource_id" field.
func ResourceIDGT(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGT(FieldResourceID, v))
}

// ResourceIDGTE applies the GTE predicate on the "resource_id" field.
func ResourceIDGTE(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGTE(FieldResourceID, v))
}

// ResourceIDLT applies the LT predicate on the "resource_id" field.
func ResourceIDLT(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLT(FieldResourceID, v))
}

// ResourceIDLTE applies the LTE predicate on the "resource_id" field.
func ResourceIDLTE(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLTE(FieldResourceID, v))
}

// ResourceIDContains applies the Contains predicate on the "resource_id" field.
func ResourceIDContains(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldContains(FieldResourceID, v))
}

// ResourceIDHasPrefix applies the HasPrefix predicate on the "resource_id" field.
func ResourceIDHasPrefix(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldHasPrefix(FieldResourceID, v))
}

// ResourceIDHasSuffix applies the HasSuffix predicate on the "resource_id" field.
func ResourceIDHasSuffix(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldHasSuffix(FieldResourceID, v))
}

// ResourceIDEqualFold applies the EqualFold predicate on the "resource_id" field.
func ResourceIDEqualFold(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEqualFold(FieldResourceID, v))
}

// ResourceIDContainsFold applies the ContainsFold predicate on the "resource_id" field.
func ResourceIDContainsFold(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldContainsFold(FieldResourceID, v))
}

// KindEQ applies the EQ predicate on the "kind" field.
func KindEQ(v Kind) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldKind, v))
}

// KindNEQ applies the NEQ predicate on the "kind" field.
func KindNEQ(v Kind) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldKind, v))
}

// KindIn applies the In predicate on the "kind" field.
func KindIn(vs ...Kind) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldKind, vs...))
}

// KindNotIn applies the NotIn predicate on the "kind" field.
func KindNotIn(vs ...Kind) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldKind, vs...))
}

// KindIsNil applies the IsNil predicate on the "kind" field.
func KindIsNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIsNull(FieldKind))
}

// KindNotNil applies the NotNil predicate on the "kind" field.
func KindNotNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotNull(FieldKind))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldHasSuffix(FieldName, v))
}

// NameIsNil applies the IsNil predicate on the "name" field.
func NameIsNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIsNull(FieldName))
}

// NameNotNil applies the NotNil predicate on the "name" field.
func NameNotNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotNull(FieldName))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldContainsFold(FieldName, v))
}

// DesiredStateEQ applies the EQ predicate on the "desired_state" field.
func DesiredStateEQ(v DesiredState) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldDesiredState, v))
}

// DesiredStateNEQ applies the NEQ predicate on the "desired_state" field.
func DesiredStateNEQ(v DesiredState) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldDesiredState, v))
}

// DesiredStateIn applies the In predicate on the "desired_state" field.
func DesiredStateIn(vs ...DesiredState) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldDesiredState, vs...))
}

// DesiredStateNotIn applies the NotIn predicate on the "desired_state" field.
func DesiredStateNotIn(vs ...DesiredState) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldDesiredState, vs...))
}

// DesiredStateIsNil applies the IsNil predicate on the "desired_state" field.
func DesiredStateIsNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIsNull(FieldDesiredState))
}

// DesiredStateNotNil applies the NotNil predicate on the "desired_state" field.
func DesiredStateNotNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotNull(FieldDesiredState))
}

// CurrentStateEQ applies the EQ predicate on the "current_state" field.
func CurrentStateEQ(v CurrentState) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldCurrentState, v))
}

// CurrentStateNEQ applies the NEQ predicate on the "current_state" field.
func CurrentStateNEQ(v CurrentState) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldCurrentState, v))
}

// CurrentStateIn applies the In predicate on the "current_state" field.
func CurrentStateIn(vs ...CurrentState) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldCurrentState, vs...))
}

// CurrentStateNotIn applies the NotIn predicate on the "current_state" field.
func CurrentStateNotIn(vs ...CurrentState) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldCurrentState, vs...))
}

// CurrentStateIsNil applies the IsNil predicate on the "current_state" field.
func CurrentStateIsNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIsNull(FieldCurrentState))
}

// CurrentStateNotNil applies the NotNil predicate on the "current_state" field.
func CurrentStateNotNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotNull(FieldCurrentState))
}

// VMMemoryBytesEQ applies the EQ predicate on the "vm_memory_bytes" field.
func VMMemoryBytesEQ(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldVMMemoryBytes, v))
}

// VMMemoryBytesNEQ applies the NEQ predicate on the "vm_memory_bytes" field.
func VMMemoryBytesNEQ(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldVMMemoryBytes, v))
}

// VMMemoryBytesIn applies the In predicate on the "vm_memory_bytes" field.
func VMMemoryBytesIn(vs ...uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldVMMemoryBytes, vs...))
}

// VMMemoryBytesNotIn applies the NotIn predicate on the "vm_memory_bytes" field.
func VMMemoryBytesNotIn(vs ...uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldVMMemoryBytes, vs...))
}

// VMMemoryBytesGT applies the GT predicate on the "vm_memory_bytes" field.
func VMMemoryBytesGT(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGT(FieldVMMemoryBytes, v))
}

// VMMemoryBytesGTE applies the GTE predicate on the "vm_memory_bytes" field.
func VMMemoryBytesGTE(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGTE(FieldVMMemoryBytes, v))
}

// VMMemoryBytesLT applies the LT predicate on the "vm_memory_bytes" field.
func VMMemoryBytesLT(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLT(FieldVMMemoryBytes, v))
}

// VMMemoryBytesLTE applies the LTE predicate on the "vm_memory_bytes" field.
func VMMemoryBytesLTE(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLTE(FieldVMMemoryBytes, v))
}

// VMMemoryBytesIsNil applies the IsNil predicate on the "vm_memory_bytes" field.
func VMMemoryBytesIsNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIsNull(FieldVMMemoryBytes))
}

// VMMemoryBytesNotNil applies the NotNil predicate on the "vm_memory_bytes" field.
func VMMemoryBytesNotNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotNull(FieldVMMemoryBytes))
}

// VMCPUCoresEQ applies the EQ predicate on the "vm_cpu_cores" field.
func VMCPUCoresEQ(v uint32) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldVMCPUCores, v))
}

// VMCPUCoresNEQ applies the NEQ predicate on the "vm_cpu_cores" field.
func VMCPUCoresNEQ(v uint32) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldVMCPUCores, v))
}

// VMCPUCoresIn applies the In predicate on the "vm_cpu_cores" field.
func VMCPUCoresIn(vs ...uint32) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldVMCPUCores, vs...))
}

// VMCPUCoresNotIn applies the NotIn predicate on the "vm_cpu_cores" field.
func VMCPUCoresNotIn(vs ...uint32) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldVMCPUCores, vs...))
}

// VMCPUCoresGT applies the GT predicate on the "vm_cpu_cores" field.
func VMCPUCoresGT(v uint32) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGT(FieldVMCPUCores, v))
}

// VMCPUCoresGTE applies the GTE predicate on the "vm_cpu_cores" field.
func VMCPUCoresGTE(v uint32) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGTE(FieldVMCPUCores, v))
}

// VMCPUCoresLT applies the LT predicate on the "vm_cpu_cores" field.
func VMCPUCoresLT(v uint32) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLT(FieldVMCPUCores, v))
}

// VMCPUCoresLTE applies the LTE predicate on the "vm_cpu_cores" field.
func VMCPUCoresLTE(v uint32) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLTE(FieldVMCPUCores, v))
}

// VMCPUCoresIsNil applies the IsNil predicate on the "vm_cpu_cores" field.
func VMCPUCoresIsNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIsNull(FieldVMCPUCores))
}

// VMCPUCoresNotNil applies the NotNil predicate on the "vm_cpu_cores" field.
func VMCPUCoresNotNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotNull(FieldVMCPUCores))
}

// VMStorageBytesEQ applies the EQ predicate on the "vm_storage_bytes" field.
func VMStorageBytesEQ(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldVMStorageBytes, v))
}

// VMStorageBytesNEQ applies the NEQ predicate on the "vm_storage_bytes" field.
func VMStorageBytesNEQ(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldVMStorageBytes, v))
}

// VMStorageBytesIn applies the In predicate on the "vm_storage_bytes" field.
func VMStorageBytesIn(vs ...uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldVMStorageBytes, vs...))
}

// VMStorageBytesNotIn applies the NotIn predicate on the "vm_storage_bytes" field.
func VMStorageBytesNotIn(vs ...uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldVMStorageBytes, vs...))
}

// VMStorageBytesGT applies the GT predicate on the "vm_storage_bytes" field.
func VMStorageBytesGT(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGT(FieldVMStorageBytes, v))
}

// VMStorageBytesGTE applies the GTE predicate on the "vm_storage_bytes" field.
func VMStorageBytesGTE(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGTE(FieldVMStorageBytes, v))
}

// VMStorageBytesLT applies the LT predicate on the "vm_storage_bytes" field.
func VMStorageBytesLT(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLT(FieldVMStorageBytes, v))
}

// VMStorageBytesLTE applies the LTE predicate on the "vm_storage_bytes" field.
func VMStorageBytesLTE(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLTE(FieldVMStorageBytes, v))
}

// VMStorageBytesIsNil applies the IsNil predicate on the "vm_storage_bytes" field.
func VMStorageBytesIsNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIsNull(FieldVMStorageBytes))
}

// VMStorageBytesNotNil applies the NotNil predicate on the "vm_storage_bytes" field.
func VMStorageBytesNotNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotNull(FieldVMStorageBytes))
}

// SecurityFeatureEQ applies the EQ predicate on the "security_feature" field.
func SecurityFeatureEQ(v SecurityFeature) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldSecurityFeature, v))
}

// SecurityFeatureNEQ applies the NEQ predicate on the "security_feature" field.
func SecurityFeatureNEQ(v SecurityFeature) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldSecurityFeature, v))
}

// SecurityFeatureIn applies the In predicate on the "security_feature" field.
func SecurityFeatureIn(vs ...SecurityFeature) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldSecurityFeature, vs...))
}

// SecurityFeatureNotIn applies the NotIn predicate on the "security_feature" field.
func SecurityFeatureNotIn(vs ...SecurityFeature) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldSecurityFeature, vs...))
}

// SecurityFeatureIsNil applies the IsNil predicate on the "security_feature" field.
func SecurityFeatureIsNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIsNull(FieldSecurityFeature))
}

// SecurityFeatureNotNil applies the NotNil predicate on the "security_feature" field.
func SecurityFeatureNotNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotNull(FieldSecurityFeature))
}

// InstanceStatusEQ applies the EQ predicate on the "instance_status" field.
func InstanceStatusEQ(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldInstanceStatus, v))
}

// InstanceStatusNEQ applies the NEQ predicate on the "instance_status" field.
func InstanceStatusNEQ(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldInstanceStatus, v))
}

// InstanceStatusIn applies the In predicate on the "instance_status" field.
func InstanceStatusIn(vs ...string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldInstanceStatus, vs...))
}

// InstanceStatusNotIn applies the NotIn predicate on the "instance_status" field.
func InstanceStatusNotIn(vs ...string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldInstanceStatus, vs...))
}

// InstanceStatusGT applies the GT predicate on the "instance_status" field.
func InstanceStatusGT(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGT(FieldInstanceStatus, v))
}

// InstanceStatusGTE applies the GTE predicate on the "instance_status" field.
func InstanceStatusGTE(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGTE(FieldInstanceStatus, v))
}

// InstanceStatusLT applies the LT predicate on the "instance_status" field.
func InstanceStatusLT(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLT(FieldInstanceStatus, v))
}

// InstanceStatusLTE applies the LTE predicate on the "instance_status" field.
func InstanceStatusLTE(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLTE(FieldInstanceStatus, v))
}

// InstanceStatusContains applies the Contains predicate on the "instance_status" field.
func InstanceStatusContains(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldContains(FieldInstanceStatus, v))
}

// InstanceStatusHasPrefix applies the HasPrefix predicate on the "instance_status" field.
func InstanceStatusHasPrefix(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldHasPrefix(FieldInstanceStatus, v))
}

// InstanceStatusHasSuffix applies the HasSuffix predicate on the "instance_status" field.
func InstanceStatusHasSuffix(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldHasSuffix(FieldInstanceStatus, v))
}

// InstanceStatusIsNil applies the IsNil predicate on the "instance_status" field.
func InstanceStatusIsNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIsNull(FieldInstanceStatus))
}

// InstanceStatusNotNil applies the NotNil predicate on the "instance_status" field.
func InstanceStatusNotNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotNull(FieldInstanceStatus))
}

// InstanceStatusEqualFold applies the EqualFold predicate on the "instance_status" field.
func InstanceStatusEqualFold(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEqualFold(FieldInstanceStatus, v))
}

// InstanceStatusContainsFold applies the ContainsFold predicate on the "instance_status" field.
func InstanceStatusContainsFold(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldContainsFold(FieldInstanceStatus, v))
}

// InstanceStatusIndicatorEQ applies the EQ predicate on the "instance_status_indicator" field.
func InstanceStatusIndicatorEQ(v InstanceStatusIndicator) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldInstanceStatusIndicator, v))
}

// InstanceStatusIndicatorNEQ applies the NEQ predicate on the "instance_status_indicator" field.
func InstanceStatusIndicatorNEQ(v InstanceStatusIndicator) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldInstanceStatusIndicator, v))
}

// InstanceStatusIndicatorIn applies the In predicate on the "instance_status_indicator" field.
func InstanceStatusIndicatorIn(vs ...InstanceStatusIndicator) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldInstanceStatusIndicator, vs...))
}

// InstanceStatusIndicatorNotIn applies the NotIn predicate on the "instance_status_indicator" field.
func InstanceStatusIndicatorNotIn(vs ...InstanceStatusIndicator) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldInstanceStatusIndicator, vs...))
}

// InstanceStatusIndicatorIsNil applies the IsNil predicate on the "instance_status_indicator" field.
func InstanceStatusIndicatorIsNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIsNull(FieldInstanceStatusIndicator))
}

// InstanceStatusIndicatorNotNil applies the NotNil predicate on the "instance_status_indicator" field.
func InstanceStatusIndicatorNotNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotNull(FieldInstanceStatusIndicator))
}

// InstanceStatusTimestampEQ applies the EQ predicate on the "instance_status_timestamp" field.
func InstanceStatusTimestampEQ(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldInstanceStatusTimestamp, v))
}

// InstanceStatusTimestampNEQ applies the NEQ predicate on the "instance_status_timestamp" field.
func InstanceStatusTimestampNEQ(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldInstanceStatusTimestamp, v))
}

// InstanceStatusTimestampIn applies the In predicate on the "instance_status_timestamp" field.
func InstanceStatusTimestampIn(vs ...uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldInstanceStatusTimestamp, vs...))
}

// InstanceStatusTimestampNotIn applies the NotIn predicate on the "instance_status_timestamp" field.
func InstanceStatusTimestampNotIn(vs ...uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldInstanceStatusTimestamp, vs...))
}

// InstanceStatusTimestampGT applies the GT predicate on the "instance_status_timestamp" field.
func InstanceStatusTimestampGT(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGT(FieldInstanceStatusTimestamp, v))
}

// InstanceStatusTimestampGTE applies the GTE predicate on the "instance_status_timestamp" field.
func InstanceStatusTimestampGTE(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGTE(FieldInstanceStatusTimestamp, v))
}

// InstanceStatusTimestampLT applies the LT predicate on the "instance_status_timestamp" field.
func InstanceStatusTimestampLT(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLT(FieldInstanceStatusTimestamp, v))
}

// InstanceStatusTimestampLTE applies the LTE predicate on the "instance_status_timestamp" field.
func InstanceStatusTimestampLTE(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLTE(FieldInstanceStatusTimestamp, v))
}

// InstanceStatusTimestampIsNil applies the IsNil predicate on the "instance_status_timestamp" field.
func InstanceStatusTimestampIsNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIsNull(FieldInstanceStatusTimestamp))
}

// InstanceStatusTimestampNotNil applies the NotNil predicate on the "instance_status_timestamp" field.
func InstanceStatusTimestampNotNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotNull(FieldInstanceStatusTimestamp))
}

// ProvisioningStatusEQ applies the EQ predicate on the "provisioning_status" field.
func ProvisioningStatusEQ(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldProvisioningStatus, v))
}

// ProvisioningStatusNEQ applies the NEQ predicate on the "provisioning_status" field.
func ProvisioningStatusNEQ(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldProvisioningStatus, v))
}

// ProvisioningStatusIn applies the In predicate on the "provisioning_status" field.
func ProvisioningStatusIn(vs ...string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldProvisioningStatus, vs...))
}

// ProvisioningStatusNotIn applies the NotIn predicate on the "provisioning_status" field.
func ProvisioningStatusNotIn(vs ...string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldProvisioningStatus, vs...))
}

// ProvisioningStatusGT applies the GT predicate on the "provisioning_status" field.
func ProvisioningStatusGT(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGT(FieldProvisioningStatus, v))
}

// ProvisioningStatusGTE applies the GTE predicate on the "provisioning_status" field.
func ProvisioningStatusGTE(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGTE(FieldProvisioningStatus, v))
}

// ProvisioningStatusLT applies the LT predicate on the "provisioning_status" field.
func ProvisioningStatusLT(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLT(FieldProvisioningStatus, v))
}

// ProvisioningStatusLTE applies the LTE predicate on the "provisioning_status" field.
func ProvisioningStatusLTE(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLTE(FieldProvisioningStatus, v))
}

// ProvisioningStatusContains applies the Contains predicate on the "provisioning_status" field.
func ProvisioningStatusContains(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldContains(FieldProvisioningStatus, v))
}

// ProvisioningStatusHasPrefix applies the HasPrefix predicate on the "provisioning_status" field.
func ProvisioningStatusHasPrefix(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldHasPrefix(FieldProvisioningStatus, v))
}

// ProvisioningStatusHasSuffix applies the HasSuffix predicate on the "provisioning_status" field.
func ProvisioningStatusHasSuffix(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldHasSuffix(FieldProvisioningStatus, v))
}

// ProvisioningStatusIsNil applies the IsNil predicate on the "provisioning_status" field.
func ProvisioningStatusIsNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIsNull(FieldProvisioningStatus))
}

// ProvisioningStatusNotNil applies the NotNil predicate on the "provisioning_status" field.
func ProvisioningStatusNotNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotNull(FieldProvisioningStatus))
}

// ProvisioningStatusEqualFold applies the EqualFold predicate on the "provisioning_status" field.
func ProvisioningStatusEqualFold(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEqualFold(FieldProvisioningStatus, v))
}

// ProvisioningStatusContainsFold applies the ContainsFold predicate on the "provisioning_status" field.
func ProvisioningStatusContainsFold(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldContainsFold(FieldProvisioningStatus, v))
}

// ProvisioningStatusIndicatorEQ applies the EQ predicate on the "provisioning_status_indicator" field.
func ProvisioningStatusIndicatorEQ(v ProvisioningStatusIndicator) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldProvisioningStatusIndicator, v))
}

// ProvisioningStatusIndicatorNEQ applies the NEQ predicate on the "provisioning_status_indicator" field.
func ProvisioningStatusIndicatorNEQ(v ProvisioningStatusIndicator) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldProvisioningStatusIndicator, v))
}

// ProvisioningStatusIndicatorIn applies the In predicate on the "provisioning_status_indicator" field.
func ProvisioningStatusIndicatorIn(vs ...ProvisioningStatusIndicator) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldProvisioningStatusIndicator, vs...))
}

// ProvisioningStatusIndicatorNotIn applies the NotIn predicate on the "provisioning_status_indicator" field.
func ProvisioningStatusIndicatorNotIn(vs ...ProvisioningStatusIndicator) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldProvisioningStatusIndicator, vs...))
}

// ProvisioningStatusIndicatorIsNil applies the IsNil predicate on the "provisioning_status_indicator" field.
func ProvisioningStatusIndicatorIsNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIsNull(FieldProvisioningStatusIndicator))
}

// ProvisioningStatusIndicatorNotNil applies the NotNil predicate on the "provisioning_status_indicator" field.
func ProvisioningStatusIndicatorNotNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotNull(FieldProvisioningStatusIndicator))
}

// ProvisioningStatusTimestampEQ applies the EQ predicate on the "provisioning_status_timestamp" field.
func ProvisioningStatusTimestampEQ(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldProvisioningStatusTimestamp, v))
}

// ProvisioningStatusTimestampNEQ applies the NEQ predicate on the "provisioning_status_timestamp" field.
func ProvisioningStatusTimestampNEQ(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldProvisioningStatusTimestamp, v))
}

// ProvisioningStatusTimestampIn applies the In predicate on the "provisioning_status_timestamp" field.
func ProvisioningStatusTimestampIn(vs ...uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldProvisioningStatusTimestamp, vs...))
}

// ProvisioningStatusTimestampNotIn applies the NotIn predicate on the "provisioning_status_timestamp" field.
func ProvisioningStatusTimestampNotIn(vs ...uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldProvisioningStatusTimestamp, vs...))
}

// ProvisioningStatusTimestampGT applies the GT predicate on the "provisioning_status_timestamp" field.
func ProvisioningStatusTimestampGT(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGT(FieldProvisioningStatusTimestamp, v))
}

// ProvisioningStatusTimestampGTE applies the GTE predicate on the "provisioning_status_timestamp" field.
func ProvisioningStatusTimestampGTE(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGTE(FieldProvisioningStatusTimestamp, v))
}

// ProvisioningStatusTimestampLT applies the LT predicate on the "provisioning_status_timestamp" field.
func ProvisioningStatusTimestampLT(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLT(FieldProvisioningStatusTimestamp, v))
}

// ProvisioningStatusTimestampLTE applies the LTE predicate on the "provisioning_status_timestamp" field.
func ProvisioningStatusTimestampLTE(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLTE(FieldProvisioningStatusTimestamp, v))
}

// ProvisioningStatusTimestampIsNil applies the IsNil predicate on the "provisioning_status_timestamp" field.
func ProvisioningStatusTimestampIsNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIsNull(FieldProvisioningStatusTimestamp))
}

// ProvisioningStatusTimestampNotNil applies the NotNil predicate on the "provisioning_status_timestamp" field.
func ProvisioningStatusTimestampNotNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotNull(FieldProvisioningStatusTimestamp))
}

// UpdateStatusEQ applies the EQ predicate on the "update_status" field.
func UpdateStatusEQ(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldUpdateStatus, v))
}

// UpdateStatusNEQ applies the NEQ predicate on the "update_status" field.
func UpdateStatusNEQ(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldUpdateStatus, v))
}

// UpdateStatusIn applies the In predicate on the "update_status" field.
func UpdateStatusIn(vs ...string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldUpdateStatus, vs...))
}

// UpdateStatusNotIn applies the NotIn predicate on the "update_status" field.
func UpdateStatusNotIn(vs ...string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldUpdateStatus, vs...))
}

// UpdateStatusGT applies the GT predicate on the "update_status" field.
func UpdateStatusGT(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGT(FieldUpdateStatus, v))
}

// UpdateStatusGTE applies the GTE predicate on the "update_status" field.
func UpdateStatusGTE(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGTE(FieldUpdateStatus, v))
}

// UpdateStatusLT applies the LT predicate on the "update_status" field.
func UpdateStatusLT(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLT(FieldUpdateStatus, v))
}

// UpdateStatusLTE applies the LTE predicate on the "update_status" field.
func UpdateStatusLTE(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLTE(FieldUpdateStatus, v))
}

// UpdateStatusContains applies the Contains predicate on the "update_status" field.
func UpdateStatusContains(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldContains(FieldUpdateStatus, v))
}

// UpdateStatusHasPrefix applies the HasPrefix predicate on the "update_status" field.
func UpdateStatusHasPrefix(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldHasPrefix(FieldUpdateStatus, v))
}

// UpdateStatusHasSuffix applies the HasSuffix predicate on the "update_status" field.
func UpdateStatusHasSuffix(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldHasSuffix(FieldUpdateStatus, v))
}

// UpdateStatusIsNil applies the IsNil predicate on the "update_status" field.
func UpdateStatusIsNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIsNull(FieldUpdateStatus))
}

// UpdateStatusNotNil applies the NotNil predicate on the "update_status" field.
func UpdateStatusNotNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotNull(FieldUpdateStatus))
}

// UpdateStatusEqualFold applies the EqualFold predicate on the "update_status" field.
func UpdateStatusEqualFold(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEqualFold(FieldUpdateStatus, v))
}

// UpdateStatusContainsFold applies the ContainsFold predicate on the "update_status" field.
func UpdateStatusContainsFold(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldContainsFold(FieldUpdateStatus, v))
}

// UpdateStatusIndicatorEQ applies the EQ predicate on the "update_status_indicator" field.
func UpdateStatusIndicatorEQ(v UpdateStatusIndicator) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldUpdateStatusIndicator, v))
}

// UpdateStatusIndicatorNEQ applies the NEQ predicate on the "update_status_indicator" field.
func UpdateStatusIndicatorNEQ(v UpdateStatusIndicator) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldUpdateStatusIndicator, v))
}

// UpdateStatusIndicatorIn applies the In predicate on the "update_status_indicator" field.
func UpdateStatusIndicatorIn(vs ...UpdateStatusIndicator) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldUpdateStatusIndicator, vs...))
}

// UpdateStatusIndicatorNotIn applies the NotIn predicate on the "update_status_indicator" field.
func UpdateStatusIndicatorNotIn(vs ...UpdateStatusIndicator) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldUpdateStatusIndicator, vs...))
}

// UpdateStatusIndicatorIsNil applies the IsNil predicate on the "update_status_indicator" field.
func UpdateStatusIndicatorIsNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIsNull(FieldUpdateStatusIndicator))
}

// UpdateStatusIndicatorNotNil applies the NotNil predicate on the "update_status_indicator" field.
func UpdateStatusIndicatorNotNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotNull(FieldUpdateStatusIndicator))
}

// UpdateStatusTimestampEQ applies the EQ predicate on the "update_status_timestamp" field.
func UpdateStatusTimestampEQ(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldUpdateStatusTimestamp, v))
}

// UpdateStatusTimestampNEQ applies the NEQ predicate on the "update_status_timestamp" field.
func UpdateStatusTimestampNEQ(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldUpdateStatusTimestamp, v))
}

// UpdateStatusTimestampIn applies the In predicate on the "update_status_timestamp" field.
func UpdateStatusTimestampIn(vs ...uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldUpdateStatusTimestamp, vs...))
}

// UpdateStatusTimestampNotIn applies the NotIn predicate on the "update_status_timestamp" field.
func UpdateStatusTimestampNotIn(vs ...uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldUpdateStatusTimestamp, vs...))
}

// UpdateStatusTimestampGT applies the GT predicate on the "update_status_timestamp" field.
func UpdateStatusTimestampGT(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGT(FieldUpdateStatusTimestamp, v))
}

// UpdateStatusTimestampGTE applies the GTE predicate on the "update_status_timestamp" field.
func UpdateStatusTimestampGTE(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGTE(FieldUpdateStatusTimestamp, v))
}

// UpdateStatusTimestampLT applies the LT predicate on the "update_status_timestamp" field.
func UpdateStatusTimestampLT(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLT(FieldUpdateStatusTimestamp, v))
}

// UpdateStatusTimestampLTE applies the LTE predicate on the "update_status_timestamp" field.
func UpdateStatusTimestampLTE(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLTE(FieldUpdateStatusTimestamp, v))
}

// UpdateStatusTimestampIsNil applies the IsNil predicate on the "update_status_timestamp" field.
func UpdateStatusTimestampIsNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIsNull(FieldUpdateStatusTimestamp))
}

// UpdateStatusTimestampNotNil applies the NotNil predicate on the "update_status_timestamp" field.
func UpdateStatusTimestampNotNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotNull(FieldUpdateStatusTimestamp))
}

// UpdateStatusDetailEQ applies the EQ predicate on the "update_status_detail" field.
func UpdateStatusDetailEQ(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldUpdateStatusDetail, v))
}

// UpdateStatusDetailNEQ applies the NEQ predicate on the "update_status_detail" field.
func UpdateStatusDetailNEQ(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldUpdateStatusDetail, v))
}

// UpdateStatusDetailIn applies the In predicate on the "update_status_detail" field.
func UpdateStatusDetailIn(vs ...string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldUpdateStatusDetail, vs...))
}

// UpdateStatusDetailNotIn applies the NotIn predicate on the "update_status_detail" field.
func UpdateStatusDetailNotIn(vs ...string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldUpdateStatusDetail, vs...))
}

// UpdateStatusDetailGT applies the GT predicate on the "update_status_detail" field.
func UpdateStatusDetailGT(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGT(FieldUpdateStatusDetail, v))
}

// UpdateStatusDetailGTE applies the GTE predicate on the "update_status_detail" field.
func UpdateStatusDetailGTE(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGTE(FieldUpdateStatusDetail, v))
}

// UpdateStatusDetailLT applies the LT predicate on the "update_status_detail" field.
func UpdateStatusDetailLT(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLT(FieldUpdateStatusDetail, v))
}

// UpdateStatusDetailLTE applies the LTE predicate on the "update_status_detail" field.
func UpdateStatusDetailLTE(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLTE(FieldUpdateStatusDetail, v))
}

// UpdateStatusDetailContains applies the Contains predicate on the "update_status_detail" field.
func UpdateStatusDetailContains(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldContains(FieldUpdateStatusDetail, v))
}

// UpdateStatusDetailHasPrefix applies the HasPrefix predicate on the "update_status_detail" field.
func UpdateStatusDetailHasPrefix(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldHasPrefix(FieldUpdateStatusDetail, v))
}

// UpdateStatusDetailHasSuffix applies the HasSuffix predicate on the "update_status_detail" field.
func UpdateStatusDetailHasSuffix(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldHasSuffix(FieldUpdateStatusDetail, v))
}

// UpdateStatusDetailIsNil applies the IsNil predicate on the "update_status_detail" field.
func UpdateStatusDetailIsNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIsNull(FieldUpdateStatusDetail))
}

// UpdateStatusDetailNotNil applies the NotNil predicate on the "update_status_detail" field.
func UpdateStatusDetailNotNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotNull(FieldUpdateStatusDetail))
}

// UpdateStatusDetailEqualFold applies the EqualFold predicate on the "update_status_detail" field.
func UpdateStatusDetailEqualFold(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEqualFold(FieldUpdateStatusDetail, v))
}

// UpdateStatusDetailContainsFold applies the ContainsFold predicate on the "update_status_detail" field.
func UpdateStatusDetailContainsFold(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldContainsFold(FieldUpdateStatusDetail, v))
}

// TrustedAttestationStatusEQ applies the EQ predicate on the "trusted_attestation_status" field.
func TrustedAttestationStatusEQ(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldTrustedAttestationStatus, v))
}

// TrustedAttestationStatusNEQ applies the NEQ predicate on the "trusted_attestation_status" field.
func TrustedAttestationStatusNEQ(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldTrustedAttestationStatus, v))
}

// TrustedAttestationStatusIn applies the In predicate on the "trusted_attestation_status" field.
func TrustedAttestationStatusIn(vs ...string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldTrustedAttestationStatus, vs...))
}

// TrustedAttestationStatusNotIn applies the NotIn predicate on the "trusted_attestation_status" field.
func TrustedAttestationStatusNotIn(vs ...string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldTrustedAttestationStatus, vs...))
}

// TrustedAttestationStatusGT applies the GT predicate on the "trusted_attestation_status" field.
func TrustedAttestationStatusGT(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGT(FieldTrustedAttestationStatus, v))
}

// TrustedAttestationStatusGTE applies the GTE predicate on the "trusted_attestation_status" field.
func TrustedAttestationStatusGTE(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGTE(FieldTrustedAttestationStatus, v))
}

// TrustedAttestationStatusLT applies the LT predicate on the "trusted_attestation_status" field.
func TrustedAttestationStatusLT(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLT(FieldTrustedAttestationStatus, v))
}

// TrustedAttestationStatusLTE applies the LTE predicate on the "trusted_attestation_status" field.
func TrustedAttestationStatusLTE(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLTE(FieldTrustedAttestationStatus, v))
}

// TrustedAttestationStatusContains applies the Contains predicate on the "trusted_attestation_status" field.
func TrustedAttestationStatusContains(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldContains(FieldTrustedAttestationStatus, v))
}

// TrustedAttestationStatusHasPrefix applies the HasPrefix predicate on the "trusted_attestation_status" field.
func TrustedAttestationStatusHasPrefix(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldHasPrefix(FieldTrustedAttestationStatus, v))
}

// TrustedAttestationStatusHasSuffix applies the HasSuffix predicate on the "trusted_attestation_status" field.
func TrustedAttestationStatusHasSuffix(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldHasSuffix(FieldTrustedAttestationStatus, v))
}

// TrustedAttestationStatusIsNil applies the IsNil predicate on the "trusted_attestation_status" field.
func TrustedAttestationStatusIsNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIsNull(FieldTrustedAttestationStatus))
}

// TrustedAttestationStatusNotNil applies the NotNil predicate on the "trusted_attestation_status" field.
func TrustedAttestationStatusNotNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotNull(FieldTrustedAttestationStatus))
}

// TrustedAttestationStatusEqualFold applies the EqualFold predicate on the "trusted_attestation_status" field.
func TrustedAttestationStatusEqualFold(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEqualFold(FieldTrustedAttestationStatus, v))
}

// TrustedAttestationStatusContainsFold applies the ContainsFold predicate on the "trusted_attestation_status" field.
func TrustedAttestationStatusContainsFold(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldContainsFold(FieldTrustedAttestationStatus, v))
}

// TrustedAttestationStatusIndicatorEQ applies the EQ predicate on the "trusted_attestation_status_indicator" field.
func TrustedAttestationStatusIndicatorEQ(v TrustedAttestationStatusIndicator) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldTrustedAttestationStatusIndicator, v))
}

// TrustedAttestationStatusIndicatorNEQ applies the NEQ predicate on the "trusted_attestation_status_indicator" field.
func TrustedAttestationStatusIndicatorNEQ(v TrustedAttestationStatusIndicator) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldTrustedAttestationStatusIndicator, v))
}

// TrustedAttestationStatusIndicatorIn applies the In predicate on the "trusted_attestation_status_indicator" field.
func TrustedAttestationStatusIndicatorIn(vs ...TrustedAttestationStatusIndicator) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldTrustedAttestationStatusIndicator, vs...))
}

// TrustedAttestationStatusIndicatorNotIn applies the NotIn predicate on the "trusted_attestation_status_indicator" field.
func TrustedAttestationStatusIndicatorNotIn(vs ...TrustedAttestationStatusIndicator) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldTrustedAttestationStatusIndicator, vs...))
}

// TrustedAttestationStatusIndicatorIsNil applies the IsNil predicate on the "trusted_attestation_status_indicator" field.
func TrustedAttestationStatusIndicatorIsNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIsNull(FieldTrustedAttestationStatusIndicator))
}

// TrustedAttestationStatusIndicatorNotNil applies the NotNil predicate on the "trusted_attestation_status_indicator" field.
func TrustedAttestationStatusIndicatorNotNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotNull(FieldTrustedAttestationStatusIndicator))
}

// TrustedAttestationStatusTimestampEQ applies the EQ predicate on the "trusted_attestation_status_timestamp" field.
func TrustedAttestationStatusTimestampEQ(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldTrustedAttestationStatusTimestamp, v))
}

// TrustedAttestationStatusTimestampNEQ applies the NEQ predicate on the "trusted_attestation_status_timestamp" field.
func TrustedAttestationStatusTimestampNEQ(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldTrustedAttestationStatusTimestamp, v))
}

// TrustedAttestationStatusTimestampIn applies the In predicate on the "trusted_attestation_status_timestamp" field.
func TrustedAttestationStatusTimestampIn(vs ...uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldTrustedAttestationStatusTimestamp, vs...))
}

// TrustedAttestationStatusTimestampNotIn applies the NotIn predicate on the "trusted_attestation_status_timestamp" field.
func TrustedAttestationStatusTimestampNotIn(vs ...uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldTrustedAttestationStatusTimestamp, vs...))
}

// TrustedAttestationStatusTimestampGT applies the GT predicate on the "trusted_attestation_status_timestamp" field.
func TrustedAttestationStatusTimestampGT(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGT(FieldTrustedAttestationStatusTimestamp, v))
}

// TrustedAttestationStatusTimestampGTE applies the GTE predicate on the "trusted_attestation_status_timestamp" field.
func TrustedAttestationStatusTimestampGTE(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGTE(FieldTrustedAttestationStatusTimestamp, v))
}

// TrustedAttestationStatusTimestampLT applies the LT predicate on the "trusted_attestation_status_timestamp" field.
func TrustedAttestationStatusTimestampLT(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLT(FieldTrustedAttestationStatusTimestamp, v))
}

// TrustedAttestationStatusTimestampLTE applies the LTE predicate on the "trusted_attestation_status_timestamp" field.
func TrustedAttestationStatusTimestampLTE(v uint64) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLTE(FieldTrustedAttestationStatusTimestamp, v))
}

// TrustedAttestationStatusTimestampIsNil applies the IsNil predicate on the "trusted_attestation_status_timestamp" field.
func TrustedAttestationStatusTimestampIsNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIsNull(FieldTrustedAttestationStatusTimestamp))
}

// TrustedAttestationStatusTimestampNotNil applies the NotNil predicate on the "trusted_attestation_status_timestamp" field.
func TrustedAttestationStatusTimestampNotNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotNull(FieldTrustedAttestationStatusTimestamp))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldContains(FieldTenantID, v))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldHasPrefix(FieldTenantID, v))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldHasSuffix(FieldTenantID, v))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEqualFold(FieldTenantID, v))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldContainsFold(FieldTenantID, v))
}

// InstanceStatusDetailEQ applies the EQ predicate on the "instance_status_detail" field.
func InstanceStatusDetailEQ(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldInstanceStatusDetail, v))
}

// InstanceStatusDetailNEQ applies the NEQ predicate on the "instance_status_detail" field.
func InstanceStatusDetailNEQ(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldInstanceStatusDetail, v))
}

// InstanceStatusDetailIn applies the In predicate on the "instance_status_detail" field.
func InstanceStatusDetailIn(vs ...string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldInstanceStatusDetail, vs...))
}

// InstanceStatusDetailNotIn applies the NotIn predicate on the "instance_status_detail" field.
func InstanceStatusDetailNotIn(vs ...string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldInstanceStatusDetail, vs...))
}

// InstanceStatusDetailGT applies the GT predicate on the "instance_status_detail" field.
func InstanceStatusDetailGT(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGT(FieldInstanceStatusDetail, v))
}

// InstanceStatusDetailGTE applies the GTE predicate on the "instance_status_detail" field.
func InstanceStatusDetailGTE(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGTE(FieldInstanceStatusDetail, v))
}

// InstanceStatusDetailLT applies the LT predicate on the "instance_status_detail" field.
func InstanceStatusDetailLT(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLT(FieldInstanceStatusDetail, v))
}

// InstanceStatusDetailLTE applies the LTE predicate on the "instance_status_detail" field.
func InstanceStatusDetailLTE(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLTE(FieldInstanceStatusDetail, v))
}

// InstanceStatusDetailContains applies the Contains predicate on the "instance_status_detail" field.
func InstanceStatusDetailContains(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldContains(FieldInstanceStatusDetail, v))
}

// InstanceStatusDetailHasPrefix applies the HasPrefix predicate on the "instance_status_detail" field.
func InstanceStatusDetailHasPrefix(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldHasPrefix(FieldInstanceStatusDetail, v))
}

// InstanceStatusDetailHasSuffix applies the HasSuffix predicate on the "instance_status_detail" field.
func InstanceStatusDetailHasSuffix(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldHasSuffix(FieldInstanceStatusDetail, v))
}

// InstanceStatusDetailIsNil applies the IsNil predicate on the "instance_status_detail" field.
func InstanceStatusDetailIsNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIsNull(FieldInstanceStatusDetail))
}

// InstanceStatusDetailNotNil applies the NotNil predicate on the "instance_status_detail" field.
func InstanceStatusDetailNotNil() predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotNull(FieldInstanceStatusDetail))
}

// InstanceStatusDetailEqualFold applies the EqualFold predicate on the "instance_status_detail" field.
func InstanceStatusDetailEqualFold(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEqualFold(FieldInstanceStatusDetail, v))
}

// InstanceStatusDetailContainsFold applies the ContainsFold predicate on the "instance_status_detail" field.
func InstanceStatusDetailContainsFold(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldContainsFold(FieldInstanceStatusDetail, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtContains applies the Contains predicate on the "created_at" field.
func CreatedAtContains(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldContains(FieldCreatedAt, v))
}

// CreatedAtHasPrefix applies the HasPrefix predicate on the "created_at" field.
func CreatedAtHasPrefix(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldHasPrefix(FieldCreatedAt, v))
}

// CreatedAtHasSuffix applies the HasSuffix predicate on the "created_at" field.
func CreatedAtHasSuffix(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldHasSuffix(FieldCreatedAt, v))
}

// CreatedAtEqualFold applies the EqualFold predicate on the "created_at" field.
func CreatedAtEqualFold(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEqualFold(FieldCreatedAt, v))
}

// CreatedAtContainsFold applies the ContainsFold predicate on the "created_at" field.
func CreatedAtContainsFold(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldContainsFold(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtContains applies the Contains predicate on the "updated_at" field.
func UpdatedAtContains(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldContains(FieldUpdatedAt, v))
}

// UpdatedAtHasPrefix applies the HasPrefix predicate on the "updated_at" field.
func UpdatedAtHasPrefix(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldHasPrefix(FieldUpdatedAt, v))
}

// UpdatedAtHasSuffix applies the HasSuffix predicate on the "updated_at" field.
func UpdatedAtHasSuffix(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldHasSuffix(FieldUpdatedAt, v))
}

// UpdatedAtEqualFold applies the EqualFold predicate on the "updated_at" field.
func UpdatedAtEqualFold(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldEqualFold(FieldUpdatedAt, v))
}

// UpdatedAtContainsFold applies the ContainsFold predicate on the "updated_at" field.
func UpdatedAtContainsFold(v string) predicate.InstanceResource {
	return predicate.InstanceResource(sql.FieldContainsFold(FieldUpdatedAt, v))
}

// HasHost applies the HasEdge predicate on the "host" edge.
func HasHost() predicate.InstanceResource {
	return predicate.InstanceResource(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, false, HostTable, HostColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasHostWith applies the HasEdge predicate on the "host" edge with a given conditions (other predicates).
func HasHostWith(preds ...predicate.HostResource) predicate.InstanceResource {
	return predicate.InstanceResource(func(s *sql.Selector) {
		step := newHostStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasDesiredOs applies the HasEdge predicate on the "desired_os" edge.
func HasDesiredOs() predicate.InstanceResource {
	return predicate.InstanceResource(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, DesiredOsTable, DesiredOsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasDesiredOsWith applies the HasEdge predicate on the "desired_os" edge with a given conditions (other predicates).
func HasDesiredOsWith(preds ...predicate.OperatingSystemResource) predicate.InstanceResource {
	return predicate.InstanceResource(func(s *sql.Selector) {
		step := newDesiredOsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasCurrentOs applies the HasEdge predicate on the "current_os" edge.
func HasCurrentOs() predicate.InstanceResource {
	return predicate.InstanceResource(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, CurrentOsTable, CurrentOsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCurrentOsWith applies the HasEdge predicate on the "current_os" edge with a given conditions (other predicates).
func HasCurrentOsWith(preds ...predicate.OperatingSystemResource) predicate.InstanceResource {
	return predicate.InstanceResource(func(s *sql.Selector) {
		step := newCurrentOsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasWorkloadMembers applies the HasEdge predicate on the "workload_members" edge.
func HasWorkloadMembers() predicate.InstanceResource {
	return predicate.InstanceResource(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, true, WorkloadMembersTable, WorkloadMembersColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasWorkloadMembersWith applies the HasEdge predicate on the "workload_members" edge with a given conditions (other predicates).
func HasWorkloadMembersWith(preds ...predicate.WorkloadMember) predicate.InstanceResource {
	return predicate.InstanceResource(func(s *sql.Selector) {
		step := newWorkloadMembersStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasProvider applies the HasEdge predicate on the "provider" edge.
func HasProvider() predicate.InstanceResource {
	return predicate.InstanceResource(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, ProviderTable, ProviderColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasProviderWith applies the HasEdge predicate on the "provider" edge with a given conditions (other predicates).
func HasProviderWith(preds ...predicate.ProviderResource) predicate.InstanceResource {
	return predicate.InstanceResource(func(s *sql.Selector) {
		step := newProviderStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasLocalaccount applies the HasEdge predicate on the "localaccount" edge.
func HasLocalaccount() predicate.InstanceResource {
	return predicate.InstanceResource(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, LocalaccountTable, LocalaccountColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasLocalaccountWith applies the HasEdge predicate on the "localaccount" edge with a given conditions (other predicates).
func HasLocalaccountWith(preds ...predicate.LocalAccountResource) predicate.InstanceResource {
	return predicate.InstanceResource(func(s *sql.Selector) {
		step := newLocalaccountStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasCustomConfig applies the HasEdge predicate on the "custom_config" edge.
func HasCustomConfig() predicate.InstanceResource {
	return predicate.InstanceResource(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, CustomConfigTable, CustomConfigColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCustomConfigWith applies the HasEdge predicate on the "custom_config" edge with a given conditions (other predicates).
func HasCustomConfigWith(preds ...predicate.CustomConfigResource) predicate.InstanceResource {
	return predicate.InstanceResource(func(s *sql.Selector) {
		step := newCustomConfigStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.InstanceResource) predicate.InstanceResource {
	return predicate.InstanceResource(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.InstanceResource) predicate.InstanceResource {
	return predicate.InstanceResource(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.InstanceResource) predicate.InstanceResource {
	return predicate.InstanceResource(sql.NotPredicates(p))
}
