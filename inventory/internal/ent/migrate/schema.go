// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CustomConfigResourcesColumns holds the columns for the "custom_config_resources" table.
	CustomConfigResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "config", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
	}
	// CustomConfigResourcesTable holds the schema information for the "custom_config_resources" table.
	CustomConfigResourcesTable = &schema.Table{
		Name:       "custom_config_resources",
		Columns:    CustomConfigResourcesColumns,
		PrimaryKey: []*schema.Column{CustomConfigResourcesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "customconfigresource_name_tenant_id",
				Unique:  true,
				Columns: []*schema.Column{CustomConfigResourcesColumns[2], CustomConfigResourcesColumns[5]},
			},
			{
				Name:    "customconfigresource_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{CustomConfigResourcesColumns[5]},
			},
		},
	}
	// EndpointResourcesColumns holds the columns for the "endpoint_resources" table.
	EndpointResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "endpoint_resource_host", Type: field.TypeInt, Nullable: true},
	}
	// EndpointResourcesTable holds the schema information for the "endpoint_resources" table.
	EndpointResourcesTable = &schema.Table{
		Name:       "endpoint_resources",
		Columns:    EndpointResourcesColumns,
		PrimaryKey: []*schema.Column{EndpointResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "endpoint_resources_host_resources_host",
				Columns:    []*schema.Column{EndpointResourcesColumns[7]},
				RefColumns: []*schema.Column{HostResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "endpointresource_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{EndpointResourcesColumns[4]},
			},
		},
	}
	// HostResourcesColumns holds the columns for the "host_resources" table.
	HostResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "desired_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"HOST_STATE_UNSPECIFIED", "HOST_STATE_DELETED", "HOST_STATE_ONBOARDED", "HOST_STATE_UNTRUSTED", "HOST_STATE_REGISTERED"}},
		{Name: "current_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"HOST_STATE_UNSPECIFIED", "HOST_STATE_DELETED", "HOST_STATE_ONBOARDED", "HOST_STATE_UNTRUSTED", "HOST_STATE_REGISTERED"}},
		{Name: "note", Type: field.TypeString, Nullable: true},
		{Name: "hardware_kind", Type: field.TypeString, Nullable: true},
		{Name: "serial_number", Type: field.TypeString, Nullable: true},
		{Name: "uuid", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "memory_bytes", Type: field.TypeUint64, Nullable: true},
		{Name: "cpu_model", Type: field.TypeString, Nullable: true},
		{Name: "cpu_sockets", Type: field.TypeUint32, Nullable: true},
		{Name: "cpu_cores", Type: field.TypeUint32, Nullable: true},
		{Name: "cpu_capabilities", Type: field.TypeString, Nullable: true},
		{Name: "cpu_architecture", Type: field.TypeString, Nullable: true},
		{Name: "cpu_threads", Type: field.TypeUint32, Nullable: true},
		{Name: "cpu_topology", Type: field.TypeString, Nullable: true},
		{Name: "mgmt_ip", Type: field.TypeString, Nullable: true},
		{Name: "bmc_kind", Type: field.TypeEnum, Nullable: true, Enums: []string{"BAREMETAL_CONTROLLER_KIND_UNSPECIFIED", "BAREMETAL_CONTROLLER_KIND_NONE", "BAREMETAL_CONTROLLER_KIND_IPMI", "BAREMETAL_CONTROLLER_KIND_VPRO", "BAREMETAL_CONTROLLER_KIND_PDU"}},
		{Name: "bmc_ip", Type: field.TypeString, Nullable: true},
		{Name: "bmc_username", Type: field.TypeString, Nullable: true},
		{Name: "bmc_password", Type: field.TypeString, Nullable: true},
		{Name: "pxe_mac", Type: field.TypeString, Nullable: true},
		{Name: "hostname", Type: field.TypeString, Nullable: true},
		{Name: "product_name", Type: field.TypeString, Nullable: true},
		{Name: "bios_version", Type: field.TypeString, Nullable: true},
		{Name: "bios_release_date", Type: field.TypeString, Nullable: true},
		{Name: "bios_vendor", Type: field.TypeString, Nullable: true},
		{Name: "metadata", Type: field.TypeString, Nullable: true},
		{Name: "desired_power_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"POWER_STATE_UNSPECIFIED", "POWER_STATE_ON", "POWER_STATE_OFF", "POWER_STATE_SLEEP", "POWER_STATE_HIBERNATE", "POWER_STATE_RESET", "POWER_STATE_POWER_CYCLE"}},
		{Name: "current_power_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"POWER_STATE_UNSPECIFIED", "POWER_STATE_ON", "POWER_STATE_OFF", "POWER_STATE_SLEEP", "POWER_STATE_HIBERNATE", "POWER_STATE_RESET", "POWER_STATE_POWER_CYCLE"}},
		{Name: "power_status", Type: field.TypeString, Nullable: true},
		{Name: "power_status_indicator", Type: field.TypeEnum, Nullable: true, Enums: []string{"STATUS_INDICATION_UNSPECIFIED", "STATUS_INDICATION_ERROR", "STATUS_INDICATION_IN_PROGRESS", "STATUS_INDICATION_IDLE"}},
		{Name: "power_status_timestamp", Type: field.TypeUint64, Nullable: true},
		{Name: "power_command_policy", Type: field.TypeEnum, Nullable: true, Enums: []string{"POWER_COMMAND_POLICY_UNSPECIFIED", "POWER_COMMAND_POLICY_IMMEDIATE", "POWER_COMMAND_POLICY_ORDERED"}},
		{Name: "power_on_time", Type: field.TypeUint64, Nullable: true},
		{Name: "host_status", Type: field.TypeString, Nullable: true},
		{Name: "host_status_indicator", Type: field.TypeEnum, Nullable: true, Enums: []string{"STATUS_INDICATION_UNSPECIFIED", "STATUS_INDICATION_ERROR", "STATUS_INDICATION_IN_PROGRESS", "STATUS_INDICATION_IDLE"}},
		{Name: "host_status_timestamp", Type: field.TypeUint64, Nullable: true},
		{Name: "onboarding_status", Type: field.TypeString, Nullable: true},
		{Name: "onboarding_status_indicator", Type: field.TypeEnum, Nullable: true, Enums: []string{"STATUS_INDICATION_UNSPECIFIED", "STATUS_INDICATION_ERROR", "STATUS_INDICATION_IN_PROGRESS", "STATUS_INDICATION_IDLE"}},
		{Name: "onboarding_status_timestamp", Type: field.TypeUint64, Nullable: true},
		{Name: "registration_status", Type: field.TypeString, Nullable: true},
		{Name: "registration_status_indicator", Type: field.TypeEnum, Nullable: true, Enums: []string{"STATUS_INDICATION_UNSPECIFIED", "STATUS_INDICATION_ERROR", "STATUS_INDICATION_IN_PROGRESS", "STATUS_INDICATION_IDLE"}},
		{Name: "registration_status_timestamp", Type: field.TypeUint64, Nullable: true},
		{Name: "amt_sku", Type: field.TypeEnum, Nullable: true, Enums: []string{"AMT_SKU_UNSPECIFIED", "AMT_SKU_AMT", "AMT_SKU_ISM"}},
		{Name: "desired_amt_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"AMT_STATE_UNSPECIFIED", "AMT_STATE_PROVISIONED", "AMT_STATE_UNPROVISIONED", "AMT_STATE_DISCONNECTED"}},
		{Name: "current_amt_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"AMT_STATE_UNSPECIFIED", "AMT_STATE_PROVISIONED", "AMT_STATE_UNPROVISIONED", "AMT_STATE_DISCONNECTED"}},
		{Name: "amt_status", Type: field.TypeString, Nullable: true},
		{Name: "amt_status_indicator", Type: field.TypeEnum, Nullable: true, Enums: []string{"STATUS_INDICATION_UNSPECIFIED", "STATUS_INDICATION_ERROR", "STATUS_INDICATION_IN_PROGRESS", "STATUS_INDICATION_IDLE"}},
		{Name: "amt_status_timestamp", Type: field.TypeUint64, Nullable: true},
		{Name: "user_lvm_size", Type: field.TypeUint32, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "host_resource_site", Type: field.TypeInt, Nullable: true},
		{Name: "host_resource_provider", Type: field.TypeInt, Nullable: true},
		{Name: "instance_resource_host", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// HostResourcesTable holds the schema information for the "host_resources" table.
	HostResourcesTable = &schema.Table{
		Name:       "host_resources",
		Columns:    HostResourcesColumns,
		PrimaryKey: []*schema.Column{HostResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "host_resources_site_resources_site",
				Columns:    []*schema.Column{HostResourcesColumns[56]},
				RefColumns: []*schema.Column{SiteResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "host_resources_provider_resources_provider",
				Columns:    []*schema.Column{HostResourcesColumns[57]},
				RefColumns: []*schema.Column{ProviderResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "host_resources_instance_resources_host",
				Columns:    []*schema.Column{HostResourcesColumns[58]},
				RefColumns: []*schema.Column{InstanceResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "hostresource_uuid",
				Unique:  true,
				Columns: []*schema.Column{HostResourcesColumns[9]},
				Annotation: &entsql.IndexAnnotation{
					Where: "uuid IS NOT NULL",
				},
			},
			{
				Name:    "hostresource_serial_number",
				Unique:  true,
				Columns: []*schema.Column{HostResourcesColumns[8]},
				Annotation: &entsql.IndexAnnotation{
					Where: "uuid IS NULL",
				},
			},
			{
				Name:    "hostresource_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{HostResourcesColumns[53]},
			},
		},
	}
	// HostgpuResourcesColumns holds the columns for the "hostgpu_resources" table.
	HostgpuResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "pci_id", Type: field.TypeString, Nullable: true},
		{Name: "product", Type: field.TypeString, Nullable: true},
		{Name: "vendor", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "device_name", Type: field.TypeString, Nullable: true},
		{Name: "features", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "hostgpu_resource_host", Type: field.TypeInt},
	}
	// HostgpuResourcesTable holds the schema information for the "hostgpu_resources" table.
	HostgpuResourcesTable = &schema.Table{
		Name:       "hostgpu_resources",
		Columns:    HostgpuResourcesColumns,
		PrimaryKey: []*schema.Column{HostgpuResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hostgpu_resources_host_resources_host",
				Columns:    []*schema.Column{HostgpuResourcesColumns[11]},
				RefColumns: []*schema.Column{HostResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "hostgpuresource_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{HostgpuResourcesColumns[8]},
			},
		},
	}
	// HostnicResourcesColumns holds the columns for the "hostnic_resources" table.
	HostnicResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeString, Nullable: true},
		{Name: "provider_status", Type: field.TypeString, Nullable: true},
		{Name: "device_name", Type: field.TypeString, Nullable: true},
		{Name: "pci_identifier", Type: field.TypeString, Nullable: true},
		{Name: "mac_addr", Type: field.TypeString, Nullable: true},
		{Name: "sriov_enabled", Type: field.TypeBool, Nullable: true},
		{Name: "sriov_vfs_num", Type: field.TypeUint32, Nullable: true},
		{Name: "sriov_vfs_total", Type: field.TypeUint32, Nullable: true},
		{Name: "peer_name", Type: field.TypeString, Nullable: true},
		{Name: "peer_description", Type: field.TypeString, Nullable: true},
		{Name: "peer_mac", Type: field.TypeString, Nullable: true},
		{Name: "peer_mgmt_ip", Type: field.TypeString, Nullable: true},
		{Name: "peer_port", Type: field.TypeString, Nullable: true},
		{Name: "supported_link_mode", Type: field.TypeString, Nullable: true},
		{Name: "advertising_link_mode", Type: field.TypeString, Nullable: true},
		{Name: "current_speed_bps", Type: field.TypeUint64, Nullable: true},
		{Name: "current_duplex", Type: field.TypeString, Nullable: true},
		{Name: "features", Type: field.TypeString, Nullable: true},
		{Name: "mtu", Type: field.TypeUint32, Nullable: true},
		{Name: "link_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"NETWORK_INTERFACE_LINK_STATE_UNSPECIFIED", "NETWORK_INTERFACE_LINK_STATE_UP", "NETWORK_INTERFACE_LINK_STATE_DOWN"}},
		{Name: "bmc_interface", Type: field.TypeBool, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "hostnic_resource_host", Type: field.TypeInt},
	}
	// HostnicResourcesTable holds the schema information for the "hostnic_resources" table.
	HostnicResourcesTable = &schema.Table{
		Name:       "hostnic_resources",
		Columns:    HostnicResourcesColumns,
		PrimaryKey: []*schema.Column{HostnicResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hostnic_resources_host_resources_host",
				Columns:    []*schema.Column{HostnicResourcesColumns[26]},
				RefColumns: []*schema.Column{HostResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "hostnicresource_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{HostnicResourcesColumns[23]},
			},
		},
	}
	// HoststorageResourcesColumns holds the columns for the "hoststorage_resources" table.
	HoststorageResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeString, Nullable: true},
		{Name: "provider_status", Type: field.TypeString, Nullable: true},
		{Name: "wwid", Type: field.TypeString, Nullable: true},
		{Name: "serial", Type: field.TypeString, Nullable: true},
		{Name: "vendor", Type: field.TypeString, Nullable: true},
		{Name: "model", Type: field.TypeString, Nullable: true},
		{Name: "capacity_bytes", Type: field.TypeUint64, Nullable: true},
		{Name: "device_name", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "hoststorage_resource_host", Type: field.TypeInt},
	}
	// HoststorageResourcesTable holds the schema information for the "hoststorage_resources" table.
	HoststorageResourcesTable = &schema.Table{
		Name:       "hoststorage_resources",
		Columns:    HoststorageResourcesColumns,
		PrimaryKey: []*schema.Column{HoststorageResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hoststorage_resources_host_resources_host",
				Columns:    []*schema.Column{HoststorageResourcesColumns[13]},
				RefColumns: []*schema.Column{HostResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "hoststorageresource_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{HoststorageResourcesColumns[10]},
			},
		},
	}
	// HostusbResourcesColumns holds the columns for the "hostusb_resources" table.
	HostusbResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeString, Nullable: true},
		{Name: "owner_id", Type: field.TypeString, Nullable: true},
		{Name: "idvendor", Type: field.TypeString, Nullable: true},
		{Name: "idproduct", Type: field.TypeString, Nullable: true},
		{Name: "bus", Type: field.TypeUint32, Nullable: true},
		{Name: "addr", Type: field.TypeUint32, Nullable: true},
		{Name: "class", Type: field.TypeString, Nullable: true},
		{Name: "serial", Type: field.TypeString, Nullable: true},
		{Name: "device_name", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "hostusb_resource_host", Type: field.TypeInt},
	}
	// HostusbResourcesTable holds the schema information for the "hostusb_resources" table.
	HostusbResourcesTable = &schema.Table{
		Name:       "hostusb_resources",
		Columns:    HostusbResourcesColumns,
		PrimaryKey: []*schema.Column{HostusbResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hostusb_resources_host_resources_host",
				Columns:    []*schema.Column{HostusbResourcesColumns[14]},
				RefColumns: []*schema.Column{HostResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "hostusbresource_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{HostusbResourcesColumns[11]},
			},
		},
	}
	// IPAddressResourcesColumns holds the columns for the "ip_address_resources" table.
	IPAddressResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "address", Type: field.TypeString, Nullable: true},
		{Name: "desired_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"IP_ADDRESS_STATE_UNSPECIFIED", "IP_ADDRESS_STATE_ERROR", "IP_ADDRESS_STATE_ASSIGNED", "IP_ADDRESS_STATE_CONFIGURED", "IP_ADDRESS_STATE_RELEASED", "IP_ADDRESS_STATE_DELETED"}},
		{Name: "current_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"IP_ADDRESS_STATE_UNSPECIFIED", "IP_ADDRESS_STATE_ERROR", "IP_ADDRESS_STATE_ASSIGNED", "IP_ADDRESS_STATE_CONFIGURED", "IP_ADDRESS_STATE_RELEASED", "IP_ADDRESS_STATE_DELETED"}},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Enums: []string{"IP_ADDRESS_STATUS_UNSPECIFIED", "IP_ADDRESS_STATUS_ASSIGNMENT_ERROR", "IP_ADDRESS_STATUS_ASSIGNED", "IP_ADDRESS_STATUS_CONFIGURATION_ERROR", "IP_ADDRESS_STATUS_CONFIGURED", "IP_ADDRESS_STATUS_RELEASED", "IP_ADDRESS_STATUS_ERROR"}},
		{Name: "status_detail", Type: field.TypeString, Nullable: true},
		{Name: "config_method", Type: field.TypeEnum, Nullable: true, Enums: []string{"IP_ADDRESS_CONFIG_METHOD_UNSPECIFIED", "IP_ADDRESS_CONFIG_METHOD_STATIC", "IP_ADDRESS_CONFIG_METHOD_DYNAMIC"}},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "ip_address_resource_nic", Type: field.TypeInt},
	}
	// IPAddressResourcesTable holds the schema information for the "ip_address_resources" table.
	IPAddressResourcesTable = &schema.Table{
		Name:       "ip_address_resources",
		Columns:    IPAddressResourcesColumns,
		PrimaryKey: []*schema.Column{IPAddressResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ip_address_resources_hostnic_resources_nic",
				Columns:    []*schema.Column{IPAddressResourcesColumns[11]},
				RefColumns: []*schema.Column{HostnicResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "ipaddressresource_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{IPAddressResourcesColumns[8]},
			},
		},
	}
	// InstanceResourcesColumns holds the columns for the "instance_resources" table.
	InstanceResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeEnum, Nullable: true, Enums: []string{"INSTANCE_KIND_UNSPECIFIED", "INSTANCE_KIND_VM", "INSTANCE_KIND_METAL"}},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "desired_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"INSTANCE_STATE_UNSPECIFIED", "INSTANCE_STATE_RUNNING", "INSTANCE_STATE_DELETED", "INSTANCE_STATE_UNTRUSTED"}},
		{Name: "current_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"INSTANCE_STATE_UNSPECIFIED", "INSTANCE_STATE_RUNNING", "INSTANCE_STATE_DELETED", "INSTANCE_STATE_UNTRUSTED"}},
		{Name: "vm_memory_bytes", Type: field.TypeUint64, Nullable: true},
		{Name: "vm_cpu_cores", Type: field.TypeUint32, Nullable: true},
		{Name: "vm_storage_bytes", Type: field.TypeUint64, Nullable: true},
		{Name: "security_feature", Type: field.TypeEnum, Nullable: true, Enums: []string{"SECURITY_FEATURE_UNSPECIFIED", "SECURITY_FEATURE_NONE", "SECURITY_FEATURE_SECURE_BOOT_AND_FULL_DISK_ENCRYPTION"}},
		{Name: "instance_status", Type: field.TypeString, Nullable: true},
		{Name: "instance_status_indicator", Type: field.TypeEnum, Nullable: true, Enums: []string{"STATUS_INDICATION_UNSPECIFIED", "STATUS_INDICATION_ERROR", "STATUS_INDICATION_IN_PROGRESS", "STATUS_INDICATION_IDLE"}},
		{Name: "instance_status_timestamp", Type: field.TypeUint64, Nullable: true},
		{Name: "provisioning_status", Type: field.TypeString, Nullable: true},
		{Name: "provisioning_status_indicator", Type: field.TypeEnum, Nullable: true, Enums: []string{"STATUS_INDICATION_UNSPECIFIED", "STATUS_INDICATION_ERROR", "STATUS_INDICATION_IN_PROGRESS", "STATUS_INDICATION_IDLE"}},
		{Name: "provisioning_status_timestamp", Type: field.TypeUint64, Nullable: true},
		{Name: "update_status", Type: field.TypeString, Nullable: true},
		{Name: "update_status_indicator", Type: field.TypeEnum, Nullable: true, Enums: []string{"STATUS_INDICATION_UNSPECIFIED", "STATUS_INDICATION_ERROR", "STATUS_INDICATION_IN_PROGRESS", "STATUS_INDICATION_IDLE"}},
		{Name: "update_status_timestamp", Type: field.TypeUint64, Nullable: true},
		{Name: "trusted_attestation_status", Type: field.TypeString, Nullable: true},
		{Name: "trusted_attestation_status_indicator", Type: field.TypeEnum, Nullable: true, Enums: []string{"STATUS_INDICATION_UNSPECIFIED", "STATUS_INDICATION_ERROR", "STATUS_INDICATION_IN_PROGRESS", "STATUS_INDICATION_IDLE"}},
		{Name: "trusted_attestation_status_timestamp", Type: field.TypeUint64, Nullable: true},
		{Name: "existing_cves", Type: field.TypeString, Nullable: true},
		{Name: "runtime_packages", Type: field.TypeString, Nullable: true},
		{Name: "os_update_available", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "instance_status_detail", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "instance_resource_os", Type: field.TypeInt, Nullable: true},
		{Name: "instance_resource_provider", Type: field.TypeInt, Nullable: true},
		{Name: "instance_resource_localaccount", Type: field.TypeInt, Nullable: true},
		{Name: "instance_resource_os_update_policy", Type: field.TypeInt, Nullable: true},
	}
	// InstanceResourcesTable holds the schema information for the "instance_resources" table.
	InstanceResourcesTable = &schema.Table{
		Name:       "instance_resources",
		Columns:    InstanceResourcesColumns,
		PrimaryKey: []*schema.Column{InstanceResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "instance_resources_operating_system_resources_os",
				Columns:    []*schema.Column{InstanceResourcesColumns[29]},
				RefColumns: []*schema.Column{OperatingSystemResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "instance_resources_provider_resources_provider",
				Columns:    []*schema.Column{InstanceResourcesColumns[30]},
				RefColumns: []*schema.Column{ProviderResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "instance_resources_local_account_resources_localaccount",
				Columns:    []*schema.Column{InstanceResourcesColumns[31]},
				RefColumns: []*schema.Column{LocalAccountResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "instance_resources_os_update_policy_resources_os_update_policy",
				Columns:    []*schema.Column{InstanceResourcesColumns[32]},
				RefColumns: []*schema.Column{OsUpdatePolicyResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "instanceresource_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{InstanceResourcesColumns[25]},
			},
		},
	}
	// LocalAccountResourcesColumns holds the columns for the "local_account_resources" table.
	LocalAccountResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "username", Type: field.TypeString},
		{Name: "ssh_key", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
	}
	// LocalAccountResourcesTable holds the schema information for the "local_account_resources" table.
	LocalAccountResourcesTable = &schema.Table{
		Name:       "local_account_resources",
		Columns:    LocalAccountResourcesColumns,
		PrimaryKey: []*schema.Column{LocalAccountResourcesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "localaccountresource_username_tenant_id",
				Unique:  true,
				Columns: []*schema.Column{LocalAccountResourcesColumns[2], LocalAccountResourcesColumns[4]},
			},
			{
				Name:    "localaccountresource_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{LocalAccountResourcesColumns[4]},
			},
		},
	}
	// NetlinkResourcesColumns holds the columns for the "netlink_resources" table.
	NetlinkResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "desired_state", Type: field.TypeEnum, Enums: []string{"NETLINK_STATE_UNSPECIFIED", "NETLINK_STATE_DELETED", "NETLINK_STATE_ONLINE", "NETLINK_STATE_OFFLINE", "NETLINK_STATE_ERROR"}},
		{Name: "current_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"NETLINK_STATE_UNSPECIFIED", "NETLINK_STATE_DELETED", "NETLINK_STATE_ONLINE", "NETLINK_STATE_OFFLINE", "NETLINK_STATE_ERROR"}},
		{Name: "provider_status", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "netlink_resource_src", Type: field.TypeInt, Nullable: true},
		{Name: "netlink_resource_dst", Type: field.TypeInt, Nullable: true},
	}
	// NetlinkResourcesTable holds the schema information for the "netlink_resources" table.
	NetlinkResourcesTable = &schema.Table{
		Name:       "netlink_resources",
		Columns:    NetlinkResourcesColumns,
		PrimaryKey: []*schema.Column{NetlinkResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "netlink_resources_endpoint_resources_src",
				Columns:    []*schema.Column{NetlinkResourcesColumns[10]},
				RefColumns: []*schema.Column{EndpointResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "netlink_resources_endpoint_resources_dst",
				Columns:    []*schema.Column{NetlinkResourcesColumns[11]},
				RefColumns: []*schema.Column{EndpointResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "netlinkresource_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{NetlinkResourcesColumns[7]},
			},
		},
	}
	// NetworkSegmentsColumns holds the columns for the "network_segments" table.
	NetworkSegmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "vlan_id", Type: field.TypeInt32, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "network_segment_site", Type: field.TypeInt},
	}
	// NetworkSegmentsTable holds the schema information for the "network_segments" table.
	NetworkSegmentsTable = &schema.Table{
		Name:       "network_segments",
		Columns:    NetworkSegmentsColumns,
		PrimaryKey: []*schema.Column{NetworkSegmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "network_segments_site_resources_site",
				Columns:    []*schema.Column{NetworkSegmentsColumns[7]},
				RefColumns: []*schema.Column{SiteResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// OsUpdatePoliciesColumns holds the columns for the "os_update_policies" table.
	OsUpdatePoliciesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "installed_packages", Type: field.TypeString, Nullable: true},
		{Name: "update_sources", Type: field.TypeString, Nullable: true},
		{Name: "kernel_command", Type: field.TypeString, Nullable: true},
		{Name: "update_policy", Type: field.TypeEnum, Nullable: true, Enums: []string{"UPDATE_POLICY_UNSPECIFIED", "UPDATE_POLICY_LATEST", "UPDATE_POLICY_TARGET"}},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "os_update_policy_target_os", Type: field.TypeInt, Nullable: true},
	}
	// OsUpdatePoliciesTable holds the schema information for the "os_update_policies" table.
	OsUpdatePoliciesTable = &schema.Table{
		Name:       "os_update_policies",
		Columns:    OsUpdatePoliciesColumns,
		PrimaryKey: []*schema.Column{OsUpdatePoliciesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "os_update_policies_operating_system_resources_target_os",
				Columns:    []*schema.Column{OsUpdatePoliciesColumns[9]},
				RefColumns: []*schema.Column{OperatingSystemResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OsUpdatePolicyResourcesColumns holds the columns for the "os_update_policy_resources" table.
	OsUpdatePolicyResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "update_sources", Type: field.TypeString, Nullable: true},
		{Name: "update_packages", Type: field.TypeString, Nullable: true},
		{Name: "update_kernel_command", Type: field.TypeString, Nullable: true},
		{Name: "update_policy", Type: field.TypeEnum, Nullable: true, Enums: []string{"UPDATE_POLICY_UNSPECIFIED", "UPDATE_POLICY_LATEST", "UPDATE_POLICY_TARGET"}},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "os_update_policy_resource_target_os", Type: field.TypeInt, Nullable: true},
	}
	// OsUpdatePolicyResourcesTable holds the schema information for the "os_update_policy_resources" table.
	OsUpdatePolicyResourcesTable = &schema.Table{
		Name:       "os_update_policy_resources",
		Columns:    OsUpdatePolicyResourcesColumns,
		PrimaryKey: []*schema.Column{OsUpdatePolicyResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "os_update_policy_resources_operating_system_resources_target_os",
				Columns:    []*schema.Column{OsUpdatePolicyResourcesColumns[11]},
				RefColumns: []*schema.Column{OperatingSystemResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OsUpdateRunResourcesColumns holds the columns for the "os_update_run_resources" table.
	OsUpdateRunResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "status_indicator", Type: field.TypeEnum, Enums: []string{"STATUS_INDICATION_UNSPECIFIED", "STATUS_INDICATION_ERROR", "STATUS_INDICATION_IN_PROGRESS", "STATUS_INDICATION_IDLE"}},
		{Name: "status", Type: field.TypeString, Nullable: true},
		{Name: "status_details", Type: field.TypeString, Nullable: true},
		{Name: "status_timestamp", Type: field.TypeUint64},
		{Name: "start_time", Type: field.TypeUint64},
		{Name: "end_time", Type: field.TypeUint64, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "os_update_run_resource_applied_policy", Type: field.TypeInt},
		{Name: "os_update_run_resource_instance", Type: field.TypeInt},
	}
	// OsUpdateRunResourcesTable holds the schema information for the "os_update_run_resources" table.
	OsUpdateRunResourcesTable = &schema.Table{
		Name:       "os_update_run_resources",
		Columns:    OsUpdateRunResourcesColumns,
		PrimaryKey: []*schema.Column{OsUpdateRunResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "os_update_run_resources_os_update_policy_resources_applied_policy",
				Columns:    []*schema.Column{OsUpdateRunResourcesColumns[13]},
				RefColumns: []*schema.Column{OsUpdatePolicyResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "os_update_run_resources_instance_resources_instance",
				Columns:    []*schema.Column{OsUpdateRunResourcesColumns[14]},
				RefColumns: []*schema.Column{InstanceResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// OperatingSystemResourcesColumns holds the columns for the "operating_system_resources" table.
	OperatingSystemResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "architecture", Type: field.TypeString, Nullable: true},
		{Name: "kernel_command", Type: field.TypeString, Nullable: true},
		{Name: "update_sources", Type: field.TypeString, Nullable: true},
		{Name: "image_url", Type: field.TypeString, Nullable: true},
		{Name: "image_id", Type: field.TypeString, Nullable: true},
		{Name: "sha256", Type: field.TypeString, Nullable: true},
		{Name: "profile_name", Type: field.TypeString, Nullable: true},
		{Name: "profile_version", Type: field.TypeString, Nullable: true},
		{Name: "installed_packages", Type: field.TypeString, Nullable: true},
		{Name: "installed_packages_url", Type: field.TypeString, Nullable: true},
		{Name: "security_feature", Type: field.TypeEnum, Nullable: true, Enums: []string{"SECURITY_FEATURE_UNSPECIFIED", "SECURITY_FEATURE_NONE", "SECURITY_FEATURE_SECURE_BOOT_AND_FULL_DISK_ENCRYPTION"}},
		{Name: "os_type", Type: field.TypeEnum, Nullable: true, Enums: []string{"OS_TYPE_UNSPECIFIED", "OS_TYPE_MUTABLE", "OS_TYPE_IMMUTABLE"}},
		{Name: "os_provider", Type: field.TypeEnum, Enums: []string{"OS_PROVIDER_KIND_UNSPECIFIED", "OS_PROVIDER_KIND_INFRA", "OS_PROVIDER_KIND_LENOVO"}},
		{Name: "platform_bundle", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "metadata", Type: field.TypeString, Nullable: true},
		{Name: "existing_cves_url", Type: field.TypeString, Nullable: true},
		{Name: "existing_cves", Type: field.TypeString, Nullable: true},
		{Name: "fixed_cves_url", Type: field.TypeString, Nullable: true},
		{Name: "fixed_cves", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
	}
	// OperatingSystemResourcesTable holds the schema information for the "operating_system_resources" table.
	OperatingSystemResourcesTable = &schema.Table{
		Name:       "operating_system_resources",
		Columns:    OperatingSystemResourcesColumns,
		PrimaryKey: []*schema.Column{OperatingSystemResourcesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "operatingsystemresource_name_tenant_id",
				Unique:  true,
				Columns: []*schema.Column{OperatingSystemResourcesColumns[2], OperatingSystemResourcesColumns[23]},
			},
			{
				Name:    "operatingsystemresource_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{OperatingSystemResourcesColumns[23]},
			},
		},
	}
	// OuResourcesColumns holds the columns for the "ou_resources" table.
	OuResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "ou_kind", Type: field.TypeString, Nullable: true},
		{Name: "metadata", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "ou_resource_parent_ou", Type: field.TypeInt, Nullable: true},
	}
	// OuResourcesTable holds the schema information for the "ou_resources" table.
	OuResourcesTable = &schema.Table{
		Name:       "ou_resources",
		Columns:    OuResourcesColumns,
		PrimaryKey: []*schema.Column{OuResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ou_resources_ou_resources_parent_ou",
				Columns:    []*schema.Column{OuResourcesColumns[8]},
				RefColumns: []*schema.Column{OuResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "ouresource_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{OuResourcesColumns[5]},
			},
		},
	}
	// ProviderResourcesColumns holds the columns for the "provider_resources" table.
	ProviderResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "provider_kind", Type: field.TypeEnum, Enums: []string{"PROVIDER_KIND_UNSPECIFIED", "PROVIDER_KIND_BAREMETAL"}},
		{Name: "provider_vendor", Type: field.TypeEnum, Nullable: true, Enums: []string{"PROVIDER_VENDOR_UNSPECIFIED", "PROVIDER_VENDOR_LENOVO_LXCA", "PROVIDER_VENDOR_LENOVO_LOCA"}},
		{Name: "name", Type: field.TypeString},
		{Name: "api_endpoint", Type: field.TypeString},
		{Name: "api_credentials", Type: field.TypeString, Nullable: true},
		{Name: "config", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
	}
	// ProviderResourcesTable holds the schema information for the "provider_resources" table.
	ProviderResourcesTable = &schema.Table{
		Name:       "provider_resources",
		Columns:    ProviderResourcesColumns,
		PrimaryKey: []*schema.Column{ProviderResourcesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "providerresource_name_tenant_id",
				Unique:  true,
				Columns: []*schema.Column{ProviderResourcesColumns[4], ProviderResourcesColumns[8]},
			},
			{
				Name:    "providerresource_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ProviderResourcesColumns[8]},
			},
		},
	}
	// RegionResourcesColumns holds the columns for the "region_resources" table.
	RegionResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "region_kind", Type: field.TypeString, Nullable: true},
		{Name: "metadata", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "region_resource_parent_region", Type: field.TypeInt, Nullable: true},
	}
	// RegionResourcesTable holds the schema information for the "region_resources" table.
	RegionResourcesTable = &schema.Table{
		Name:       "region_resources",
		Columns:    RegionResourcesColumns,
		PrimaryKey: []*schema.Column{RegionResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "region_resources_region_resources_parent_region",
				Columns:    []*schema.Column{RegionResourcesColumns[8]},
				RefColumns: []*schema.Column{RegionResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "regionresource_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{RegionResourcesColumns[5]},
			},
		},
	}
	// RemoteAccessConfigurationsColumns holds the columns for the "remote_access_configurations" table.
	RemoteAccessConfigurationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "expiration_timestamp", Type: field.TypeUint64},
		{Name: "local_port", Type: field.TypeUint32, Unique: true, Nullable: true},
		{Name: "user", Type: field.TypeString, Nullable: true},
		{Name: "current_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"REMOTE_ACCESS_STATE_UNSPECIFIED", "REMOTE_ACCESS_STATE_DELETED", "REMOTE_ACCESS_STATE_ERROR", "REMOTE_ACCESS_STATE_ENABLED"}},
		{Name: "desired_state", Type: field.TypeEnum, Enums: []string{"REMOTE_ACCESS_STATE_UNSPECIFIED", "REMOTE_ACCESS_STATE_DELETED", "REMOTE_ACCESS_STATE_ERROR", "REMOTE_ACCESS_STATE_ENABLED"}},
		{Name: "configuration_status", Type: field.TypeString, Nullable: true},
		{Name: "configuration_status_indicator", Type: field.TypeEnum, Nullable: true, Enums: []string{"STATUS_INDICATION_UNSPECIFIED", "STATUS_INDICATION_ERROR", "STATUS_INDICATION_IN_PROGRESS", "STATUS_INDICATION_IDLE"}},
		{Name: "configuration_status_timestamp", Type: field.TypeUint64, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "remote_access_configuration_instance", Type: field.TypeInt},
	}
	// RemoteAccessConfigurationsTable holds the schema information for the "remote_access_configurations" table.
	RemoteAccessConfigurationsTable = &schema.Table{
		Name:       "remote_access_configurations",
		Columns:    RemoteAccessConfigurationsColumns,
		PrimaryKey: []*schema.Column{RemoteAccessConfigurationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "remote_access_configurations_instance_resources_instance",
				Columns:    []*schema.Column{RemoteAccessConfigurationsColumns[13]},
				RefColumns: []*schema.Column{InstanceResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "remoteaccessconfiguration_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{RemoteAccessConfigurationsColumns[10]},
			},
		},
	}
	// RepeatedScheduleResourcesColumns holds the columns for the "repeated_schedule_resources" table.
	RepeatedScheduleResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "schedule_status", Type: field.TypeEnum, Nullable: true, Enums: []string{"SCHEDULE_STATUS_UNSPECIFIED", "SCHEDULE_STATUS_MAINTENANCE", "SCHEDULE_STATUS_SHIPPING", "SCHEDULE_STATUS_OS_UPDATE", "SCHEDULE_STATUS_FIRMWARE_UPDATE", "SCHEDULE_STATUS_CLUSTER_UPDATE"}},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "duration_seconds", Type: field.TypeUint32, Nullable: true},
		{Name: "cron_minutes", Type: field.TypeString},
		{Name: "cron_hours", Type: field.TypeString},
		{Name: "cron_day_month", Type: field.TypeString},
		{Name: "cron_month", Type: field.TypeString},
		{Name: "cron_day_week", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "repeated_schedule_resource_target_site", Type: field.TypeInt, Nullable: true},
		{Name: "repeated_schedule_resource_target_host", Type: field.TypeInt, Nullable: true},
		{Name: "repeated_schedule_resource_target_workload", Type: field.TypeInt, Nullable: true},
		{Name: "repeated_schedule_resource_target_region", Type: field.TypeInt, Nullable: true},
	}
	// RepeatedScheduleResourcesTable holds the schema information for the "repeated_schedule_resources" table.
	RepeatedScheduleResourcesTable = &schema.Table{
		Name:       "repeated_schedule_resources",
		Columns:    RepeatedScheduleResourcesColumns,
		PrimaryKey: []*schema.Column{RepeatedScheduleResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "repeated_schedule_resources_site_resources_target_site",
				Columns:    []*schema.Column{RepeatedScheduleResourcesColumns[13]},
				RefColumns: []*schema.Column{SiteResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "repeated_schedule_resources_host_resources_target_host",
				Columns:    []*schema.Column{RepeatedScheduleResourcesColumns[14]},
				RefColumns: []*schema.Column{HostResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "repeated_schedule_resources_workload_resources_target_workload",
				Columns:    []*schema.Column{RepeatedScheduleResourcesColumns[15]},
				RefColumns: []*schema.Column{WorkloadResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "repeated_schedule_resources_region_resources_target_region",
				Columns:    []*schema.Column{RepeatedScheduleResourcesColumns[16]},
				RefColumns: []*schema.Column{RegionResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "repeatedscheduleresource_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{RepeatedScheduleResourcesColumns[10]},
			},
		},
	}
	// SingleScheduleResourcesColumns holds the columns for the "single_schedule_resources" table.
	SingleScheduleResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "schedule_status", Type: field.TypeEnum, Nullable: true, Enums: []string{"SCHEDULE_STATUS_UNSPECIFIED", "SCHEDULE_STATUS_MAINTENANCE", "SCHEDULE_STATUS_SHIPPING", "SCHEDULE_STATUS_OS_UPDATE", "SCHEDULE_STATUS_FIRMWARE_UPDATE", "SCHEDULE_STATUS_CLUSTER_UPDATE"}},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "start_seconds", Type: field.TypeUint64},
		{Name: "end_seconds", Type: field.TypeUint64, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "single_schedule_resource_target_site", Type: field.TypeInt, Nullable: true},
		{Name: "single_schedule_resource_target_host", Type: field.TypeInt, Nullable: true},
		{Name: "single_schedule_resource_target_workload", Type: field.TypeInt, Nullable: true},
		{Name: "single_schedule_resource_target_region", Type: field.TypeInt, Nullable: true},
	}
	// SingleScheduleResourcesTable holds the schema information for the "single_schedule_resources" table.
	SingleScheduleResourcesTable = &schema.Table{
		Name:       "single_schedule_resources",
		Columns:    SingleScheduleResourcesColumns,
		PrimaryKey: []*schema.Column{SingleScheduleResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "single_schedule_resources_site_resources_target_site",
				Columns:    []*schema.Column{SingleScheduleResourcesColumns[9]},
				RefColumns: []*schema.Column{SiteResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "single_schedule_resources_host_resources_target_host",
				Columns:    []*schema.Column{SingleScheduleResourcesColumns[10]},
				RefColumns: []*schema.Column{HostResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "single_schedule_resources_workload_resources_target_workload",
				Columns:    []*schema.Column{SingleScheduleResourcesColumns[11]},
				RefColumns: []*schema.Column{WorkloadResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "single_schedule_resources_region_resources_target_region",
				Columns:    []*schema.Column{SingleScheduleResourcesColumns[12]},
				RefColumns: []*schema.Column{RegionResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "singlescheduleresource_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SingleScheduleResourcesColumns[6]},
			},
		},
	}
	// SiteResourcesColumns holds the columns for the "site_resources" table.
	SiteResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "address", Type: field.TypeString, Nullable: true},
		{Name: "site_lat", Type: field.TypeInt32, Nullable: true},
		{Name: "site_lng", Type: field.TypeInt32, Nullable: true},
		{Name: "dns_servers", Type: field.TypeString, Nullable: true},
		{Name: "docker_registries", Type: field.TypeString, Nullable: true},
		{Name: "metrics_endpoint", Type: field.TypeString, Nullable: true},
		{Name: "http_proxy", Type: field.TypeString, Nullable: true},
		{Name: "https_proxy", Type: field.TypeString, Nullable: true},
		{Name: "ftp_proxy", Type: field.TypeString, Nullable: true},
		{Name: "no_proxy", Type: field.TypeString, Nullable: true},
		{Name: "metadata", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "site_resource_region", Type: field.TypeInt, Nullable: true},
		{Name: "site_resource_ou", Type: field.TypeInt, Nullable: true},
		{Name: "site_resource_provider", Type: field.TypeInt, Nullable: true},
	}
	// SiteResourcesTable holds the schema information for the "site_resources" table.
	SiteResourcesTable = &schema.Table{
		Name:       "site_resources",
		Columns:    SiteResourcesColumns,
		PrimaryKey: []*schema.Column{SiteResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "site_resources_region_resources_region",
				Columns:    []*schema.Column{SiteResourcesColumns[17]},
				RefColumns: []*schema.Column{RegionResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "site_resources_ou_resources_ou",
				Columns:    []*schema.Column{SiteResourcesColumns[18]},
				RefColumns: []*schema.Column{OuResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "site_resources_provider_resources_provider",
				Columns:    []*schema.Column{SiteResourcesColumns[19]},
				RefColumns: []*schema.Column{ProviderResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "siteresource_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SiteResourcesColumns[14]},
			},
		},
	}
	// TelemetryGroupResourcesColumns holds the columns for the "telemetry_group_resources" table.
	TelemetryGroupResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "kind", Type: field.TypeEnum, Enums: []string{"TELEMETRY_RESOURCE_KIND_UNSPECIFIED", "TELEMETRY_RESOURCE_KIND_METRICS", "TELEMETRY_RESOURCE_KIND_LOGS"}},
		{Name: "collector_kind", Type: field.TypeEnum, Enums: []string{"COLLECTOR_KIND_UNSPECIFIED", "COLLECTOR_KIND_HOST", "COLLECTOR_KIND_CLUSTER"}},
		{Name: "groups", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
	}
	// TelemetryGroupResourcesTable holds the schema information for the "telemetry_group_resources" table.
	TelemetryGroupResourcesTable = &schema.Table{
		Name:       "telemetry_group_resources",
		Columns:    TelemetryGroupResourcesColumns,
		PrimaryKey: []*schema.Column{TelemetryGroupResourcesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "telemetrygroupresource_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{TelemetryGroupResourcesColumns[6]},
			},
		},
	}
	// TelemetryProfilesColumns holds the columns for the "telemetry_profiles" table.
	TelemetryProfilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeEnum, Enums: []string{"TELEMETRY_RESOURCE_KIND_UNSPECIFIED", "TELEMETRY_RESOURCE_KIND_METRICS", "TELEMETRY_RESOURCE_KIND_LOGS"}},
		{Name: "metrics_interval", Type: field.TypeUint32, Nullable: true},
		{Name: "log_level", Type: field.TypeEnum, Nullable: true, Enums: []string{"SEVERITY_LEVEL_UNSPECIFIED", "SEVERITY_LEVEL_CRITICAL", "SEVERITY_LEVEL_ERROR", "SEVERITY_LEVEL_WARN", "SEVERITY_LEVEL_INFO", "SEVERITY_LEVEL_DEBUG"}},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "telemetry_profile_region", Type: field.TypeInt, Nullable: true},
		{Name: "telemetry_profile_site", Type: field.TypeInt, Nullable: true},
		{Name: "telemetry_profile_instance", Type: field.TypeInt, Nullable: true},
		{Name: "telemetry_profile_group", Type: field.TypeInt},
	}
	// TelemetryProfilesTable holds the schema information for the "telemetry_profiles" table.
	TelemetryProfilesTable = &schema.Table{
		Name:       "telemetry_profiles",
		Columns:    TelemetryProfilesColumns,
		PrimaryKey: []*schema.Column{TelemetryProfilesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "telemetry_profiles_region_resources_region",
				Columns:    []*schema.Column{TelemetryProfilesColumns[8]},
				RefColumns: []*schema.Column{RegionResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "telemetry_profiles_site_resources_site",
				Columns:    []*schema.Column{TelemetryProfilesColumns[9]},
				RefColumns: []*schema.Column{SiteResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "telemetry_profiles_instance_resources_instance",
				Columns:    []*schema.Column{TelemetryProfilesColumns[10]},
				RefColumns: []*schema.Column{InstanceResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "telemetry_profiles_telemetry_group_resources_group",
				Columns:    []*schema.Column{TelemetryProfilesColumns[11]},
				RefColumns: []*schema.Column{TelemetryGroupResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "telemetryprofile_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{TelemetryProfilesColumns[5]},
			},
		},
	}
	// TenantsColumns holds the columns for the "tenants" table.
	TenantsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "current_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"TENANT_STATE_UNSPECIFIED", "TENANT_STATE_CREATED", "TENANT_STATE_DELETED"}},
		{Name: "desired_state", Type: field.TypeEnum, Enums: []string{"TENANT_STATE_UNSPECIFIED", "TENANT_STATE_CREATED", "TENANT_STATE_DELETED"}},
		{Name: "watcher_osmanager", Type: field.TypeBool, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
	}
	// TenantsTable holds the schema information for the "tenants" table.
	TenantsTable = &schema.Table{
		Name:       "tenants",
		Columns:    TenantsColumns,
		PrimaryKey: []*schema.Column{TenantsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "tenant_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{TenantsColumns[5]},
			},
		},
	}
	// WorkloadMembersColumns holds the columns for the "workload_members" table.
	WorkloadMembersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeEnum, Enums: []string{"WORKLOAD_MEMBER_KIND_UNSPECIFIED", "WORKLOAD_MEMBER_KIND_CLUSTER_NODE"}},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "workload_member_workload", Type: field.TypeInt},
		{Name: "workload_member_instance", Type: field.TypeInt},
	}
	// WorkloadMembersTable holds the schema information for the "workload_members" table.
	WorkloadMembersTable = &schema.Table{
		Name:       "workload_members",
		Columns:    WorkloadMembersColumns,
		PrimaryKey: []*schema.Column{WorkloadMembersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workload_members_workload_resources_workload",
				Columns:    []*schema.Column{WorkloadMembersColumns[6]},
				RefColumns: []*schema.Column{WorkloadResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "workload_members_instance_resources_instance",
				Columns:    []*schema.Column{WorkloadMembersColumns[7]},
				RefColumns: []*schema.Column{InstanceResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// WorkloadResourcesColumns holds the columns for the "workload_resources" table.
	WorkloadResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeEnum, Enums: []string{"WORKLOAD_KIND_UNSPECIFIED", "WORKLOAD_KIND_CLUSTER", "WORKLOAD_KIND_DHCP"}},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "external_id", Type: field.TypeString, Nullable: true},
		{Name: "desired_state", Type: field.TypeEnum, Enums: []string{"WORKLOAD_STATE_UNSPECIFIED", "WORKLOAD_STATE_ERROR", "WORKLOAD_STATE_DELETING", "WORKLOAD_STATE_DELETED", "WORKLOAD_STATE_PROVISIONED"}},
		{Name: "current_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"WORKLOAD_STATE_UNSPECIFIED", "WORKLOAD_STATE_ERROR", "WORKLOAD_STATE_DELETING", "WORKLOAD_STATE_DELETED", "WORKLOAD_STATE_PROVISIONED"}},
		{Name: "status", Type: field.TypeString, Nullable: true},
		{Name: "metadata", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
		{Name: "updated_at", Type: field.TypeString, SchemaType: map[string]string{"postgres": "TIMESTAMP"}},
	}
	// WorkloadResourcesTable holds the schema information for the "workload_resources" table.
	WorkloadResourcesTable = &schema.Table{
		Name:       "workload_resources",
		Columns:    WorkloadResourcesColumns,
		PrimaryKey: []*schema.Column{WorkloadResourcesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "workloadresource_external_id_tenant_id",
				Unique:  true,
				Columns: []*schema.Column{WorkloadResourcesColumns[4], WorkloadResourcesColumns[9]},
			},
			{
				Name:    "workloadresource_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{WorkloadResourcesColumns[9]},
			},
		},
	}
	// InstanceResourceCustomConfigColumns holds the columns for the "instance_resource_custom_config" table.
	InstanceResourceCustomConfigColumns = []*schema.Column{
		{Name: "instance_resource_id", Type: field.TypeInt},
		{Name: "custom_config_resource_id", Type: field.TypeInt},
	}
	// InstanceResourceCustomConfigTable holds the schema information for the "instance_resource_custom_config" table.
	InstanceResourceCustomConfigTable = &schema.Table{
		Name:       "instance_resource_custom_config",
		Columns:    InstanceResourceCustomConfigColumns,
		PrimaryKey: []*schema.Column{InstanceResourceCustomConfigColumns[0], InstanceResourceCustomConfigColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "instance_resource_custom_config_instance_resource_id",
				Columns:    []*schema.Column{InstanceResourceCustomConfigColumns[0]},
				RefColumns: []*schema.Column{InstanceResourcesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "instance_resource_custom_config_custom_config_resource_id",
				Columns:    []*schema.Column{InstanceResourceCustomConfigColumns[1]},
				RefColumns: []*schema.Column{CustomConfigResourcesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CustomConfigResourcesTable,
		EndpointResourcesTable,
		HostResourcesTable,
		HostgpuResourcesTable,
		HostnicResourcesTable,
		HoststorageResourcesTable,
		HostusbResourcesTable,
		IPAddressResourcesTable,
		InstanceResourcesTable,
		LocalAccountResourcesTable,
		NetlinkResourcesTable,
		NetworkSegmentsTable,
		OsUpdatePoliciesTable,
		OsUpdatePolicyResourcesTable,
		OsUpdateRunResourcesTable,
		OperatingSystemResourcesTable,
		OuResourcesTable,
		ProviderResourcesTable,
		RegionResourcesTable,
		RemoteAccessConfigurationsTable,
		RepeatedScheduleResourcesTable,
		SingleScheduleResourcesTable,
		SiteResourcesTable,
		TelemetryGroupResourcesTable,
		TelemetryProfilesTable,
		TenantsTable,
		WorkloadMembersTable,
		WorkloadResourcesTable,
		InstanceResourceCustomConfigTable,
	}
)

func init() {
	EndpointResourcesTable.ForeignKeys[0].RefTable = HostResourcesTable
	HostResourcesTable.ForeignKeys[0].RefTable = SiteResourcesTable
	HostResourcesTable.ForeignKeys[1].RefTable = ProviderResourcesTable
	HostResourcesTable.ForeignKeys[2].RefTable = InstanceResourcesTable
	HostgpuResourcesTable.ForeignKeys[0].RefTable = HostResourcesTable
	HostnicResourcesTable.ForeignKeys[0].RefTable = HostResourcesTable
	HoststorageResourcesTable.ForeignKeys[0].RefTable = HostResourcesTable
	HostusbResourcesTable.ForeignKeys[0].RefTable = HostResourcesTable
	IPAddressResourcesTable.ForeignKeys[0].RefTable = HostnicResourcesTable
	InstanceResourcesTable.ForeignKeys[0].RefTable = OperatingSystemResourcesTable
	InstanceResourcesTable.ForeignKeys[1].RefTable = ProviderResourcesTable
	InstanceResourcesTable.ForeignKeys[2].RefTable = LocalAccountResourcesTable
	InstanceResourcesTable.ForeignKeys[3].RefTable = OsUpdatePolicyResourcesTable
	NetlinkResourcesTable.ForeignKeys[0].RefTable = EndpointResourcesTable
	NetlinkResourcesTable.ForeignKeys[1].RefTable = EndpointResourcesTable
	NetworkSegmentsTable.ForeignKeys[0].RefTable = SiteResourcesTable
	OsUpdatePoliciesTable.ForeignKeys[0].RefTable = OperatingSystemResourcesTable
	OsUpdatePolicyResourcesTable.ForeignKeys[0].RefTable = OperatingSystemResourcesTable
	OsUpdateRunResourcesTable.ForeignKeys[0].RefTable = OsUpdatePolicyResourcesTable
	OsUpdateRunResourcesTable.ForeignKeys[1].RefTable = InstanceResourcesTable
	OuResourcesTable.ForeignKeys[0].RefTable = OuResourcesTable
	RegionResourcesTable.ForeignKeys[0].RefTable = RegionResourcesTable
	RemoteAccessConfigurationsTable.ForeignKeys[0].RefTable = InstanceResourcesTable
	RepeatedScheduleResourcesTable.ForeignKeys[0].RefTable = SiteResourcesTable
	RepeatedScheduleResourcesTable.ForeignKeys[1].RefTable = HostResourcesTable
	RepeatedScheduleResourcesTable.ForeignKeys[2].RefTable = WorkloadResourcesTable
	RepeatedScheduleResourcesTable.ForeignKeys[3].RefTable = RegionResourcesTable
	SingleScheduleResourcesTable.ForeignKeys[0].RefTable = SiteResourcesTable
	SingleScheduleResourcesTable.ForeignKeys[1].RefTable = HostResourcesTable
	SingleScheduleResourcesTable.ForeignKeys[2].RefTable = WorkloadResourcesTable
	SingleScheduleResourcesTable.ForeignKeys[3].RefTable = RegionResourcesTable
	SiteResourcesTable.ForeignKeys[0].RefTable = RegionResourcesTable
	SiteResourcesTable.ForeignKeys[1].RefTable = OuResourcesTable
	SiteResourcesTable.ForeignKeys[2].RefTable = ProviderResourcesTable
	TelemetryProfilesTable.ForeignKeys[0].RefTable = RegionResourcesTable
	TelemetryProfilesTable.ForeignKeys[1].RefTable = SiteResourcesTable
	TelemetryProfilesTable.ForeignKeys[2].RefTable = InstanceResourcesTable
	TelemetryProfilesTable.ForeignKeys[3].RefTable = TelemetryGroupResourcesTable
	WorkloadMembersTable.ForeignKeys[0].RefTable = WorkloadResourcesTable
	WorkloadMembersTable.ForeignKeys[1].RefTable = InstanceResourcesTable
	InstanceResourceCustomConfigTable.ForeignKeys[0].RefTable = InstanceResourcesTable
	InstanceResourceCustomConfigTable.ForeignKeys[1].RefTable = CustomConfigResourcesTable
}
