// Code generated by ent, DO NOT EDIT.

package operatingsystemresource

import (
	"entgo.io/ent/dialect/sql"
	"github.com/open-edge-platform/infra-core/inventory/v2/internal/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldID, id))
}

// ResourceID applies equality check predicate on the "resource_id" field. It's identical to ResourceIDEQ.
func ResourceID(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldResourceID, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldName, v))
}

// Architecture applies equality check predicate on the "architecture" field. It's identical to ArchitectureEQ.
func Architecture(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldArchitecture, v))
}

// KernelCommand applies equality check predicate on the "kernel_command" field. It's identical to KernelCommandEQ.
func KernelCommand(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldKernelCommand, v))
}

// UpdateSources applies equality check predicate on the "update_sources" field. It's identical to UpdateSourcesEQ.
func UpdateSources(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldUpdateSources, v))
}

// ImageURL applies equality check predicate on the "image_url" field. It's identical to ImageURLEQ.
func ImageURL(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldImageURL, v))
}

// ImageID applies equality check predicate on the "image_id" field. It's identical to ImageIDEQ.
func ImageID(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldImageID, v))
}

// Sha256 applies equality check predicate on the "sha256" field. It's identical to Sha256EQ.
func Sha256(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldSha256, v))
}

// ProfileName applies equality check predicate on the "profile_name" field. It's identical to ProfileNameEQ.
func ProfileName(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldProfileName, v))
}

// ProfileVersion applies equality check predicate on the "profile_version" field. It's identical to ProfileVersionEQ.
func ProfileVersion(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldProfileVersion, v))
}

// InstalledPackages applies equality check predicate on the "installed_packages" field. It's identical to InstalledPackagesEQ.
func InstalledPackages(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldInstalledPackages, v))
}

// PlatformBundle applies equality check predicate on the "platform_bundle" field. It's identical to PlatformBundleEQ.
func PlatformBundle(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldPlatformBundle, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldDescription, v))
}

// Metadata applies equality check predicate on the "metadata" field. It's identical to MetadataEQ.
func Metadata(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldMetadata, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldTenantID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldUpdatedAt, v))
}

// ResourceIDEQ applies the EQ predicate on the "resource_id" field.
func ResourceIDEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldResourceID, v))
}

// ResourceIDNEQ applies the NEQ predicate on the "resource_id" field.
func ResourceIDNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldResourceID, v))
}

// ResourceIDIn applies the In predicate on the "resource_id" field.
func ResourceIDIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldResourceID, vs...))
}

// ResourceIDNotIn applies the NotIn predicate on the "resource_id" field.
func ResourceIDNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldResourceID, vs...))
}

// ResourceIDGT applies the GT predicate on the "resource_id" field.
func ResourceIDGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldResourceID, v))
}

// ResourceIDGTE applies the GTE predicate on the "resource_id" field.
func ResourceIDGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldResourceID, v))
}

// ResourceIDLT applies the LT predicate on the "resource_id" field.
func ResourceIDLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldResourceID, v))
}

// ResourceIDLTE applies the LTE predicate on the "resource_id" field.
func ResourceIDLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldResourceID, v))
}

// ResourceIDContains applies the Contains predicate on the "resource_id" field.
func ResourceIDContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldResourceID, v))
}

// ResourceIDHasPrefix applies the HasPrefix predicate on the "resource_id" field.
func ResourceIDHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldResourceID, v))
}

// ResourceIDHasSuffix applies the HasSuffix predicate on the "resource_id" field.
func ResourceIDHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldResourceID, v))
}

// ResourceIDEqualFold applies the EqualFold predicate on the "resource_id" field.
func ResourceIDEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldResourceID, v))
}

// ResourceIDContainsFold applies the ContainsFold predicate on the "resource_id" field.
func ResourceIDContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldResourceID, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldName, v))
}

// NameIsNil applies the IsNil predicate on the "name" field.
func NameIsNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIsNull(FieldName))
}

// NameNotNil applies the NotNil predicate on the "name" field.
func NameNotNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotNull(FieldName))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldName, v))
}

// ArchitectureEQ applies the EQ predicate on the "architecture" field.
func ArchitectureEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldArchitecture, v))
}

// ArchitectureNEQ applies the NEQ predicate on the "architecture" field.
func ArchitectureNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldArchitecture, v))
}

// ArchitectureIn applies the In predicate on the "architecture" field.
func ArchitectureIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldArchitecture, vs...))
}

// ArchitectureNotIn applies the NotIn predicate on the "architecture" field.
func ArchitectureNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldArchitecture, vs...))
}

// ArchitectureGT applies the GT predicate on the "architecture" field.
func ArchitectureGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldArchitecture, v))
}

// ArchitectureGTE applies the GTE predicate on the "architecture" field.
func ArchitectureGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldArchitecture, v))
}

// ArchitectureLT applies the LT predicate on the "architecture" field.
func ArchitectureLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldArchitecture, v))
}

// ArchitectureLTE applies the LTE predicate on the "architecture" field.
func ArchitectureLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldArchitecture, v))
}

// ArchitectureContains applies the Contains predicate on the "architecture" field.
func ArchitectureContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldArchitecture, v))
}

// ArchitectureHasPrefix applies the HasPrefix predicate on the "architecture" field.
func ArchitectureHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldArchitecture, v))
}

// ArchitectureHasSuffix applies the HasSuffix predicate on the "architecture" field.
func ArchitectureHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldArchitecture, v))
}

// ArchitectureIsNil applies the IsNil predicate on the "architecture" field.
func ArchitectureIsNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIsNull(FieldArchitecture))
}

// ArchitectureNotNil applies the NotNil predicate on the "architecture" field.
func ArchitectureNotNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotNull(FieldArchitecture))
}

// ArchitectureEqualFold applies the EqualFold predicate on the "architecture" field.
func ArchitectureEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldArchitecture, v))
}

// ArchitectureContainsFold applies the ContainsFold predicate on the "architecture" field.
func ArchitectureContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldArchitecture, v))
}

// KernelCommandEQ applies the EQ predicate on the "kernel_command" field.
func KernelCommandEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldKernelCommand, v))
}

// KernelCommandNEQ applies the NEQ predicate on the "kernel_command" field.
func KernelCommandNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldKernelCommand, v))
}

// KernelCommandIn applies the In predicate on the "kernel_command" field.
func KernelCommandIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldKernelCommand, vs...))
}

// KernelCommandNotIn applies the NotIn predicate on the "kernel_command" field.
func KernelCommandNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldKernelCommand, vs...))
}

// KernelCommandGT applies the GT predicate on the "kernel_command" field.
func KernelCommandGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldKernelCommand, v))
}

// KernelCommandGTE applies the GTE predicate on the "kernel_command" field.
func KernelCommandGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldKernelCommand, v))
}

// KernelCommandLT applies the LT predicate on the "kernel_command" field.
func KernelCommandLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldKernelCommand, v))
}

// KernelCommandLTE applies the LTE predicate on the "kernel_command" field.
func KernelCommandLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldKernelCommand, v))
}

// KernelCommandContains applies the Contains predicate on the "kernel_command" field.
func KernelCommandContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldKernelCommand, v))
}

// KernelCommandHasPrefix applies the HasPrefix predicate on the "kernel_command" field.
func KernelCommandHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldKernelCommand, v))
}

// KernelCommandHasSuffix applies the HasSuffix predicate on the "kernel_command" field.
func KernelCommandHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldKernelCommand, v))
}

// KernelCommandIsNil applies the IsNil predicate on the "kernel_command" field.
func KernelCommandIsNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIsNull(FieldKernelCommand))
}

// KernelCommandNotNil applies the NotNil predicate on the "kernel_command" field.
func KernelCommandNotNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotNull(FieldKernelCommand))
}

// KernelCommandEqualFold applies the EqualFold predicate on the "kernel_command" field.
func KernelCommandEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldKernelCommand, v))
}

// KernelCommandContainsFold applies the ContainsFold predicate on the "kernel_command" field.
func KernelCommandContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldKernelCommand, v))
}

// UpdateSourcesEQ applies the EQ predicate on the "update_sources" field.
func UpdateSourcesEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldUpdateSources, v))
}

// UpdateSourcesNEQ applies the NEQ predicate on the "update_sources" field.
func UpdateSourcesNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldUpdateSources, v))
}

// UpdateSourcesIn applies the In predicate on the "update_sources" field.
func UpdateSourcesIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldUpdateSources, vs...))
}

// UpdateSourcesNotIn applies the NotIn predicate on the "update_sources" field.
func UpdateSourcesNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldUpdateSources, vs...))
}

// UpdateSourcesGT applies the GT predicate on the "update_sources" field.
func UpdateSourcesGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldUpdateSources, v))
}

// UpdateSourcesGTE applies the GTE predicate on the "update_sources" field.
func UpdateSourcesGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldUpdateSources, v))
}

// UpdateSourcesLT applies the LT predicate on the "update_sources" field.
func UpdateSourcesLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldUpdateSources, v))
}

// UpdateSourcesLTE applies the LTE predicate on the "update_sources" field.
func UpdateSourcesLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldUpdateSources, v))
}

// UpdateSourcesContains applies the Contains predicate on the "update_sources" field.
func UpdateSourcesContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldUpdateSources, v))
}

// UpdateSourcesHasPrefix applies the HasPrefix predicate on the "update_sources" field.
func UpdateSourcesHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldUpdateSources, v))
}

// UpdateSourcesHasSuffix applies the HasSuffix predicate on the "update_sources" field.
func UpdateSourcesHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldUpdateSources, v))
}

// UpdateSourcesIsNil applies the IsNil predicate on the "update_sources" field.
func UpdateSourcesIsNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIsNull(FieldUpdateSources))
}

// UpdateSourcesNotNil applies the NotNil predicate on the "update_sources" field.
func UpdateSourcesNotNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotNull(FieldUpdateSources))
}

// UpdateSourcesEqualFold applies the EqualFold predicate on the "update_sources" field.
func UpdateSourcesEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldUpdateSources, v))
}

// UpdateSourcesContainsFold applies the ContainsFold predicate on the "update_sources" field.
func UpdateSourcesContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldUpdateSources, v))
}

// ImageURLEQ applies the EQ predicate on the "image_url" field.
func ImageURLEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldImageURL, v))
}

// ImageURLNEQ applies the NEQ predicate on the "image_url" field.
func ImageURLNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldImageURL, v))
}

// ImageURLIn applies the In predicate on the "image_url" field.
func ImageURLIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldImageURL, vs...))
}

// ImageURLNotIn applies the NotIn predicate on the "image_url" field.
func ImageURLNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldImageURL, vs...))
}

// ImageURLGT applies the GT predicate on the "image_url" field.
func ImageURLGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldImageURL, v))
}

// ImageURLGTE applies the GTE predicate on the "image_url" field.
func ImageURLGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldImageURL, v))
}

// ImageURLLT applies the LT predicate on the "image_url" field.
func ImageURLLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldImageURL, v))
}

// ImageURLLTE applies the LTE predicate on the "image_url" field.
func ImageURLLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldImageURL, v))
}

// ImageURLContains applies the Contains predicate on the "image_url" field.
func ImageURLContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldImageURL, v))
}

// ImageURLHasPrefix applies the HasPrefix predicate on the "image_url" field.
func ImageURLHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldImageURL, v))
}

// ImageURLHasSuffix applies the HasSuffix predicate on the "image_url" field.
func ImageURLHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldImageURL, v))
}

// ImageURLIsNil applies the IsNil predicate on the "image_url" field.
func ImageURLIsNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIsNull(FieldImageURL))
}

// ImageURLNotNil applies the NotNil predicate on the "image_url" field.
func ImageURLNotNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotNull(FieldImageURL))
}

// ImageURLEqualFold applies the EqualFold predicate on the "image_url" field.
func ImageURLEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldImageURL, v))
}

// ImageURLContainsFold applies the ContainsFold predicate on the "image_url" field.
func ImageURLContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldImageURL, v))
}

// ImageIDEQ applies the EQ predicate on the "image_id" field.
func ImageIDEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldImageID, v))
}

// ImageIDNEQ applies the NEQ predicate on the "image_id" field.
func ImageIDNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldImageID, v))
}

// ImageIDIn applies the In predicate on the "image_id" field.
func ImageIDIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldImageID, vs...))
}

// ImageIDNotIn applies the NotIn predicate on the "image_id" field.
func ImageIDNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldImageID, vs...))
}

// ImageIDGT applies the GT predicate on the "image_id" field.
func ImageIDGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldImageID, v))
}

// ImageIDGTE applies the GTE predicate on the "image_id" field.
func ImageIDGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldImageID, v))
}

// ImageIDLT applies the LT predicate on the "image_id" field.
func ImageIDLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldImageID, v))
}

// ImageIDLTE applies the LTE predicate on the "image_id" field.
func ImageIDLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldImageID, v))
}

// ImageIDContains applies the Contains predicate on the "image_id" field.
func ImageIDContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldImageID, v))
}

// ImageIDHasPrefix applies the HasPrefix predicate on the "image_id" field.
func ImageIDHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldImageID, v))
}

// ImageIDHasSuffix applies the HasSuffix predicate on the "image_id" field.
func ImageIDHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldImageID, v))
}

// ImageIDIsNil applies the IsNil predicate on the "image_id" field.
func ImageIDIsNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIsNull(FieldImageID))
}

// ImageIDNotNil applies the NotNil predicate on the "image_id" field.
func ImageIDNotNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotNull(FieldImageID))
}

// ImageIDEqualFold applies the EqualFold predicate on the "image_id" field.
func ImageIDEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldImageID, v))
}

// ImageIDContainsFold applies the ContainsFold predicate on the "image_id" field.
func ImageIDContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldImageID, v))
}

// Sha256EQ applies the EQ predicate on the "sha256" field.
func Sha256EQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldSha256, v))
}

// Sha256NEQ applies the NEQ predicate on the "sha256" field.
func Sha256NEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldSha256, v))
}

// Sha256In applies the In predicate on the "sha256" field.
func Sha256In(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldSha256, vs...))
}

// Sha256NotIn applies the NotIn predicate on the "sha256" field.
func Sha256NotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldSha256, vs...))
}

// Sha256GT applies the GT predicate on the "sha256" field.
func Sha256GT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldSha256, v))
}

// Sha256GTE applies the GTE predicate on the "sha256" field.
func Sha256GTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldSha256, v))
}

// Sha256LT applies the LT predicate on the "sha256" field.
func Sha256LT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldSha256, v))
}

// Sha256LTE applies the LTE predicate on the "sha256" field.
func Sha256LTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldSha256, v))
}

// Sha256Contains applies the Contains predicate on the "sha256" field.
func Sha256Contains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldSha256, v))
}

// Sha256HasPrefix applies the HasPrefix predicate on the "sha256" field.
func Sha256HasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldSha256, v))
}

// Sha256HasSuffix applies the HasSuffix predicate on the "sha256" field.
func Sha256HasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldSha256, v))
}

// Sha256IsNil applies the IsNil predicate on the "sha256" field.
func Sha256IsNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIsNull(FieldSha256))
}

// Sha256NotNil applies the NotNil predicate on the "sha256" field.
func Sha256NotNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotNull(FieldSha256))
}

// Sha256EqualFold applies the EqualFold predicate on the "sha256" field.
func Sha256EqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldSha256, v))
}

// Sha256ContainsFold applies the ContainsFold predicate on the "sha256" field.
func Sha256ContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldSha256, v))
}

// ProfileNameEQ applies the EQ predicate on the "profile_name" field.
func ProfileNameEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldProfileName, v))
}

// ProfileNameNEQ applies the NEQ predicate on the "profile_name" field.
func ProfileNameNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldProfileName, v))
}

// ProfileNameIn applies the In predicate on the "profile_name" field.
func ProfileNameIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldProfileName, vs...))
}

// ProfileNameNotIn applies the NotIn predicate on the "profile_name" field.
func ProfileNameNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldProfileName, vs...))
}

// ProfileNameGT applies the GT predicate on the "profile_name" field.
func ProfileNameGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldProfileName, v))
}

// ProfileNameGTE applies the GTE predicate on the "profile_name" field.
func ProfileNameGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldProfileName, v))
}

// ProfileNameLT applies the LT predicate on the "profile_name" field.
func ProfileNameLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldProfileName, v))
}

// ProfileNameLTE applies the LTE predicate on the "profile_name" field.
func ProfileNameLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldProfileName, v))
}

// ProfileNameContains applies the Contains predicate on the "profile_name" field.
func ProfileNameContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldProfileName, v))
}

// ProfileNameHasPrefix applies the HasPrefix predicate on the "profile_name" field.
func ProfileNameHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldProfileName, v))
}

// ProfileNameHasSuffix applies the HasSuffix predicate on the "profile_name" field.
func ProfileNameHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldProfileName, v))
}

// ProfileNameIsNil applies the IsNil predicate on the "profile_name" field.
func ProfileNameIsNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIsNull(FieldProfileName))
}

// ProfileNameNotNil applies the NotNil predicate on the "profile_name" field.
func ProfileNameNotNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotNull(FieldProfileName))
}

// ProfileNameEqualFold applies the EqualFold predicate on the "profile_name" field.
func ProfileNameEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldProfileName, v))
}

// ProfileNameContainsFold applies the ContainsFold predicate on the "profile_name" field.
func ProfileNameContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldProfileName, v))
}

// ProfileVersionEQ applies the EQ predicate on the "profile_version" field.
func ProfileVersionEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldProfileVersion, v))
}

// ProfileVersionNEQ applies the NEQ predicate on the "profile_version" field.
func ProfileVersionNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldProfileVersion, v))
}

// ProfileVersionIn applies the In predicate on the "profile_version" field.
func ProfileVersionIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldProfileVersion, vs...))
}

// ProfileVersionNotIn applies the NotIn predicate on the "profile_version" field.
func ProfileVersionNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldProfileVersion, vs...))
}

// ProfileVersionGT applies the GT predicate on the "profile_version" field.
func ProfileVersionGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldProfileVersion, v))
}

// ProfileVersionGTE applies the GTE predicate on the "profile_version" field.
func ProfileVersionGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldProfileVersion, v))
}

// ProfileVersionLT applies the LT predicate on the "profile_version" field.
func ProfileVersionLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldProfileVersion, v))
}

// ProfileVersionLTE applies the LTE predicate on the "profile_version" field.
func ProfileVersionLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldProfileVersion, v))
}

// ProfileVersionContains applies the Contains predicate on the "profile_version" field.
func ProfileVersionContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldProfileVersion, v))
}

// ProfileVersionHasPrefix applies the HasPrefix predicate on the "profile_version" field.
func ProfileVersionHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldProfileVersion, v))
}

// ProfileVersionHasSuffix applies the HasSuffix predicate on the "profile_version" field.
func ProfileVersionHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldProfileVersion, v))
}

// ProfileVersionIsNil applies the IsNil predicate on the "profile_version" field.
func ProfileVersionIsNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIsNull(FieldProfileVersion))
}

// ProfileVersionNotNil applies the NotNil predicate on the "profile_version" field.
func ProfileVersionNotNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotNull(FieldProfileVersion))
}

// ProfileVersionEqualFold applies the EqualFold predicate on the "profile_version" field.
func ProfileVersionEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldProfileVersion, v))
}

// ProfileVersionContainsFold applies the ContainsFold predicate on the "profile_version" field.
func ProfileVersionContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldProfileVersion, v))
}

// InstalledPackagesEQ applies the EQ predicate on the "installed_packages" field.
func InstalledPackagesEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldInstalledPackages, v))
}

// InstalledPackagesNEQ applies the NEQ predicate on the "installed_packages" field.
func InstalledPackagesNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldInstalledPackages, v))
}

// InstalledPackagesIn applies the In predicate on the "installed_packages" field.
func InstalledPackagesIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldInstalledPackages, vs...))
}

// InstalledPackagesNotIn applies the NotIn predicate on the "installed_packages" field.
func InstalledPackagesNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldInstalledPackages, vs...))
}

// InstalledPackagesGT applies the GT predicate on the "installed_packages" field.
func InstalledPackagesGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldInstalledPackages, v))
}

// InstalledPackagesGTE applies the GTE predicate on the "installed_packages" field.
func InstalledPackagesGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldInstalledPackages, v))
}

// InstalledPackagesLT applies the LT predicate on the "installed_packages" field.
func InstalledPackagesLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldInstalledPackages, v))
}

// InstalledPackagesLTE applies the LTE predicate on the "installed_packages" field.
func InstalledPackagesLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldInstalledPackages, v))
}

// InstalledPackagesContains applies the Contains predicate on the "installed_packages" field.
func InstalledPackagesContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldInstalledPackages, v))
}

// InstalledPackagesHasPrefix applies the HasPrefix predicate on the "installed_packages" field.
func InstalledPackagesHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldInstalledPackages, v))
}

// InstalledPackagesHasSuffix applies the HasSuffix predicate on the "installed_packages" field.
func InstalledPackagesHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldInstalledPackages, v))
}

// InstalledPackagesIsNil applies the IsNil predicate on the "installed_packages" field.
func InstalledPackagesIsNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIsNull(FieldInstalledPackages))
}

// InstalledPackagesNotNil applies the NotNil predicate on the "installed_packages" field.
func InstalledPackagesNotNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotNull(FieldInstalledPackages))
}

// InstalledPackagesEqualFold applies the EqualFold predicate on the "installed_packages" field.
func InstalledPackagesEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldInstalledPackages, v))
}

// InstalledPackagesContainsFold applies the ContainsFold predicate on the "installed_packages" field.
func InstalledPackagesContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldInstalledPackages, v))
}

// SecurityFeatureEQ applies the EQ predicate on the "security_feature" field.
func SecurityFeatureEQ(v SecurityFeature) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldSecurityFeature, v))
}

// SecurityFeatureNEQ applies the NEQ predicate on the "security_feature" field.
func SecurityFeatureNEQ(v SecurityFeature) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldSecurityFeature, v))
}

// SecurityFeatureIn applies the In predicate on the "security_feature" field.
func SecurityFeatureIn(vs ...SecurityFeature) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldSecurityFeature, vs...))
}

// SecurityFeatureNotIn applies the NotIn predicate on the "security_feature" field.
func SecurityFeatureNotIn(vs ...SecurityFeature) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldSecurityFeature, vs...))
}

// SecurityFeatureIsNil applies the IsNil predicate on the "security_feature" field.
func SecurityFeatureIsNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIsNull(FieldSecurityFeature))
}

// SecurityFeatureNotNil applies the NotNil predicate on the "security_feature" field.
func SecurityFeatureNotNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotNull(FieldSecurityFeature))
}

// OsTypeEQ applies the EQ predicate on the "os_type" field.
func OsTypeEQ(v OsType) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldOsType, v))
}

// OsTypeNEQ applies the NEQ predicate on the "os_type" field.
func OsTypeNEQ(v OsType) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldOsType, v))
}

// OsTypeIn applies the In predicate on the "os_type" field.
func OsTypeIn(vs ...OsType) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldOsType, vs...))
}

// OsTypeNotIn applies the NotIn predicate on the "os_type" field.
func OsTypeNotIn(vs ...OsType) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldOsType, vs...))
}

// OsTypeIsNil applies the IsNil predicate on the "os_type" field.
func OsTypeIsNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIsNull(FieldOsType))
}

// OsTypeNotNil applies the NotNil predicate on the "os_type" field.
func OsTypeNotNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotNull(FieldOsType))
}

// OsProviderEQ applies the EQ predicate on the "os_provider" field.
func OsProviderEQ(v OsProvider) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldOsProvider, v))
}

// OsProviderNEQ applies the NEQ predicate on the "os_provider" field.
func OsProviderNEQ(v OsProvider) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldOsProvider, v))
}

// OsProviderIn applies the In predicate on the "os_provider" field.
func OsProviderIn(vs ...OsProvider) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldOsProvider, vs...))
}

// OsProviderNotIn applies the NotIn predicate on the "os_provider" field.
func OsProviderNotIn(vs ...OsProvider) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldOsProvider, vs...))
}

// PlatformBundleEQ applies the EQ predicate on the "platform_bundle" field.
func PlatformBundleEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldPlatformBundle, v))
}

// PlatformBundleNEQ applies the NEQ predicate on the "platform_bundle" field.
func PlatformBundleNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldPlatformBundle, v))
}

// PlatformBundleIn applies the In predicate on the "platform_bundle" field.
func PlatformBundleIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldPlatformBundle, vs...))
}

// PlatformBundleNotIn applies the NotIn predicate on the "platform_bundle" field.
func PlatformBundleNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldPlatformBundle, vs...))
}

// PlatformBundleGT applies the GT predicate on the "platform_bundle" field.
func PlatformBundleGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldPlatformBundle, v))
}

// PlatformBundleGTE applies the GTE predicate on the "platform_bundle" field.
func PlatformBundleGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldPlatformBundle, v))
}

// PlatformBundleLT applies the LT predicate on the "platform_bundle" field.
func PlatformBundleLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldPlatformBundle, v))
}

// PlatformBundleLTE applies the LTE predicate on the "platform_bundle" field.
func PlatformBundleLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldPlatformBundle, v))
}

// PlatformBundleContains applies the Contains predicate on the "platform_bundle" field.
func PlatformBundleContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldPlatformBundle, v))
}

// PlatformBundleHasPrefix applies the HasPrefix predicate on the "platform_bundle" field.
func PlatformBundleHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldPlatformBundle, v))
}

// PlatformBundleHasSuffix applies the HasSuffix predicate on the "platform_bundle" field.
func PlatformBundleHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldPlatformBundle, v))
}

// PlatformBundleIsNil applies the IsNil predicate on the "platform_bundle" field.
func PlatformBundleIsNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIsNull(FieldPlatformBundle))
}

// PlatformBundleNotNil applies the NotNil predicate on the "platform_bundle" field.
func PlatformBundleNotNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotNull(FieldPlatformBundle))
}

// PlatformBundleEqualFold applies the EqualFold predicate on the "platform_bundle" field.
func PlatformBundleEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldPlatformBundle, v))
}

// PlatformBundleContainsFold applies the ContainsFold predicate on the "platform_bundle" field.
func PlatformBundleContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldPlatformBundle, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldDescription, v))
}

// MetadataEQ applies the EQ predicate on the "metadata" field.
func MetadataEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldMetadata, v))
}

// MetadataNEQ applies the NEQ predicate on the "metadata" field.
func MetadataNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldMetadata, v))
}

// MetadataIn applies the In predicate on the "metadata" field.
func MetadataIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldMetadata, vs...))
}

// MetadataNotIn applies the NotIn predicate on the "metadata" field.
func MetadataNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldMetadata, vs...))
}

// MetadataGT applies the GT predicate on the "metadata" field.
func MetadataGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldMetadata, v))
}

// MetadataGTE applies the GTE predicate on the "metadata" field.
func MetadataGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldMetadata, v))
}

// MetadataLT applies the LT predicate on the "metadata" field.
func MetadataLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldMetadata, v))
}

// MetadataLTE applies the LTE predicate on the "metadata" field.
func MetadataLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldMetadata, v))
}

// MetadataContains applies the Contains predicate on the "metadata" field.
func MetadataContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldMetadata, v))
}

// MetadataHasPrefix applies the HasPrefix predicate on the "metadata" field.
func MetadataHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldMetadata, v))
}

// MetadataHasSuffix applies the HasSuffix predicate on the "metadata" field.
func MetadataHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldMetadata, v))
}

// MetadataIsNil applies the IsNil predicate on the "metadata" field.
func MetadataIsNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIsNull(FieldMetadata))
}

// MetadataNotNil applies the NotNil predicate on the "metadata" field.
func MetadataNotNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotNull(FieldMetadata))
}

// MetadataEqualFold applies the EqualFold predicate on the "metadata" field.
func MetadataEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldMetadata, v))
}

// MetadataContainsFold applies the ContainsFold predicate on the "metadata" field.
func MetadataContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldMetadata, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldTenantID, v))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldTenantID, v))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldTenantID, v))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldTenantID, v))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldTenantID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtContains applies the Contains predicate on the "created_at" field.
func CreatedAtContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldCreatedAt, v))
}

// CreatedAtHasPrefix applies the HasPrefix predicate on the "created_at" field.
func CreatedAtHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldCreatedAt, v))
}

// CreatedAtHasSuffix applies the HasSuffix predicate on the "created_at" field.
func CreatedAtHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldCreatedAt, v))
}

// CreatedAtEqualFold applies the EqualFold predicate on the "created_at" field.
func CreatedAtEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldCreatedAt, v))
}

// CreatedAtContainsFold applies the ContainsFold predicate on the "created_at" field.
func CreatedAtContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtContains applies the Contains predicate on the "updated_at" field.
func UpdatedAtContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldUpdatedAt, v))
}

// UpdatedAtHasPrefix applies the HasPrefix predicate on the "updated_at" field.
func UpdatedAtHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldUpdatedAt, v))
}

// UpdatedAtHasSuffix applies the HasSuffix predicate on the "updated_at" field.
func UpdatedAtHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldUpdatedAt, v))
}

// UpdatedAtEqualFold applies the EqualFold predicate on the "updated_at" field.
func UpdatedAtEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldUpdatedAt, v))
}

// UpdatedAtContainsFold applies the ContainsFold predicate on the "updated_at" field.
func UpdatedAtContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.OperatingSystemResource) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.OperatingSystemResource) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.OperatingSystemResource) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.NotPredicates(p))
}
