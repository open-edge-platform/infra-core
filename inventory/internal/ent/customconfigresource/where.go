// Code generated by ent, DO NOT EDIT.

package customconfigresource

import (
	"entgo.io/ent/dialect/sql"
	"github.com/open-edge-platform/infra-core/inventory/v2/internal/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLTE(FieldID, id))
}

// ResourceID applies equality check predicate on the "resource_id" field. It's identical to ResourceIDEQ.
func ResourceID(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldResourceID, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldName, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldDescription, v))
}

// ConfigData applies equality check predicate on the "config_data" field. It's identical to ConfigDataEQ.
func ConfigData(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldConfigData, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldTenantID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldUpdatedAt, v))
}

// ResourceIDEQ applies the EQ predicate on the "resource_id" field.
func ResourceIDEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldResourceID, v))
}

// ResourceIDNEQ applies the NEQ predicate on the "resource_id" field.
func ResourceIDNEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNEQ(FieldResourceID, v))
}

// ResourceIDIn applies the In predicate on the "resource_id" field.
func ResourceIDIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldIn(FieldResourceID, vs...))
}

// ResourceIDNotIn applies the NotIn predicate on the "resource_id" field.
func ResourceIDNotIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNotIn(FieldResourceID, vs...))
}

// ResourceIDGT applies the GT predicate on the "resource_id" field.
func ResourceIDGT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGT(FieldResourceID, v))
}

// ResourceIDGTE applies the GTE predicate on the "resource_id" field.
func ResourceIDGTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGTE(FieldResourceID, v))
}

// ResourceIDLT applies the LT predicate on the "resource_id" field.
func ResourceIDLT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLT(FieldResourceID, v))
}

// ResourceIDLTE applies the LTE predicate on the "resource_id" field.
func ResourceIDLTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLTE(FieldResourceID, v))
}

// ResourceIDContains applies the Contains predicate on the "resource_id" field.
func ResourceIDContains(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContains(FieldResourceID, v))
}

// ResourceIDHasPrefix applies the HasPrefix predicate on the "resource_id" field.
func ResourceIDHasPrefix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasPrefix(FieldResourceID, v))
}

// ResourceIDHasSuffix applies the HasSuffix predicate on the "resource_id" field.
func ResourceIDHasSuffix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasSuffix(FieldResourceID, v))
}

// ResourceIDEqualFold applies the EqualFold predicate on the "resource_id" field.
func ResourceIDEqualFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEqualFold(FieldResourceID, v))
}

// ResourceIDContainsFold applies the ContainsFold predicate on the "resource_id" field.
func ResourceIDContainsFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContainsFold(FieldResourceID, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContainsFold(FieldName, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContainsFold(FieldDescription, v))
}

// ConfigDataEQ applies the EQ predicate on the "config_data" field.
func ConfigDataEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldConfigData, v))
}

// ConfigDataNEQ applies the NEQ predicate on the "config_data" field.
func ConfigDataNEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNEQ(FieldConfigData, v))
}

// ConfigDataIn applies the In predicate on the "config_data" field.
func ConfigDataIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldIn(FieldConfigData, vs...))
}

// ConfigDataNotIn applies the NotIn predicate on the "config_data" field.
func ConfigDataNotIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNotIn(FieldConfigData, vs...))
}

// ConfigDataGT applies the GT predicate on the "config_data" field.
func ConfigDataGT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGT(FieldConfigData, v))
}

// ConfigDataGTE applies the GTE predicate on the "config_data" field.
func ConfigDataGTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGTE(FieldConfigData, v))
}

// ConfigDataLT applies the LT predicate on the "config_data" field.
func ConfigDataLT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLT(FieldConfigData, v))
}

// ConfigDataLTE applies the LTE predicate on the "config_data" field.
func ConfigDataLTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLTE(FieldConfigData, v))
}

// ConfigDataContains applies the Contains predicate on the "config_data" field.
func ConfigDataContains(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContains(FieldConfigData, v))
}

// ConfigDataHasPrefix applies the HasPrefix predicate on the "config_data" field.
func ConfigDataHasPrefix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasPrefix(FieldConfigData, v))
}

// ConfigDataHasSuffix applies the HasSuffix predicate on the "config_data" field.
func ConfigDataHasSuffix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasSuffix(FieldConfigData, v))
}

// ConfigDataEqualFold applies the EqualFold predicate on the "config_data" field.
func ConfigDataEqualFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEqualFold(FieldConfigData, v))
}

// ConfigDataContainsFold applies the ContainsFold predicate on the "config_data" field.
func ConfigDataContainsFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContainsFold(FieldConfigData, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContains(FieldTenantID, v))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasPrefix(FieldTenantID, v))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasSuffix(FieldTenantID, v))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEqualFold(FieldTenantID, v))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContainsFold(FieldTenantID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtContains applies the Contains predicate on the "created_at" field.
func CreatedAtContains(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContains(FieldCreatedAt, v))
}

// CreatedAtHasPrefix applies the HasPrefix predicate on the "created_at" field.
func CreatedAtHasPrefix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasPrefix(FieldCreatedAt, v))
}

// CreatedAtHasSuffix applies the HasSuffix predicate on the "created_at" field.
func CreatedAtHasSuffix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasSuffix(FieldCreatedAt, v))
}

// CreatedAtEqualFold applies the EqualFold predicate on the "created_at" field.
func CreatedAtEqualFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEqualFold(FieldCreatedAt, v))
}

// CreatedAtContainsFold applies the ContainsFold predicate on the "created_at" field.
func CreatedAtContainsFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContainsFold(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtContains applies the Contains predicate on the "updated_at" field.
func UpdatedAtContains(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContains(FieldUpdatedAt, v))
}

// UpdatedAtHasPrefix applies the HasPrefix predicate on the "updated_at" field.
func UpdatedAtHasPrefix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasPrefix(FieldUpdatedAt, v))
}

// UpdatedAtHasSuffix applies the HasSuffix predicate on the "updated_at" field.
func UpdatedAtHasSuffix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasSuffix(FieldUpdatedAt, v))
}

// UpdatedAtEqualFold applies the EqualFold predicate on the "updated_at" field.
func UpdatedAtEqualFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEqualFold(FieldUpdatedAt, v))
}

// UpdatedAtContainsFold applies the ContainsFold predicate on the "updated_at" field.
func UpdatedAtContainsFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContainsFold(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.CustomConfigResource) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.CustomConfigResource) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.CustomConfigResource) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.NotPredicates(p))
}
