// Code generated by ent, DO NOT EDIT.

package customconfigresource

import (
	"entgo.io/ent/dialect/sql"
	"github.com/open-edge-platform/infra-core/inventory/v2/internal/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLTE(FieldID, id))
}

// ResourceID applies equality check predicate on the "resource_id" field. It's identical to ResourceIDEQ.
func ResourceID(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldResourceID, v))
}

// ConfigName applies equality check predicate on the "config_name" field. It's identical to ConfigNameEQ.
func ConfigName(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldConfigName, v))
}

// ConfigDescription applies equality check predicate on the "config_description" field. It's identical to ConfigDescriptionEQ.
func ConfigDescription(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldConfigDescription, v))
}

// ConfigData applies equality check predicate on the "config_data" field. It's identical to ConfigDataEQ.
func ConfigData(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldConfigData, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldTenantID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldUpdatedAt, v))
}

// ResourceIDEQ applies the EQ predicate on the "resource_id" field.
func ResourceIDEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldResourceID, v))
}

// ResourceIDNEQ applies the NEQ predicate on the "resource_id" field.
func ResourceIDNEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNEQ(FieldResourceID, v))
}

// ResourceIDIn applies the In predicate on the "resource_id" field.
func ResourceIDIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldIn(FieldResourceID, vs...))
}

// ResourceIDNotIn applies the NotIn predicate on the "resource_id" field.
func ResourceIDNotIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNotIn(FieldResourceID, vs...))
}

// ResourceIDGT applies the GT predicate on the "resource_id" field.
func ResourceIDGT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGT(FieldResourceID, v))
}

// ResourceIDGTE applies the GTE predicate on the "resource_id" field.
func ResourceIDGTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGTE(FieldResourceID, v))
}

// ResourceIDLT applies the LT predicate on the "resource_id" field.
func ResourceIDLT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLT(FieldResourceID, v))
}

// ResourceIDLTE applies the LTE predicate on the "resource_id" field.
func ResourceIDLTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLTE(FieldResourceID, v))
}

// ResourceIDContains applies the Contains predicate on the "resource_id" field.
func ResourceIDContains(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContains(FieldResourceID, v))
}

// ResourceIDHasPrefix applies the HasPrefix predicate on the "resource_id" field.
func ResourceIDHasPrefix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasPrefix(FieldResourceID, v))
}

// ResourceIDHasSuffix applies the HasSuffix predicate on the "resource_id" field.
func ResourceIDHasSuffix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasSuffix(FieldResourceID, v))
}

// ResourceIDEqualFold applies the EqualFold predicate on the "resource_id" field.
func ResourceIDEqualFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEqualFold(FieldResourceID, v))
}

// ResourceIDContainsFold applies the ContainsFold predicate on the "resource_id" field.
func ResourceIDContainsFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContainsFold(FieldResourceID, v))
}

// ConfigNameEQ applies the EQ predicate on the "config_name" field.
func ConfigNameEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldConfigName, v))
}

// ConfigNameNEQ applies the NEQ predicate on the "config_name" field.
func ConfigNameNEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNEQ(FieldConfigName, v))
}

// ConfigNameIn applies the In predicate on the "config_name" field.
func ConfigNameIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldIn(FieldConfigName, vs...))
}

// ConfigNameNotIn applies the NotIn predicate on the "config_name" field.
func ConfigNameNotIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNotIn(FieldConfigName, vs...))
}

// ConfigNameGT applies the GT predicate on the "config_name" field.
func ConfigNameGT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGT(FieldConfigName, v))
}

// ConfigNameGTE applies the GTE predicate on the "config_name" field.
func ConfigNameGTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGTE(FieldConfigName, v))
}

// ConfigNameLT applies the LT predicate on the "config_name" field.
func ConfigNameLT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLT(FieldConfigName, v))
}

// ConfigNameLTE applies the LTE predicate on the "config_name" field.
func ConfigNameLTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLTE(FieldConfigName, v))
}

// ConfigNameContains applies the Contains predicate on the "config_name" field.
func ConfigNameContains(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContains(FieldConfigName, v))
}

// ConfigNameHasPrefix applies the HasPrefix predicate on the "config_name" field.
func ConfigNameHasPrefix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasPrefix(FieldConfigName, v))
}

// ConfigNameHasSuffix applies the HasSuffix predicate on the "config_name" field.
func ConfigNameHasSuffix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasSuffix(FieldConfigName, v))
}

// ConfigNameEqualFold applies the EqualFold predicate on the "config_name" field.
func ConfigNameEqualFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEqualFold(FieldConfigName, v))
}

// ConfigNameContainsFold applies the ContainsFold predicate on the "config_name" field.
func ConfigNameContainsFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContainsFold(FieldConfigName, v))
}

// ConfigDescriptionEQ applies the EQ predicate on the "config_description" field.
func ConfigDescriptionEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldConfigDescription, v))
}

// ConfigDescriptionNEQ applies the NEQ predicate on the "config_description" field.
func ConfigDescriptionNEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNEQ(FieldConfigDescription, v))
}

// ConfigDescriptionIn applies the In predicate on the "config_description" field.
func ConfigDescriptionIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldIn(FieldConfigDescription, vs...))
}

// ConfigDescriptionNotIn applies the NotIn predicate on the "config_description" field.
func ConfigDescriptionNotIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNotIn(FieldConfigDescription, vs...))
}

// ConfigDescriptionGT applies the GT predicate on the "config_description" field.
func ConfigDescriptionGT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGT(FieldConfigDescription, v))
}

// ConfigDescriptionGTE applies the GTE predicate on the "config_description" field.
func ConfigDescriptionGTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGTE(FieldConfigDescription, v))
}

// ConfigDescriptionLT applies the LT predicate on the "config_description" field.
func ConfigDescriptionLT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLT(FieldConfigDescription, v))
}

// ConfigDescriptionLTE applies the LTE predicate on the "config_description" field.
func ConfigDescriptionLTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLTE(FieldConfigDescription, v))
}

// ConfigDescriptionContains applies the Contains predicate on the "config_description" field.
func ConfigDescriptionContains(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContains(FieldConfigDescription, v))
}

// ConfigDescriptionHasPrefix applies the HasPrefix predicate on the "config_description" field.
func ConfigDescriptionHasPrefix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasPrefix(FieldConfigDescription, v))
}

// ConfigDescriptionHasSuffix applies the HasSuffix predicate on the "config_description" field.
func ConfigDescriptionHasSuffix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasSuffix(FieldConfigDescription, v))
}

// ConfigDescriptionIsNil applies the IsNil predicate on the "config_description" field.
func ConfigDescriptionIsNil() predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldIsNull(FieldConfigDescription))
}

// ConfigDescriptionNotNil applies the NotNil predicate on the "config_description" field.
func ConfigDescriptionNotNil() predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNotNull(FieldConfigDescription))
}

// ConfigDescriptionEqualFold applies the EqualFold predicate on the "config_description" field.
func ConfigDescriptionEqualFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEqualFold(FieldConfigDescription, v))
}

// ConfigDescriptionContainsFold applies the ContainsFold predicate on the "config_description" field.
func ConfigDescriptionContainsFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContainsFold(FieldConfigDescription, v))
}

// ConfigDataEQ applies the EQ predicate on the "config_data" field.
func ConfigDataEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldConfigData, v))
}

// ConfigDataNEQ applies the NEQ predicate on the "config_data" field.
func ConfigDataNEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNEQ(FieldConfigData, v))
}

// ConfigDataIn applies the In predicate on the "config_data" field.
func ConfigDataIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldIn(FieldConfigData, vs...))
}

// ConfigDataNotIn applies the NotIn predicate on the "config_data" field.
func ConfigDataNotIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNotIn(FieldConfigData, vs...))
}

// ConfigDataGT applies the GT predicate on the "config_data" field.
func ConfigDataGT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGT(FieldConfigData, v))
}

// ConfigDataGTE applies the GTE predicate on the "config_data" field.
func ConfigDataGTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGTE(FieldConfigData, v))
}

// ConfigDataLT applies the LT predicate on the "config_data" field.
func ConfigDataLT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLT(FieldConfigData, v))
}

// ConfigDataLTE applies the LTE predicate on the "config_data" field.
func ConfigDataLTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLTE(FieldConfigData, v))
}

// ConfigDataContains applies the Contains predicate on the "config_data" field.
func ConfigDataContains(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContains(FieldConfigData, v))
}

// ConfigDataHasPrefix applies the HasPrefix predicate on the "config_data" field.
func ConfigDataHasPrefix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasPrefix(FieldConfigData, v))
}

// ConfigDataHasSuffix applies the HasSuffix predicate on the "config_data" field.
func ConfigDataHasSuffix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasSuffix(FieldConfigData, v))
}

// ConfigDataEqualFold applies the EqualFold predicate on the "config_data" field.
func ConfigDataEqualFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEqualFold(FieldConfigData, v))
}

// ConfigDataContainsFold applies the ContainsFold predicate on the "config_data" field.
func ConfigDataContainsFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContainsFold(FieldConfigData, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContains(FieldTenantID, v))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasPrefix(FieldTenantID, v))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasSuffix(FieldTenantID, v))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEqualFold(FieldTenantID, v))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContainsFold(FieldTenantID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtContains applies the Contains predicate on the "created_at" field.
func CreatedAtContains(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContains(FieldCreatedAt, v))
}

// CreatedAtHasPrefix applies the HasPrefix predicate on the "created_at" field.
func CreatedAtHasPrefix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasPrefix(FieldCreatedAt, v))
}

// CreatedAtHasSuffix applies the HasSuffix predicate on the "created_at" field.
func CreatedAtHasSuffix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasSuffix(FieldCreatedAt, v))
}

// CreatedAtEqualFold applies the EqualFold predicate on the "created_at" field.
func CreatedAtEqualFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEqualFold(FieldCreatedAt, v))
}

// CreatedAtContainsFold applies the ContainsFold predicate on the "created_at" field.
func CreatedAtContainsFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContainsFold(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtContains applies the Contains predicate on the "updated_at" field.
func UpdatedAtContains(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContains(FieldUpdatedAt, v))
}

// UpdatedAtHasPrefix applies the HasPrefix predicate on the "updated_at" field.
func UpdatedAtHasPrefix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasPrefix(FieldUpdatedAt, v))
}

// UpdatedAtHasSuffix applies the HasSuffix predicate on the "updated_at" field.
func UpdatedAtHasSuffix(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldHasSuffix(FieldUpdatedAt, v))
}

// UpdatedAtEqualFold applies the EqualFold predicate on the "updated_at" field.
func UpdatedAtEqualFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldEqualFold(FieldUpdatedAt, v))
}

// UpdatedAtContainsFold applies the ContainsFold predicate on the "updated_at" field.
func UpdatedAtContainsFold(v string) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.FieldContainsFold(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.CustomConfigResource) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.CustomConfigResource) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.CustomConfigResource) predicate.CustomConfigResource {
	return predicate.CustomConfigResource(sql.NotPredicates(p))
}
