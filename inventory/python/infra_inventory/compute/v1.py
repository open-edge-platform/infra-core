# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: compute/v1/compute.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto

from .localaccount import v1
from .location import v1
from .os import v1
from .provider import v1
from .status import v1


class HostState(betterproto.Enum):
    """
    --------------------------------------------------- Host Resources
    --------------------------------------------------
    """

    HOST_STATE_UNSPECIFIED = 0
    HOST_STATE_DELETED = 2
    HOST_STATE_ONBOARDED = 3
    HOST_STATE_UNTRUSTED = 4
    HOST_STATE_REGISTERED = 5


class PowerState(betterproto.Enum):
    POWER_STATE_UNSPECIFIED = 0
    POWER_STATE_ON = 2
    POWER_STATE_OFF = 3
    POWER_STATE_SLEEP = 4
    POWER_STATE_HIBERNATE = 5
    POWER_STATE_RESET = 6
    POWER_STATE_POWER_CYCLE = 7


class PowerCommandPolicy(betterproto.Enum):
    POWER_COMMAND_POLICY_UNSPECIFIED = 0
    POWER_COMMAND_POLICY_IMMEDIATE = 1
    POWER_COMMAND_POLICY_ORDERED = 2


class BaremetalControllerKind(betterproto.Enum):
    BAREMETAL_CONTROLLER_KIND_UNSPECIFIED = 0
    BAREMETAL_CONTROLLER_KIND_NONE = 1
    BAREMETAL_CONTROLLER_KIND_IPMI = 2
    BAREMETAL_CONTROLLER_KIND_VPRO = 3
    BAREMETAL_CONTROLLER_KIND_PDU = 4


class AmtState(betterproto.Enum):
    AMT_STATE_UNSPECIFIED = 0
    AMT_STATE_PROVISIONED = 1
    AMT_STATE_UNPROVISIONED = 2
    AMT_STATE_DISCONNECTED = 3


class AmtSku(betterproto.Enum):
    AMT_SKU_UNSPECIFIED = 0
    AMT_SKU_AMT = 1
    AMT_SKU_ISM = 2


class HostComponentState(betterproto.Enum):
    HOST_COMPONENT_STATE_UNSPECIFIED = 0
    HOST_COMPONENT_STATE_ERROR = 1
    HOST_COMPONENT_STATE_DELETED = 2
    HOST_COMPONENT_STATE_EXISTS = 3


class NetworkInterfaceLinkState(betterproto.Enum):
    NETWORK_INTERFACE_LINK_STATE_UNSPECIFIED = 0
    NETWORK_INTERFACE_LINK_STATE_UP = 1
    NETWORK_INTERFACE_LINK_STATE_DOWN = 2


class InstanceState(betterproto.Enum):
    """
    --------------------------------------------- Instance Resources
    ----------------------------------------------------
    """

    INSTANCE_STATE_UNSPECIFIED = 0
    INSTANCE_STATE_RUNNING = 1
    INSTANCE_STATE_DELETED = 2
    INSTANCE_STATE_UNTRUSTED = 3


class InstanceKind(betterproto.Enum):
    INSTANCE_KIND_UNSPECIFIED = 0
    INSTANCE_KIND_VM = 1
    INSTANCE_KIND_METAL = 2


class WorkloadState(betterproto.Enum):
    """
    --------------------------------------------- Workload Resources
    ---------------------------------------------------- Represents the
    Workload state, used for both current and desired state.
    """

    WORKLOAD_STATE_UNSPECIFIED = 0
    WORKLOAD_STATE_ERROR = 1
    WORKLOAD_STATE_DELETING = 2
    WORKLOAD_STATE_DELETED = 3
    WORKLOAD_STATE_PROVISIONED = 4


class WorkloadKind(betterproto.Enum):
    """Represents the type of workload (e.g., cluster, DHCP, DNS...)."""

    WORKLOAD_KIND_UNSPECIFIED = 0
    WORKLOAD_KIND_CLUSTER = 1
    WORKLOAD_KIND_DHCP = 2


class WorkloadMemberKind(betterproto.Enum):
    """Represents the type of the workload member."""

    WORKLOAD_MEMBER_KIND_UNSPECIFIED = 0
    WORKLOAD_MEMBER_KIND_CLUSTER_NODE = 1


class UpdatePolicy(betterproto.Enum):
    """
    UPDATE_POLICY_LATEST: - for mutable: unsupported - for immutable: latest
    version of the OS Resource UPDATE_POLICY_TARGET: - for mutable: apply the
    install_packages, update_sources, kernel_command - for immutable: install
    the version referenced by target_os
    """

    UPDATE_POLICY_UNSPECIFIED = 0
    UPDATE_POLICY_LATEST = 1
    UPDATE_POLICY_TARGET = 2


@dataclass
class HostResource(betterproto.Message):
    resource_id: str = betterproto.string_field(1)
    kind: str = betterproto.string_field(2)
    name: str = betterproto.string_field(3)
    desired_state: "HostState" = betterproto.enum_field(4)
    current_state: "HostState" = betterproto.enum_field(5)
    site: v1.SiteResource = betterproto.message_field(8)
    provider: v1.ProviderResource = betterproto.message_field(9)
    note: str = betterproto.string_field(13)
    # FIXME: add validation rules on the below items
    hardware_kind: str = betterproto.string_field(15)
    serial_number: str = betterproto.string_field(16)
    uuid: str = betterproto.string_field(17)
    memory_bytes: int = betterproto.uint64_field(18)
    cpu_model: str = betterproto.string_field(19)
    cpu_sockets: int = betterproto.uint32_field(20)
    cpu_cores: int = betterproto.uint32_field(21)
    cpu_capabilities: str = betterproto.string_field(22)
    cpu_architecture: str = betterproto.string_field(23)
    cpu_threads: int = betterproto.uint32_field(24)
    cpu_topology: str = betterproto.string_field(25)
    mgmt_ip: str = betterproto.string_field(30)
    bmc_kind: "BaremetalControllerKind" = betterproto.enum_field(34)
    bmc_ip: str = betterproto.string_field(35)
    bmc_username: str = betterproto.string_field(36)
    bmc_password: str = betterproto.string_field(37)
    pxe_mac: str = betterproto.string_field(38)
    hostname: str = betterproto.string_field(43)
    product_name: str = betterproto.string_field(44)
    bios_version: str = betterproto.string_field(46)
    bios_release_date: str = betterproto.string_field(47)
    bios_vendor: str = betterproto.string_field(48)
    metadata: str = betterproto.string_field(45)
    # Power management related fields
    desired_power_state: "PowerState" = betterproto.enum_field(50)
    current_power_state: "PowerState" = betterproto.enum_field(51)
    # A group of fields describing the Power status at runtime. The following 3
    # fields should always be updated in one shot. If power_status is empty
    # during initialization, it is automatically set to a Unknown value.
    power_status: str = betterproto.string_field(52)
    power_status_indicator: v1.StatusIndication = betterproto.enum_field(53)
    power_status_timestamp: int = betterproto.uint64_field(54)
    power_command_policy: "PowerCommandPolicy" = betterproto.enum_field(55)
    power_on_time: int = betterproto.uint64_field(56)
    # A group of fields describing the Host runtime status. host_status,
    # host_status_indicator and host_status_timestamp should always be updated in
    # one shot. If host_status is empty during initialization, it is
    # automatically set to a default value.
    host_status: str = betterproto.string_field(60)
    host_status_indicator: v1.StatusIndication = betterproto.enum_field(61)
    host_status_timestamp: int = betterproto.uint64_field(62)
    # A group of fields describing the Host onboarding status. onboarding_status,
    # onboarding_status_indicator and onboarding_status_timestamp should always
    # be updated in one shot. If onboarding_status is empty during
    # initialization, it is automatically set to a default value.
    onboarding_status: str = betterproto.string_field(63)
    onboarding_status_indicator: v1.StatusIndication = betterproto.enum_field(64)
    onboarding_status_timestamp: int = betterproto.uint64_field(65)
    # A group of fields describing the Host registration status.
    # registration_status, registration_status_indicator and
    # registration_status_timestamp should always be updated in one shot. If
    # registration_status is empty during initialization, it is automatically set
    # to a default value.
    registration_status: str = betterproto.string_field(66)
    registration_status_indicator: v1.StatusIndication = betterproto.enum_field(67)
    registration_status_timestamp: int = betterproto.uint64_field(68)
    host_storages: List["HoststorageResource"] = betterproto.message_field(70)
    host_nics: List["HostnicResource"] = betterproto.message_field(71)
    host_usbs: List["HostusbResource"] = betterproto.message_field(72)
    host_gpus: List["HostgpuResource"] = betterproto.message_field(73)
    instance: "InstanceResource" = betterproto.message_field(90)
    amt_sku: "AmtSku" = betterproto.enum_field(91)
    desired_amt_state: "AmtState" = betterproto.enum_field(92)
    current_amt_state: "AmtState" = betterproto.enum_field(93)
    # A group of fields describing the AMT status. amt_status,
    # amt_status_indicator and amt_status_timestamp should always be updated in
    # one shot. If amt_status is empty during initialization, it is automatically
    # set to a Unknown value.
    amt_status: str = betterproto.string_field(94)
    amt_status_indicator: v1.StatusIndication = betterproto.enum_field(95)
    amt_status_timestamp: int = betterproto.uint64_field(96)
    user_lvm_size: int = betterproto.uint32_field(97)
    tenant_id: str = betterproto.string_field(100)
    created_at: str = betterproto.string_field(200)
    updated_at: str = betterproto.string_field(201)


@dataclass
class HoststorageResource(betterproto.Message):
    resource_id: str = betterproto.string_field(1)
    kind: str = betterproto.string_field(2)
    provider_status: str = betterproto.string_field(6)
    host: "HostResource" = betterproto.message_field(12)
    # FIXME: better validation of the below values
    wwid: str = betterproto.string_field(16)
    serial: str = betterproto.string_field(17)
    vendor: str = betterproto.string_field(18)
    model: str = betterproto.string_field(19)
    capacity_bytes: int = betterproto.uint64_field(20)
    device_name: str = betterproto.string_field(21)
    tenant_id: str = betterproto.string_field(100)
    created_at: str = betterproto.string_field(200)
    updated_at: str = betterproto.string_field(201)


@dataclass
class HostnicResource(betterproto.Message):
    resource_id: str = betterproto.string_field(1)
    kind: str = betterproto.string_field(2)
    provider_status: str = betterproto.string_field(6)
    host: "HostResource" = betterproto.message_field(12)
    # FIXME: Better validation on fields below
    device_name: str = betterproto.string_field(16)
    pci_identifier: str = betterproto.string_field(17)
    mac_addr: str = betterproto.string_field(18)
    sriov_enabled: bool = betterproto.bool_field(19)
    sriov_vfs_num: int = betterproto.uint32_field(20)
    sriov_vfs_total: int = betterproto.uint32_field(31)
    peer_name: str = betterproto.string_field(21)
    peer_description: str = betterproto.string_field(22)
    peer_mac: str = betterproto.string_field(23)
    peer_mgmt_ip: str = betterproto.string_field(24)
    peer_port: str = betterproto.string_field(25)
    supported_link_mode: str = betterproto.string_field(26)
    advertising_link_mode: str = betterproto.string_field(27)
    current_speed_bps: int = betterproto.uint64_field(28)
    current_duplex: str = betterproto.string_field(29)
    features: str = betterproto.string_field(30)
    mtu: int = betterproto.uint32_field(40)
    link_state: "NetworkInterfaceLinkState" = betterproto.enum_field(41)
    bmc_interface: bool = betterproto.bool_field(43)
    tenant_id: str = betterproto.string_field(100)
    created_at: str = betterproto.string_field(200)
    updated_at: str = betterproto.string_field(201)


@dataclass
class HostusbResource(betterproto.Message):
    resource_id: str = betterproto.string_field(1)
    kind: str = betterproto.string_field(2)
    host: "HostResource" = betterproto.message_field(8)
    owner_id: str = betterproto.string_field(9)
    # FIXME: better validation of the below values
    idvendor: str = betterproto.string_field(10)
    idproduct: str = betterproto.string_field(11)
    bus: int = betterproto.uint32_field(12)
    addr: int = betterproto.uint32_field(13)
    class_: str = betterproto.string_field(20)
    serial: str = betterproto.string_field(21)
    device_name: str = betterproto.string_field(22)
    tenant_id: str = betterproto.string_field(100)
    created_at: str = betterproto.string_field(200)
    updated_at: str = betterproto.string_field(201)


@dataclass
class HostgpuResource(betterproto.Message):
    resource_id: str = betterproto.string_field(1)
    host: "HostResource" = betterproto.message_field(10)
    pci_id: str = betterproto.string_field(20)
    product: str = betterproto.string_field(21)
    vendor: str = betterproto.string_field(22)
    description: str = betterproto.string_field(23)
    device_name: str = betterproto.string_field(24)
    features: str = betterproto.string_field(25)
    tenant_id: str = betterproto.string_field(100)
    created_at: str = betterproto.string_field(200)
    updated_at: str = betterproto.string_field(201)


@dataclass
class InstanceResource(betterproto.Message):
    """
    InstanceResource describes an instantiated OS install, running on either a
    host or hypervisor.
    """

    resource_id: str = betterproto.string_field(1)
    kind: "InstanceKind" = betterproto.enum_field(2)
    name: str = betterproto.string_field(3)
    desired_state: "InstanceState" = betterproto.enum_field(4)
    current_state: "InstanceState" = betterproto.enum_field(5)
    vm_memory_bytes: int = betterproto.uint64_field(6)
    vm_cpu_cores: int = betterproto.uint32_field(7)
    vm_storage_bytes: int = betterproto.uint64_field(8)
    host: "HostResource" = betterproto.message_field(9)
    os: v1.OperatingSystemResource = betterproto.message_field(12)
    security_feature: v1.SecurityFeature = betterproto.enum_field(14)
    # A group of fields describing the Instance runtime status. instance_status,
    # instance_status_indicator and instance_status_timestamp should always be
    # updated in one shot. If instance_status is empty during initialization, it
    # is automatically set to a default value.
    instance_status: str = betterproto.string_field(15)
    instance_status_indicator: v1.StatusIndication = betterproto.enum_field(16)
    instance_status_timestamp: int = betterproto.uint64_field(17)
    # A group of fields describing the Instance provisioning status.
    # provisioning_status, provisioning_status_indicator and
    # provisioning_status_timestamp should always be updated in one shot. If
    # provisioning_status is empty during initialization, it is automatically set
    # to a default value.
    provisioning_status: str = betterproto.string_field(18)
    provisioning_status_indicator: v1.StatusIndication = betterproto.enum_field(19)
    provisioning_status_timestamp: int = betterproto.uint64_field(20)
    # A group of fields describing the Instance update status. update_status,
    # update_status_indicator and update_status_timestamp should always be
    # updated in one shot. update_status_detail should be populated when update
    # status reports update finished successfully or failed. If update_status is
    # empty during initialization, it is automatically set to a default value.
    update_status: str = betterproto.string_field(21)
    update_status_indicator: v1.StatusIndication = betterproto.enum_field(22)
    update_status_timestamp: int = betterproto.uint64_field(23)
    # A group of fields describing the Instance trusted_attestation status.
    # trusted_attestation_status, trusted_attestation_status_indicator and
    # trusted_attestation_status_timestamp should always be updated in one shot.
    # If trusted_attestation_status is empty during initialization, it is
    # automatically set to a default value.
    trusted_attestation_status: str = betterproto.string_field(26)
    trusted_attestation_status_indicator: v1.StatusIndication = betterproto.enum_field(
        27
    )
    trusted_attestation_status_timestamp: int = betterproto.uint64_field(28)
    workload_members: List["WorkloadMember"] = betterproto.message_field(30)
    provider: v1.ProviderResource = betterproto.message_field(40)
    localaccount: v1.LocalAccountResource = betterproto.message_field(41)
    existing_cves: str = betterproto.string_field(42)
    os_update_policy: "OSUpdatePolicyResource" = betterproto.message_field(43)
    runtime_packages: str = betterproto.string_field(51)
    os_update_available: str = betterproto.string_field(52)
    custom_config: List["CustomConfigResource"] = betterproto.message_field(53)
    tenant_id: str = betterproto.string_field(100)
    instance_status_detail: str = betterproto.string_field(101)
    created_at: str = betterproto.string_field(200)
    updated_at: str = betterproto.string_field(201)


@dataclass
class WorkloadResource(betterproto.Message):
    """
    Represents a generic way to group compute resources (e.g., cluster,
    DHCP...).
    """

    resource_id: str = betterproto.string_field(1)
    kind: "WorkloadKind" = betterproto.enum_field(2)
    name: str = betterproto.string_field(3)
    external_id: str = betterproto.string_field(5)
    desired_state: "WorkloadState" = betterproto.enum_field(10)
    current_state: "WorkloadState" = betterproto.enum_field(11)
    status: str = betterproto.string_field(15)
    members: List["WorkloadMember"] = betterproto.message_field(20)
    metadata: str = betterproto.string_field(30)
    tenant_id: str = betterproto.string_field(100)
    created_at: str = betterproto.string_field(200)
    updated_at: str = betterproto.string_field(201)


@dataclass
class WorkloadMember(betterproto.Message):
    """
    Intermediate resource to represent a relation between a workload and a
    compute resource (i.e., instance).
    """

    resource_id: str = betterproto.string_field(1)
    kind: "WorkloadMemberKind" = betterproto.enum_field(2)
    workload: "WorkloadResource" = betterproto.message_field(10)
    instance: "InstanceResource" = betterproto.message_field(11)
    tenant_id: str = betterproto.string_field(100)
    created_at: str = betterproto.string_field(200)
    updated_at: str = betterproto.string_field(201)


@dataclass
class OSUpdatePolicyResource(betterproto.Message):
    resource_id: str = betterproto.string_field(1)
    name: str = betterproto.string_field(2)
    description: str = betterproto.string_field(3)
    update_sources: List[str] = betterproto.string_field(5)
    update_packages: str = betterproto.string_field(7)
    update_kernel_command: str = betterproto.string_field(8)
    target_os: v1.OperatingSystemResource = betterproto.message_field(50)
    update_policy: "UpdatePolicy" = betterproto.enum_field(60)
    tenant_id: str = betterproto.string_field(100)
    created_at: str = betterproto.string_field(200)
    updated_at: str = betterproto.string_field(201)


@dataclass
class CustomConfigResource(betterproto.Message):
    """
    ---------------------------------------------------------------------------
    ------------------------------------------
    --------------------------------------------- Custom Config Resources
    -----------------------------------------------
    """

    # resource identifier
    resource_id: str = betterproto.string_field(1)
    # Unique name provided by admin
    name: str = betterproto.string_field(2)
    # Configuration file.
    config: str = betterproto.string_field(3)
    # Config Description
    description: str = betterproto.string_field(4)
    # Tenant Identifier.
    tenant_id: str = betterproto.string_field(100)
    # Creation timestamp
    created_at: str = betterproto.string_field(200)
    updated_at: str = betterproto.string_field(201)
    instances: List["InstanceResource"] = betterproto.message_field(500)


@dataclass
class OSUpdateRunResource(betterproto.Message):
    resource_id: str = betterproto.string_field(1)
    name: str = betterproto.string_field(2)
    description: str = betterproto.string_field(3)
    applied_policy: "OSUpdatePolicyResource" = betterproto.message_field(4)
    instance: "InstanceResource" = betterproto.message_field(5)
    status_indicator: v1.StatusIndication = betterproto.enum_field(6)
    status: str = betterproto.string_field(7)
    status_details: str = betterproto.string_field(8)
    status_timestamp: int = betterproto.uint64_field(9)
    start_time: int = betterproto.uint64_field(10)
    end_time: int = betterproto.uint64_field(11)
    tenant_id: str = betterproto.string_field(100)
    created_at: str = betterproto.string_field(200)
    updated_at: str = betterproto.string_field(201)
