# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: ent/opts.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import Dict, List

import betterproto


@dataclass
class Schema(betterproto.Message):
    gen: bool = betterproto.bool_field(1)
    name: str = betterproto.string_field(2)


@dataclass
class Field(betterproto.Message):
    optional: bool = betterproto.bool_field(1)
    nillable: bool = betterproto.bool_field(2)
    unique: bool = betterproto.bool_field(3)
    sensitive: bool = betterproto.bool_field(4)
    immutable: bool = betterproto.bool_field(5)
    comment: str = betterproto.string_field(6)
    struct_tag: str = betterproto.string_field(7)
    storage_key: str = betterproto.string_field(8)
    schema_type: Dict[str, str] = betterproto.map_field(
        9, betterproto.TYPE_STRING, betterproto.TYPE_STRING
    )


@dataclass
class Edge(betterproto.Message):
    unique: bool = betterproto.bool_field(1)
    ref: str = betterproto.string_field(2)
    required: bool = betterproto.bool_field(3)
    field: str = betterproto.string_field(4)
    storage_key: "EdgeStorageKey" = betterproto.message_field(5)
    struct_tag: str = betterproto.string_field(6)


@dataclass
class EdgeStorageKey(betterproto.Message):
    table: str = betterproto.string_field(1)
    columns: List[str] = betterproto.string_field(2)
