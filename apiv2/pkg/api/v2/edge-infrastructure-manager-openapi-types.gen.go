// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package api

import (
	"encoding/json"
	"fmt"
	"time"
)

// Defines values for HostResourceBmcKind.
const (
	BAREMETALCONTROLLERKINDIPMI HostResourceBmcKind = "BAREMETAL_CONTROLLER_KIND_IPMI"
	BAREMETALCONTROLLERKINDNONE HostResourceBmcKind = "BAREMETAL_CONTROLLER_KIND_NONE"
	BAREMETALCONTROLLERKINDPDU  HostResourceBmcKind = "BAREMETAL_CONTROLLER_KIND_PDU"
	BAREMETALCONTROLLERKINDVPRO HostResourceBmcKind = "BAREMETAL_CONTROLLER_KIND_VPRO"
)

// Defines values for HostResourceCurrentPowerState.
const (
	HostResourceCurrentPowerStatePOWERSTATEERROR HostResourceCurrentPowerState = "POWER_STATE_ERROR"
	HostResourceCurrentPowerStatePOWERSTATEOFF   HostResourceCurrentPowerState = "POWER_STATE_OFF"
	HostResourceCurrentPowerStatePOWERSTATEON    HostResourceCurrentPowerState = "POWER_STATE_ON"
)

// Defines values for HostResourceCurrentState.
const (
	HostResourceCurrentStateHOSTSTATEDELETED    HostResourceCurrentState = "HOST_STATE_DELETED"
	HostResourceCurrentStateHOSTSTATEONBOARDED  HostResourceCurrentState = "HOST_STATE_ONBOARDED"
	HostResourceCurrentStateHOSTSTATEREGISTERED HostResourceCurrentState = "HOST_STATE_REGISTERED"
	HostResourceCurrentStateHOSTSTATEUNTRUSTED  HostResourceCurrentState = "HOST_STATE_UNTRUSTED"
)

// Defines values for HostResourceDesiredPowerState.
const (
	HostResourceDesiredPowerStatePOWERSTATEERROR HostResourceDesiredPowerState = "POWER_STATE_ERROR"
	HostResourceDesiredPowerStatePOWERSTATEOFF   HostResourceDesiredPowerState = "POWER_STATE_OFF"
	HostResourceDesiredPowerStatePOWERSTATEON    HostResourceDesiredPowerState = "POWER_STATE_ON"
)

// Defines values for HostResourceDesiredState.
const (
	HostResourceDesiredStateHOSTSTATEDELETED    HostResourceDesiredState = "HOST_STATE_DELETED"
	HostResourceDesiredStateHOSTSTATEONBOARDED  HostResourceDesiredState = "HOST_STATE_ONBOARDED"
	HostResourceDesiredStateHOSTSTATEREGISTERED HostResourceDesiredState = "HOST_STATE_REGISTERED"
	HostResourceDesiredStateHOSTSTATEUNTRUSTED  HostResourceDesiredState = "HOST_STATE_UNTRUSTED"
)

// Defines values for HostResourceHostStatusIndicator.
const (
	HostResourceHostStatusIndicatorSTATUSINDICATIONERROR      HostResourceHostStatusIndicator = "STATUS_INDICATION_ERROR"
	HostResourceHostStatusIndicatorSTATUSINDICATIONIDLE       HostResourceHostStatusIndicator = "STATUS_INDICATION_IDLE"
	HostResourceHostStatusIndicatorSTATUSINDICATIONINPROGRESS HostResourceHostStatusIndicator = "STATUS_INDICATION_IN_PROGRESS"
)

// Defines values for HostResourceOnboardingStatusIndicator.
const (
	HostResourceOnboardingStatusIndicatorSTATUSINDICATIONERROR      HostResourceOnboardingStatusIndicator = "STATUS_INDICATION_ERROR"
	HostResourceOnboardingStatusIndicatorSTATUSINDICATIONIDLE       HostResourceOnboardingStatusIndicator = "STATUS_INDICATION_IDLE"
	HostResourceOnboardingStatusIndicatorSTATUSINDICATIONINPROGRESS HostResourceOnboardingStatusIndicator = "STATUS_INDICATION_IN_PROGRESS"
)

// Defines values for HostResourceRegistrationStatusIndicator.
const (
	HostResourceRegistrationStatusIndicatorSTATUSINDICATIONERROR      HostResourceRegistrationStatusIndicator = "STATUS_INDICATION_ERROR"
	HostResourceRegistrationStatusIndicatorSTATUSINDICATIONIDLE       HostResourceRegistrationStatusIndicator = "STATUS_INDICATION_IDLE"
	HostResourceRegistrationStatusIndicatorSTATUSINDICATIONINPROGRESS HostResourceRegistrationStatusIndicator = "STATUS_INDICATION_IN_PROGRESS"
)

// Defines values for IPAddressResourceConfigMethod.
const (
	IPADDRESSCONFIGMETHODDYNAMIC IPAddressResourceConfigMethod = "IP_ADDRESS_CONFIG_METHOD_DYNAMIC"
	IPADDRESSCONFIGMETHODSTATIC  IPAddressResourceConfigMethod = "IP_ADDRESS_CONFIG_METHOD_STATIC"
)

// Defines values for IPAddressResourceStatus.
const (
	IPADDRESSSTATUSASSIGNED           IPAddressResourceStatus = "IP_ADDRESS_STATUS_ASSIGNED"
	IPADDRESSSTATUSASSIGNMENTERROR    IPAddressResourceStatus = "IP_ADDRESS_STATUS_ASSIGNMENT_ERROR"
	IPADDRESSSTATUSCONFIGURATIONERROR IPAddressResourceStatus = "IP_ADDRESS_STATUS_CONFIGURATION_ERROR"
	IPADDRESSSTATUSCONFIGURED         IPAddressResourceStatus = "IP_ADDRESS_STATUS_CONFIGURED"
	IPADDRESSSTATUSERROR              IPAddressResourceStatus = "IP_ADDRESS_STATUS_ERROR"
	IPADDRESSSTATUSRELEASED           IPAddressResourceStatus = "IP_ADDRESS_STATUS_RELEASED"
)

// Defines values for InstanceResourceCurrentState.
const (
	InstanceResourceCurrentStateINSTANCESTATEDELETED   InstanceResourceCurrentState = "INSTANCE_STATE_DELETED"
	InstanceResourceCurrentStateINSTANCESTATERUNNING   InstanceResourceCurrentState = "INSTANCE_STATE_RUNNING"
	InstanceResourceCurrentStateINSTANCESTATEUNTRUSTED InstanceResourceCurrentState = "INSTANCE_STATE_UNTRUSTED"
)

// Defines values for InstanceResourceDesiredState.
const (
	InstanceResourceDesiredStateINSTANCESTATEDELETED   InstanceResourceDesiredState = "INSTANCE_STATE_DELETED"
	InstanceResourceDesiredStateINSTANCESTATERUNNING   InstanceResourceDesiredState = "INSTANCE_STATE_RUNNING"
	InstanceResourceDesiredStateINSTANCESTATEUNTRUSTED InstanceResourceDesiredState = "INSTANCE_STATE_UNTRUSTED"
)

// Defines values for InstanceResourceInstanceStatusIndicator.
const (
	InstanceResourceInstanceStatusIndicatorSTATUSINDICATIONERROR      InstanceResourceInstanceStatusIndicator = "STATUS_INDICATION_ERROR"
	InstanceResourceInstanceStatusIndicatorSTATUSINDICATIONIDLE       InstanceResourceInstanceStatusIndicator = "STATUS_INDICATION_IDLE"
	InstanceResourceInstanceStatusIndicatorSTATUSINDICATIONINPROGRESS InstanceResourceInstanceStatusIndicator = "STATUS_INDICATION_IN_PROGRESS"
)

// Defines values for InstanceResourceKind.
const (
	INSTANCEKINDMETAL InstanceResourceKind = "INSTANCE_KIND_METAL"
)

// Defines values for InstanceResourceProvisioningStatusIndicator.
const (
	InstanceResourceProvisioningStatusIndicatorSTATUSINDICATIONERROR      InstanceResourceProvisioningStatusIndicator = "STATUS_INDICATION_ERROR"
	InstanceResourceProvisioningStatusIndicatorSTATUSINDICATIONIDLE       InstanceResourceProvisioningStatusIndicator = "STATUS_INDICATION_IDLE"
	InstanceResourceProvisioningStatusIndicatorSTATUSINDICATIONINPROGRESS InstanceResourceProvisioningStatusIndicator = "STATUS_INDICATION_IN_PROGRESS"
)

// Defines values for InstanceResourceSecurityFeature.
const (
	InstanceResourceSecurityFeatureSECURITYFEATURENONE                            InstanceResourceSecurityFeature = "SECURITY_FEATURE_NONE"
	InstanceResourceSecurityFeatureSECURITYFEATURESECUREBOOTANDFULLDISKENCRYPTION InstanceResourceSecurityFeature = "SECURITY_FEATURE_SECURE_BOOT_AND_FULL_DISK_ENCRYPTION"
)

// Defines values for InstanceResourceTrustedAttestationStatusIndicator.
const (
	InstanceResourceTrustedAttestationStatusIndicatorSTATUSINDICATIONERROR      InstanceResourceTrustedAttestationStatusIndicator = "STATUS_INDICATION_ERROR"
	InstanceResourceTrustedAttestationStatusIndicatorSTATUSINDICATIONIDLE       InstanceResourceTrustedAttestationStatusIndicator = "STATUS_INDICATION_IDLE"
	InstanceResourceTrustedAttestationStatusIndicatorSTATUSINDICATIONINPROGRESS InstanceResourceTrustedAttestationStatusIndicator = "STATUS_INDICATION_IN_PROGRESS"
)

// Defines values for InstanceResourceUpdateStatusIndicator.
const (
	InstanceResourceUpdateStatusIndicatorSTATUSINDICATIONERROR      InstanceResourceUpdateStatusIndicator = "STATUS_INDICATION_ERROR"
	InstanceResourceUpdateStatusIndicatorSTATUSINDICATIONIDLE       InstanceResourceUpdateStatusIndicator = "STATUS_INDICATION_IDLE"
	InstanceResourceUpdateStatusIndicatorSTATUSINDICATIONINPROGRESS InstanceResourceUpdateStatusIndicator = "STATUS_INDICATION_IN_PROGRESS"
)

// Defines values for ListLocationsResponseLocationNodeType.
const (
	RESOURCEKINDREGION ListLocationsResponseLocationNodeType = "RESOURCE_KIND_REGION"
	RESOURCEKINDSITE   ListLocationsResponseLocationNodeType = "RESOURCE_KIND_SITE"
)

// Defines values for NetworkInterfaceLinkStateType.
const (
	NETWORKINTERFACELINKSTATEDOWN NetworkInterfaceLinkStateType = "NETWORK_INTERFACE_LINK_STATE_DOWN"
	NETWORKINTERFACELINKSTATEUP   NetworkInterfaceLinkStateType = "NETWORK_INTERFACE_LINK_STATE_UP"
)

// Defines values for OSUpdateRunStatusIndicator.
const (
	OSUpdateRunStatusIndicatorSTATUSINDICATIONERROR      OSUpdateRunStatusIndicator = "STATUS_INDICATION_ERROR"
	OSUpdateRunStatusIndicatorSTATUSINDICATIONIDLE       OSUpdateRunStatusIndicator = "STATUS_INDICATION_IDLE"
	OSUpdateRunStatusIndicatorSTATUSINDICATIONINPROGRESS OSUpdateRunStatusIndicator = "STATUS_INDICATION_IN_PROGRESS"
)

// Defines values for OperatingSystemResourceOsProvider.
const (
	OSPROVIDERKINDINFRA  OperatingSystemResourceOsProvider = "OS_PROVIDER_KIND_INFRA"
	OSPROVIDERKINDLENOVO OperatingSystemResourceOsProvider = "OS_PROVIDER_KIND_LENOVO"
)

// Defines values for OperatingSystemResourceOsType.
const (
	OSTYPEIMMUTABLE OperatingSystemResourceOsType = "OS_TYPE_IMMUTABLE"
	OSTYPEMUTABLE   OperatingSystemResourceOsType = "OS_TYPE_MUTABLE"
)

// Defines values for OperatingSystemResourceSecurityFeature.
const (
	OperatingSystemResourceSecurityFeatureSECURITYFEATURENONE                            OperatingSystemResourceSecurityFeature = "SECURITY_FEATURE_NONE"
	OperatingSystemResourceSecurityFeatureSECURITYFEATURESECUREBOOTANDFULLDISKENCRYPTION OperatingSystemResourceSecurityFeature = "SECURITY_FEATURE_SECURE_BOOT_AND_FULL_DISK_ENCRYPTION"
)

// Defines values for ProviderResourceProviderKind.
const (
	PROVIDERKINDBAREMETAL ProviderResourceProviderKind = "PROVIDER_KIND_BAREMETAL"
)

// Defines values for ProviderResourceProviderVendor.
const (
	PROVIDERVENDORLENOVOLOCA ProviderResourceProviderVendor = "PROVIDER_VENDOR_LENOVO_LOCA"
	PROVIDERVENDORLENOVOLXCA ProviderResourceProviderVendor = "PROVIDER_VENDOR_LENOVO_LXCA"
)

// Defines values for RepeatedScheduleResourceScheduleStatus.
const (
	RepeatedScheduleResourceScheduleStatusSCHEDULESTATUSMAINTENANCE RepeatedScheduleResourceScheduleStatus = "SCHEDULE_STATUS_MAINTENANCE"
	RepeatedScheduleResourceScheduleStatusSCHEDULESTATUSOSUPDATE    RepeatedScheduleResourceScheduleStatus = "SCHEDULE_STATUS_OS_UPDATE"
)

// Defines values for SingleScheduleResourceScheduleStatus.
const (
	SingleScheduleResourceScheduleStatusSCHEDULESTATUSMAINTENANCE SingleScheduleResourceScheduleStatus = "SCHEDULE_STATUS_MAINTENANCE"
	SingleScheduleResourceScheduleStatusSCHEDULESTATUSOSUPDATE    SingleScheduleResourceScheduleStatus = "SCHEDULE_STATUS_OS_UPDATE"
)

// Defines values for TelemetryLogsGroupResourceCollectorKind.
const (
	TelemetryLogsGroupResourceCollectorKindTELEMETRYCOLLECTORKINDCLUSTER TelemetryLogsGroupResourceCollectorKind = "TELEMETRY_COLLECTOR_KIND_CLUSTER"
	TelemetryLogsGroupResourceCollectorKindTELEMETRYCOLLECTORKINDHOST    TelemetryLogsGroupResourceCollectorKind = "TELEMETRY_COLLECTOR_KIND_HOST"
)

// Defines values for TelemetryLogsProfileResourceLogLevel.
const (
	SEVERITYLEVELCRITICAL TelemetryLogsProfileResourceLogLevel = "SEVERITY_LEVEL_CRITICAL"
	SEVERITYLEVELDEBUG    TelemetryLogsProfileResourceLogLevel = "SEVERITY_LEVEL_DEBUG"
	SEVERITYLEVELERROR    TelemetryLogsProfileResourceLogLevel = "SEVERITY_LEVEL_ERROR"
	SEVERITYLEVELINFO     TelemetryLogsProfileResourceLogLevel = "SEVERITY_LEVEL_INFO"
	SEVERITYLEVELWARN     TelemetryLogsProfileResourceLogLevel = "SEVERITY_LEVEL_WARN"
)

// Defines values for TelemetryMetricsGroupResourceCollectorKind.
const (
	TelemetryMetricsGroupResourceCollectorKindTELEMETRYCOLLECTORKINDCLUSTER TelemetryMetricsGroupResourceCollectorKind = "TELEMETRY_COLLECTOR_KIND_CLUSTER"
	TelemetryMetricsGroupResourceCollectorKindTELEMETRYCOLLECTORKINDHOST    TelemetryMetricsGroupResourceCollectorKind = "TELEMETRY_COLLECTOR_KIND_HOST"
)

// Defines values for WorkloadMemberKind.
const (
	WORKLOADMEMBERKINDCLUSTERNODE WorkloadMemberKind = "WORKLOAD_MEMBER_KIND_CLUSTER_NODE"
)

// Defines values for WorkloadResourceKind.
const (
	WORKLOADKINDCLUSTER WorkloadResourceKind = "WORKLOAD_KIND_CLUSTER"
)

// DeleteHostResponse Reponse message for DeleteHost.
type DeleteHostResponse = map[string]interface{}

// DeleteInstanceResponse Response message for DeleteInstance.
type DeleteInstanceResponse = map[string]interface{}

// DeleteLocalAccountResponse Response message for DeleteLocalAccount.
type DeleteLocalAccountResponse = map[string]interface{}

// DeleteOperatingSystemResponse Response message for DeleteOperatingSystem.
type DeleteOperatingSystemResponse = map[string]interface{}

// DeleteProviderResponse Response message for DeleteProvider.
type DeleteProviderResponse = map[string]interface{}

// DeleteRegionResponse Response message for DeleteRegion.
type DeleteRegionResponse = map[string]interface{}

// DeleteRepeatedScheduleResponse Response message for DeleteRepeatedSchedule.
type DeleteRepeatedScheduleResponse = map[string]interface{}

// DeleteSingleScheduleResponse Response message for DeleteSingleSchedule.
type DeleteSingleScheduleResponse = map[string]interface{}

// DeleteSiteResponse Response message for DeleteSite.
type DeleteSiteResponse = map[string]interface{}

// DeleteTelemetryLogsGroupResponse Response message for DeleteTelemetryLogsGroup.
type DeleteTelemetryLogsGroupResponse = map[string]interface{}

// DeleteTelemetryLogsProfileResponse Response message for DeleteTelemetryLogsProfile.
type DeleteTelemetryLogsProfileResponse = map[string]interface{}

// DeleteTelemetryMetricsGroupResponse Response message for DeleteTelemetryMetricsGroup.
type DeleteTelemetryMetricsGroupResponse = map[string]interface{}

// DeleteTelemetryMetricsProfileResponse Response message for DeleteTelemetryMetricsProfile.
type DeleteTelemetryMetricsProfileResponse = map[string]interface{}

// DeleteWorkloadMemberResponse Response message for DeleteWorkloadMember.
type DeleteWorkloadMemberResponse = map[string]interface{}

// DeleteWorkloadResponse Response message for DeleteWorkload.
type DeleteWorkloadResponse = map[string]interface{}

// GetHostSummaryResponse Summary of the hosts status.
type GetHostSummaryResponse struct {
	// Error The total number of hosts presenting an Error.
	Error *uint32 `json:"error,omitempty"`

	// Running The total number of hosts in Running state.
	Running *uint32 `json:"running,omitempty"`

	// Total The total number of hosts.
	Total *uint32 `json:"total,omitempty"`

	// Unallocated The total number of hosts without a site.
	Unallocated *uint32 `json:"unallocated,omitempty"`
}

// GoogleProtobufAny Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
type GoogleProtobufAny struct {
	// Type The type of the serialized message.
	Type                 *string                `json:"@type,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}

// HostRegister Message to register a Host.
type HostRegister struct {
	// AutoOnboard Flag ot signal to automatically onboard the host.
	AutoOnboard *bool `json:"autoOnboard,omitempty"`

	// Name The host name.
	Name *string `json:"name,omitempty"`

	// SerialNumber The host serial number.
	SerialNumber *string `json:"serialNumber,omitempty"`

	// Uuid The host UUID.
	Uuid *string `json:"uuid,omitempty"`
}

// HostResource A Host resource.
type HostResource struct {
	// BiosReleaseDate BIOS Release Date.
	BiosReleaseDate *string `json:"biosReleaseDate,omitempty"`

	// BiosVendor BIOS Vendor.
	BiosVendor *string `json:"biosVendor,omitempty"`

	// BiosVersion BIOS Version.
	BiosVersion *string `json:"biosVersion,omitempty"`

	// BmcIp BMC IP address, such as "192.0.0.1".
	BmcIp *string `json:"bmcIp,omitempty"`

	// BmcKind Kind of BMC.
	BmcKind *HostResourceBmcKind `json:"bmcKind,omitempty"`

	// CpuArchitecture Architecture of the CPU model, e.g. x86_64.
	CpuArchitecture *string `json:"cpuArchitecture,omitempty"`

	// CpuCapabilities String list of all CPU capabilities (possibly JSON).
	CpuCapabilities *string `json:"cpuCapabilities,omitempty"`

	// CpuCores Number of CPU cores.
	CpuCores *uint32 `json:"cpuCores,omitempty"`

	// CpuModel CPU model of the Host.
	CpuModel *string `json:"cpuModel,omitempty"`

	// CpuSockets Number of physical CPU sockets.
	CpuSockets *uint32 `json:"cpuSockets,omitempty"`

	// CpuThreads Total Number of threads supported by the CPU.
	CpuThreads *uint32 `json:"cpuThreads,omitempty"`

	// CpuTopology JSON field storing the CPU topology, refer to HDA/HRM docs for the JSON schema.
	CpuTopology *string `json:"cpuTopology,omitempty"`

	// CurrentPowerState Current power state of the host
	CurrentPowerState *HostResourceCurrentPowerState `json:"currentPowerState,omitempty"`

	// CurrentState The current state of the Host.
	CurrentState *HostResourceCurrentState `json:"currentState,omitempty"`

	// DesiredPowerState Desired power state of the host
	DesiredPowerState *HostResourceDesiredPowerState `json:"desiredPowerState,omitempty"`

	// DesiredState The desired state of the Host.
	DesiredState *HostResourceDesiredState `json:"desiredState,omitempty"`

	// HostGpus Back-reference to attached host GPU resources.
	HostGpus *[]HostgpuResource `json:"hostGpus,omitempty"`

	// HostNics Back-reference to attached host NIC resources.
	HostNics *[]HostnicResource `json:"hostNics,omitempty"`

	// HostStatus textual message that describes the runtime status of Host. Set by RMs only.
	HostStatus *string `json:"hostStatus,omitempty"`

	// HostStatusIndicator Indicates interpretation of host_status. Set by RMs only.
	HostStatusIndicator *HostResourceHostStatusIndicator `json:"hostStatusIndicator,omitempty"`

	// HostStatusTimestamp UTC timestamp when host_status was last changed. Set by RMs only.
	HostStatusTimestamp *uint32 `json:"hostStatusTimestamp,omitempty"`

	// HostStorages Back-reference to attached host storage resources.
	HostStorages *[]HoststorageResource `json:"hostStorages,omitempty"`

	// HostUsbs Back-reference to attached host USB resources.
	HostUsbs *[]HostusbResource `json:"hostUsbs,omitempty"`

	// Hostname Hostname.
	Hostname *string `json:"hostname,omitempty"`

	// InheritedMetadata The metadata inherited by the host, represented by a list of key:value pairs, rendered by location and logical structures.
	InheritedMetadata *[]MetadataItem `json:"inheritedMetadata,omitempty"`

	// Instance InstanceResource describes an instantiated OS install, running on either a host or hypervisor.
	Instance *InstanceResource `json:"instance,omitempty"`

	// MemoryBytes Quantity of memory (RAM) in the system in bytes.
	MemoryBytes *string `json:"memoryBytes,omitempty"`

	// Metadata The metadata associated with the host, represented by a list of key:value pairs.
	Metadata *[]MetadataItem `json:"metadata,omitempty"`

	// Name The host name.
	Name string `json:"name"`

	// Note The note associated with the host.
	Note *string `json:"note,omitempty"`

	// OnboardingStatus textual message that describes the onboarding status of Host. Set by RMs only.
	OnboardingStatus *string `json:"onboardingStatus,omitempty"`

	// OnboardingStatusIndicator Indicates interpretation of onboarding_status. Set by RMs only.
	OnboardingStatusIndicator *HostResourceOnboardingStatusIndicator `json:"onboardingStatusIndicator,omitempty"`

	// OnboardingStatusTimestamp UTC timestamp when onboarding_status was last changed. Set by RMs only.
	OnboardingStatusTimestamp *uint32 `json:"onboardingStatusTimestamp,omitempty"`

	// ProductName System Product Name.
	ProductName *string `json:"productName,omitempty"`

	// Provider A provider resource.
	Provider *ProviderResource `json:"provider,omitempty"`

	// RegistrationStatus textual message that describes the onboarding status of Host. Set by RMs only.
	RegistrationStatus *string `json:"registrationStatus,omitempty"`

	// RegistrationStatusIndicator Indicates interpretation of registration_status. Set by RMs only.
	RegistrationStatusIndicator *HostResourceRegistrationStatusIndicator `json:"registrationStatusIndicator,omitempty"`

	// RegistrationStatusTimestamp UTC timestamp when registration_status was last changed. Set by RMs only.
	RegistrationStatusTimestamp *uint32 `json:"registrationStatusTimestamp,omitempty"`

	// ResourceId Resource ID, generated on Create.
	ResourceId *string `json:"resourceId,omitempty"`

	// SerialNumber SMBIOS device serial number.
	SerialNumber *string `json:"serialNumber,omitempty"`

	// Site A site resource.
	Site *SiteResource `json:"site,omitempty"`

	// SiteId The site where the host is located.
	SiteId     *string     `json:"siteId,omitempty"`
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// Uuid The host UUID identifier; UUID is unique and immutable.
	Uuid *string `json:"uuid,omitempty"`
}

// HostResourceBmcKind Kind of BMC.
type HostResourceBmcKind string

// HostResourceCurrentPowerState Current power state of the host
type HostResourceCurrentPowerState string

// HostResourceCurrentState The current state of the Host.
type HostResourceCurrentState string

// HostResourceDesiredPowerState Desired power state of the host
type HostResourceDesiredPowerState string

// HostResourceDesiredState The desired state of the Host.
type HostResourceDesiredState string

// HostResourceHostStatusIndicator Indicates interpretation of host_status. Set by RMs only.
type HostResourceHostStatusIndicator string

// HostResourceOnboardingStatusIndicator Indicates interpretation of onboarding_status. Set by RMs only.
type HostResourceOnboardingStatusIndicator string

// HostResourceRegistrationStatusIndicator Indicates interpretation of registration_status. Set by RMs only.
type HostResourceRegistrationStatusIndicator string

// HostgpuResource The set of available host GPU cards.
type HostgpuResource struct {
	// Capabilities The features of this GPU device, comma separated.
	Capabilities *[]string `json:"capabilities,omitempty"`

	// Description The human-readable GPU device description.
	Description *string `json:"description,omitempty"`

	// DeviceName GPU name as reported by OS.
	DeviceName *string `json:"deviceName,omitempty"`

	// PciId The GPU device PCI identifier.
	PciId *string `json:"pciId,omitempty"`

	// Product The GPU device model.
	Product    *string     `json:"product,omitempty"`
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// Vendor The GPU device vendor.
	Vendor *string `json:"vendor,omitempty"`
}

// HostnicResource The set of available host interfaces.
type HostnicResource struct {
	// BmcInterface Whether this is a bmc interface or not.
	BmcInterface *bool `json:"bmcInterface,omitempty"`

	// DeviceName The device name (OS provided, like eth0, enp1s0, etc.).
	DeviceName *string `json:"deviceName,omitempty"`

	// Ipaddresses The interface's IP address list.
	Ipaddresses *[]IPAddressResource       `json:"ipaddresses,omitempty"`
	LinkState   *NetworkInterfaceLinkState `json:"linkState,omitempty"`

	// MacAddr The interface MAC address.
	MacAddr *string `json:"macAddr,omitempty"`

	// Mtu Maximum transmission unit of the interface.
	Mtu *uint32 `json:"mtu,omitempty"`

	// PciIdentifier PCI identifier string for this network interface.
	PciIdentifier *string `json:"pciIdentifier,omitempty"`

	// SriovEnabled If the interface has SRIOV enabled.
	SriovEnabled *bool `json:"sriovEnabled,omitempty"`

	// SriovVfsNum The number of VFs currently provisioned on the interface, if SR-IOV is supported.
	SriovVfsNum *uint32 `json:"sriovVfsNum,omitempty"`

	// SriovVfsTotal The maximum number of VFs the interface supports, if SR-IOV is supported.
	SriovVfsTotal *uint32     `json:"sriovVfsTotal,omitempty"`
	Timestamps    *Timestamps `json:"timestamps,omitempty"`
}

// HoststorageResource The set of available host storage capabilities.
type HoststorageResource struct {
	// CapacityBytes The storage device Capacity (size) in bytes.
	CapacityBytes *string `json:"capacityBytes,omitempty"`

	// DeviceName The storage device device name (OS provided, like sda, sdb, etc.)
	DeviceName *string `json:"deviceName,omitempty"`

	// Model The storage device model.
	Model *string `json:"model,omitempty"`

	// Serial The storage device unique serial number.
	Serial     *string     `json:"serial,omitempty"`
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// Vendor The Storage device vendor.
	Vendor *string `json:"vendor,omitempty"`

	// Wwid The storage device unique identifier.
	Wwid *string `json:"wwid,omitempty"`
}

// HostusbResource The set of host USB resources.
type HostusbResource struct {
	// Addr USB Device number assigned by OS.
	Addr *uint32 `json:"addr,omitempty"`

	// Bus Bus number of device connected with.
	Bus *uint32 `json:"bus,omitempty"`

	// Class class defined by USB-IF.
	Class *string `json:"class,omitempty"`

	// DeviceName the OS-provided device name.
	DeviceName *string `json:"deviceName,omitempty"`

	// IdProduct Hexadecimal number representing ID of the USB device product.
	IdProduct *string `json:"idProduct,omitempty"`

	// IdVendor Hexadecimal number representing ID of the USB device vendor.
	IdVendor *string `json:"idVendor,omitempty"`

	// Serial Serial number of device.
	Serial     *string     `json:"serial,omitempty"`
	Timestamps *Timestamps `json:"timestamps,omitempty"`
}

// IPAddressResource defines model for IPAddressResource.
type IPAddressResource struct {
	// Address CIDR representation of the IP address.
	Address *string `json:"address,omitempty"`

	// ConfigMethod Specifies how the IP address is configured.
	ConfigMethod *IPAddressResourceConfigMethod `json:"configMethod,omitempty"`

	// ResourceId Resource ID, generated by Inventory on Create
	ResourceId *string `json:"resourceId,omitempty"`

	// Status The status of the IP address.
	Status *IPAddressResourceStatus `json:"status,omitempty"`

	// StatusDetail User-friendly status to provide details about the resource state
	StatusDetail *string     `json:"statusDetail,omitempty"`
	Timestamps   *Timestamps `json:"timestamps,omitempty"`
}

// IPAddressResourceConfigMethod Specifies how the IP address is configured.
type IPAddressResourceConfigMethod string

// IPAddressResourceStatus The status of the IP address.
type IPAddressResourceStatus string

// InstanceResource InstanceResource describes an instantiated OS install, running on either a host or hypervisor.
type InstanceResource struct {
	// CurrentOs An OS resource.
	CurrentOs *OperatingSystemResource `json:"currentOs,omitempty"`

	// CurrentState The Instance current state.
	CurrentState *InstanceResourceCurrentState `json:"currentState,omitempty"`

	// DesiredOs An OS resource.
	DesiredOs *OperatingSystemResource `json:"desiredOs,omitempty"`

	// DesiredState The Instance desired state.
	DesiredState *InstanceResourceDesiredState `json:"desiredState,omitempty"`

	// Host A Host resource.
	Host *HostResource `json:"host,omitempty"`

	// HostID The host's unique identifier associated with the instance.
	HostID *string `json:"hostID,omitempty"`

	// InstanceID Deprecated, The instance's unique identifier. Alias of resourceID.
	InstanceID *string `json:"instanceID,omitempty"`

	// InstanceStatus textual message that describes the current instance status. Set by RMs only.
	InstanceStatus *string `json:"instanceStatus,omitempty"`

	// InstanceStatusIndicator Indicates interpretation of instance_status. Set by RMs only.
	InstanceStatusIndicator *InstanceResourceInstanceStatusIndicator `json:"instanceStatusIndicator,omitempty"`

	// InstanceStatusTimestamp UTC timestamp when instance_status was last changed. Set by RMs only.
	InstanceStatusTimestamp *uint32 `json:"instanceStatusTimestamp,omitempty"`

	// Kind Kind of resource. Frequently tied to Provider.
	Kind *InstanceResourceKind `json:"kind,omitempty"`

	// LocalAccountID The unique identifier of local account will be associated with the instance.
	LocalAccountID *string               `json:"localAccountID,omitempty"`
	Localaccount   *LocalAccountResource `json:"localaccount,omitempty"`

	// Name The instance's human-readable name.
	Name *string `json:"name,omitempty"`

	// Os An OS resource.
	Os *OperatingSystemResource `json:"os,omitempty"`

	// OsID The unique identifier of OS resource that must be installed on the instance.
	OsID *string `json:"osID,omitempty"`

	// ProvisioningStatus textual message that describes the provisioning status of Instance. Set by RMs only.
	ProvisioningStatus *string `json:"provisioningStatus,omitempty"`

	// ProvisioningStatusIndicator Indicates interpretation of provisioning_status. Set by RMs only.
	ProvisioningStatusIndicator *InstanceResourceProvisioningStatusIndicator `json:"provisioningStatusIndicator,omitempty"`

	// ProvisioningStatusTimestamp UTC timestamp when provisioning_status was last changed. Set by RMs only.
	ProvisioningStatusTimestamp *uint32 `json:"provisioningStatusTimestamp,omitempty"`

	// ResourceId Resource ID, generated on Create.
	ResourceId *string `json:"resourceId,omitempty"`

	// SecurityFeature Select to enable security features such as Secure Boot (SB) and Full Disk Encryption (FDE).
	SecurityFeature *InstanceResourceSecurityFeature `json:"securityFeature,omitempty"`
	Timestamps      *Timestamps                      `json:"timestamps,omitempty"`

	// TrustedAttestationStatus textual message that describes the trusted_attestation status of Instance. Set by RMs only.
	TrustedAttestationStatus *string `json:"trustedAttestationStatus,omitempty"`

	// TrustedAttestationStatusIndicator Indicates interpretation of trusted_attestation_status. Set by RMs only.
	TrustedAttestationStatusIndicator *InstanceResourceTrustedAttestationStatusIndicator `json:"trustedAttestationStatusIndicator,omitempty"`

	// TrustedAttestationStatusTimestamp UTC timestamp when trusted_attestation_status was last changed. Set by RMs only.
	TrustedAttestationStatusTimestamp *uint32 `json:"trustedAttestationStatusTimestamp,omitempty"`

	// UpdateStatus textual message that describes the update status of Instance. Set by RMs only.
	UpdateStatus *string `json:"updateStatus,omitempty"`

	// UpdateStatusDetail JSON field storing details of Instance update status. Set by RMs only. Beta, subject to change.
	UpdateStatusDetail *string `json:"updateStatusDetail,omitempty"`

	// UpdateStatusIndicator Indicates interpretation of update_status. Set by RMs only.
	UpdateStatusIndicator *InstanceResourceUpdateStatusIndicator `json:"updateStatusIndicator,omitempty"`

	// UpdateStatusTimestamp UTC timestamp when update_status was last changed. Set by RMs only.
	UpdateStatusTimestamp *uint32 `json:"updateStatusTimestamp,omitempty"`

	// WorkloadMembers The workload members associated with the instance.
	WorkloadMembers *[]WorkloadMember `json:"workloadMembers,omitempty"`
}

// InstanceResourceCurrentState The Instance current state.
type InstanceResourceCurrentState string

// InstanceResourceDesiredState The Instance desired state.
type InstanceResourceDesiredState string

// InstanceResourceInstanceStatusIndicator Indicates interpretation of instance_status. Set by RMs only.
type InstanceResourceInstanceStatusIndicator string

// InstanceResourceKind Kind of resource. Frequently tied to Provider.
type InstanceResourceKind string

// InstanceResourceProvisioningStatusIndicator Indicates interpretation of provisioning_status. Set by RMs only.
type InstanceResourceProvisioningStatusIndicator string

// InstanceResourceSecurityFeature Select to enable security features such as Secure Boot (SB) and Full Disk Encryption (FDE).
type InstanceResourceSecurityFeature string

// InstanceResourceTrustedAttestationStatusIndicator Indicates interpretation of trusted_attestation_status. Set by RMs only.
type InstanceResourceTrustedAttestationStatusIndicator string

// InstanceResourceUpdateStatusIndicator Indicates interpretation of update_status. Set by RMs only.
type InstanceResourceUpdateStatusIndicator string

// InvalidateHostResponse Response message for InvalidateHost.
type InvalidateHostResponse = map[string]interface{}

// InvalidateInstanceResponse Response message for Invalidate Instance.
type InvalidateInstanceResponse = map[string]interface{}

// ListHostsResponse Response message for the ListHosts method.
type ListHostsResponse struct {
	// HasNext Inform if there are more elements
	HasNext bool `json:"hasNext"`

	// Hosts Sorted and filtered list of hosts.
	Hosts []HostResource `json:"hosts"`

	// TotalElements Count of items in the entire list, regardless of pagination.
	TotalElements int32 `json:"totalElements"`
}

// ListInstancesResponse Response message for the ListInstances method.
type ListInstancesResponse struct {
	// HasNext Inform if there are more elements
	HasNext bool `json:"hasNext"`

	// Instances Sorted and filtered list of instances.
	Instances []InstanceResource `json:"instances"`

	// TotalElements Count of items in the entire list, regardless of pagination.
	TotalElements int32 `json:"totalElements"`
}

// ListLocalAccountsResponse Response message for the ListLocalAccounts method.
type ListLocalAccountsResponse struct {
	// HasNext Inform if there are more elements
	HasNext bool `json:"hasNext"`

	// LocalAccounts Sorted and filtered list of localaccounts.
	LocalAccounts []LocalAccountResource `json:"localAccounts"`

	// TotalElements Count of items in the entire list, regardless of pagination.
	TotalElements int32 `json:"totalElements"`
}

// ListLocationsResponse Response message for the ListLocations method.
type ListLocationsResponse struct {
	// Nodes Sorted and filtered list of regions.
	Nodes []ListLocationsResponseLocationNode `json:"nodes"`

	// OutputElements Amount of items in the returned list.
	OutputElements *int32 `json:"outputElements,omitempty"`

	// TotalElements Count of items in the entire list, regardless of pagination.
	TotalElements *int32 `json:"totalElements,omitempty"`
}

// ListLocationsResponseLocationNode A node in the location tree.
type ListLocationsResponseLocationNode struct {
	// Name The node human readable name.
	Name string `json:"name"`

	// ParentId The associated resource ID, of the parent resource of this Location node. In the case of a region, it could be empty or a regionId. In the case of a site, it could be empty or a regionId.
	ParentId string `json:"parentId"`

	// ResourceId The associated node resource ID, generated by inventory on Create.
	ResourceId string `json:"resourceId"`

	// Type The node type
	Type ListLocationsResponseLocationNodeType `json:"type"`
}

// ListLocationsResponseLocationNodeType The node type
type ListLocationsResponseLocationNodeType string

// ListOSUpdateRunResponse Response message for the ListOSUpdateRun method.
type ListOSUpdateRunResponse struct {
	// HasNext Inform if there are more elements
	HasNext bool `json:"hasNext"`

	// OsUpdatePolicies Sorted and filtered list of os update policies.
	OsUpdatePolicies []OSUpdateRun `json:"osUpdatePolicies"`

	// TotalElements Count of items in the entire list, regardless of pagination.
	TotalElements int32 `json:"totalElements"`
}

// ListOperatingSystemsResponse Response message for the ListOperatingSystems method.
type ListOperatingSystemsResponse struct {
	// OperatingSystemResources Sorted and filtered list of oss.
	OperatingSystemResources []OperatingSystemResource `json:"OperatingSystemResources"`

	// HasNext Inform if there are more elements
	HasNext bool `json:"hasNext"`

	// TotalElements Count of items in the entire list, regardless of pagination.
	TotalElements int32 `json:"totalElements"`
}

// ListProvidersResponse Response message for the ListProviders method.
type ListProvidersResponse struct {
	// HasNext Inform if there are more elements
	HasNext bool `json:"hasNext"`

	// Providers Sorted and filtered list of providers.
	Providers []ProviderResource `json:"providers"`

	// TotalElements Count of items in the entire list, regardless of pagination.
	TotalElements int32 `json:"totalElements"`
}

// ListRegionsResponse Response message for the ListRegions method.
type ListRegionsResponse struct {
	// HasNext Inform if there are more elements
	HasNext bool `json:"hasNext"`

	// Regions Sorted and filtered list of regions.
	Regions []RegionResource `json:"regions"`

	// TotalElements Count of items in the entire list, regardless of pagination.
	TotalElements int32 `json:"totalElements"`
}

// ListRepeatedSchedulesResponse Response message for the ListRepeatedSchedules method.
type ListRepeatedSchedulesResponse struct {
	// HasNext Inform if there are more elements
	HasNext bool `json:"hasNext"`

	// RepeatedSchedules Sorted and filtered list of repeated_schedules.
	RepeatedSchedules []RepeatedScheduleResource `json:"repeatedSchedules"`

	// TotalElements Count of items in the entire list, regardless of pagination.
	TotalElements int32 `json:"totalElements"`
}

// ListSchedulesResponse Response message for the ListSchedulesResponse method.
type ListSchedulesResponse struct {
	// HasNext Inform if there are more elements
	HasNext bool `json:"hasNext"`

	// RepeatedSchedules Sorted and filtered list of repeated_schedules.
	RepeatedSchedules []RepeatedScheduleResource `json:"repeatedSchedules"`

	// SingleSchedules Sorted and filtered list of single_schedules.
	SingleSchedules []SingleScheduleResource `json:"singleSchedules"`

	// TotalElements Count of items in the entire list, regardless of pagination.
	TotalElements int32 `json:"totalElements"`
}

// ListSingleSchedulesResponse Response message for the ListSingleSchedules method.
type ListSingleSchedulesResponse struct {
	// HasNext Inform if there are more elements
	HasNext bool `json:"hasNext"`

	// SingleSchedules Sorted and filtered list of single_schedules.
	SingleSchedules []SingleScheduleResource `json:"singleSchedules"`

	// TotalElements Count of items in the entire list, regardless of pagination.
	TotalElements int32 `json:"totalElements"`
}

// ListSitesResponse Response message for the ListSites method.
type ListSitesResponse struct {
	// HasNext Inform if there are more elements
	HasNext bool `json:"hasNext"`

	// Sites Sorted and filtered list of sites.
	Sites []SiteResource `json:"sites"`

	// TotalElements Count of items in the entire list, regardless of pagination.
	TotalElements int32 `json:"totalElements"`
}

// ListTelemetryLogsGroupsResponse Response message for the ListTelemetryLogsGroups method.
type ListTelemetryLogsGroupsResponse struct {
	// HasNext Inform if there are more elements
	HasNext bool `json:"hasNext"`

	// TelemetryLogsGroups Sorted and filtered list of telemetry_logs_groups.
	TelemetryLogsGroups []TelemetryLogsGroupResource `json:"telemetryLogsGroups"`

	// TotalElements Count of items in the entire list, regardless of pagination.
	TotalElements int32 `json:"totalElements"`
}

// ListTelemetryLogsProfilesResponse Response message for the ListTelemetryLogsProfiles method.
type ListTelemetryLogsProfilesResponse struct {
	// HasNext Inform if there are more elements
	HasNext bool `json:"hasNext"`

	// TelemetryLogsProfiles Sorted and filtered list of telemetry_logs_profiles.
	TelemetryLogsProfiles []TelemetryLogsProfileResource `json:"telemetryLogsProfiles"`

	// TotalElements Count of items in the entire list, regardless of pagination.
	TotalElements int32 `json:"totalElements"`
}

// ListTelemetryMetricsGroupsResponse Response message for the ListTelemetryMetricsGroups method.
type ListTelemetryMetricsGroupsResponse struct {
	// HasNext Inform if there are more elements
	HasNext bool `json:"hasNext"`

	// TelemetryMetricsGroups Sorted and filtered list of telemetry_metrics_groups.
	TelemetryMetricsGroups []TelemetryMetricsGroupResource `json:"telemetryMetricsGroups"`

	// TotalElements Count of items in the entire list, regardless of pagination.
	TotalElements int32 `json:"totalElements"`
}

// ListTelemetryMetricsProfilesResponse Response message for the ListTelemetryMetricsProfiles method.
type ListTelemetryMetricsProfilesResponse struct {
	// HasNext Inform if there are more elements
	HasNext bool `json:"hasNext"`

	// TelemetryMetricsProfiles Sorted and filtered list of telemetry_metrics_profiles.
	TelemetryMetricsProfiles []TelemetryMetricsProfileResource `json:"telemetryMetricsProfiles"`

	// TotalElements Count of items in the entire list, regardless of pagination.
	TotalElements int32 `json:"totalElements"`
}

// ListWorkloadMembersResponse Response message for the ListWorkloadMembers method.
type ListWorkloadMembersResponse struct {
	// HasNext Inform if there are more elements
	HasNext bool `json:"hasNext"`

	// TotalElements Count of items in the entire list, regardless of pagination.
	TotalElements int32 `json:"totalElements"`

	// WorkloadMembers Sorted and filtered list of workload_members.
	WorkloadMembers []WorkloadMember `json:"workloadMembers"`
}

// ListWorkloadsResponse Response message for the ListWorkloads method.
type ListWorkloadsResponse struct {
	// HasNext Inform if there are more elements
	HasNext bool `json:"hasNext"`

	// TotalElements Count of items in the entire list, regardless of pagination.
	TotalElements int32 `json:"totalElements"`

	// Workloads Sorted and filtered list of workloads.
	Workloads []WorkloadResource `json:"workloads"`
}

// LocalAccountResource defines model for LocalAccountResource.
type LocalAccountResource struct {
	// LocalAccountID Deprecated, The local account resource's unique identifier. Alias of resourceId.
	LocalAccountID *string `json:"localAccountID,omitempty"`

	// ResourceId resource identifier
	ResourceId *string `json:"resourceId,omitempty"`

	// SshKey SSH Public Key of EN
	SshKey     string      `json:"sshKey"`
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// Username Username provided by admin
	Username string `json:"username"`
}

// MetadataItem A metadata item, represented by a key:value pair.
type MetadataItem struct {
	// Key The metadata key.
	Key string `json:"key"`

	// Value The metadata value.
	Value string `json:"value"`
}

// NetworkInterfaceLinkState defines model for NetworkInterfaceLinkState.
type NetworkInterfaceLinkState struct {
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// Type The interface link state.
	Type *NetworkInterfaceLinkStateType `json:"type,omitempty"`
}

// NetworkInterfaceLinkStateType The interface link state.
type NetworkInterfaceLinkStateType string

// OSUpdatePolicy OSUpdatePolicy message is added temporarily now for OSUpdateRun message addition compilation should go through. It will be deleted later on before merging to main in git repo.
type OSUpdatePolicy struct {
	// Description User-provided, human-readable description.
	Description *string `json:"description,omitempty"`

	// Name User-provided, human-readable name.
	Name string `json:"name"`

	// ResourceId resource ID, generated by the inventory on Create.
	ResourceId *string `json:"resourceId,omitempty"`
}

// OSUpdateRun defines model for OSUpdateRun.
type OSUpdateRun struct {
	// AppliedPolicy OSUpdatePolicy message is added temporarily now for OSUpdateRun message addition compilation should go through. It will be deleted later on before merging to main in git repo.
	AppliedPolicy *OSUpdatePolicy `json:"appliedPolicy,omitempty"`

	// Description Human-readable description.
	Description *string `json:"description,omitempty"`

	// EndTime UTC timestamp of OS Update ended.
	EndTime *uint32 `json:"endTime,omitempty"`

	// Name Human-readable name.
	Name *string `json:"name,omitempty"`

	// ResourceId resource ID, generated by the inventory on Create.
	ResourceId *string `json:"resourceId,omitempty"`

	// StartTime UTC timestamp of OS Update started.
	StartTime *uint32 `json:"startTime,omitempty"`

	// Status textual short message that describes the OS Update Status.
	Status *string `json:"status,omitempty"`

	// StatusDetails textual long message that describes the OS Update Status.
	StatusDetails *string `json:"statusDetails,omitempty"`

	// StatusIndicator Status Indicator for the OS update run. This field is used to determine the status type for the OS update Run. STATUS_INDICATION_ERROR: Update failed in error Indicator STATUS_INDICATION_IN_PROGRESS: Update in progress Indicator  STATUS_INDICATION_IDLE: Update completed successfully Indicator
	StatusIndicator *OSUpdateRunStatusIndicator `json:"statusIndicator,omitempty"`

	// StatusTimestamp UTC timestamp of OS Update status reported.
	StatusTimestamp *uint32 `json:"statusTimestamp,omitempty"`
}

// OSUpdateRunStatusIndicator Status Indicator for the OS update run. This field is used to determine the status type for the OS update Run. STATUS_INDICATION_ERROR: Update failed in error Indicator STATUS_INDICATION_IN_PROGRESS: Update in progress Indicator  STATUS_INDICATION_IDLE: Update completed successfully Indicator
type OSUpdateRunStatusIndicator string

// OnboardHostResponse Response of a Host Register request.
type OnboardHostResponse = map[string]interface{}

// OperatingSystemResource An OS resource.
type OperatingSystemResource struct {
	// Architecture The OS resource's CPU architecture.
	Architecture *string `json:"architecture,omitempty"`
	Description  *string `json:"description,omitempty"`

	// ImageId A unique identifier of the OS image that can be retrieved from the running OS.
	ImageId *string `json:"imageId,omitempty"`

	// ImageUrl The URL repository of the OS image.
	ImageUrl *string `json:"imageUrl,omitempty"`

	// InstalledPackages Freeform text, OS-dependent. A list of package names, one per line (newline separated). Must not contain version information.
	InstalledPackages *string `json:"installedPackages,omitempty"`

	// KernelCommand The OS resource's kernel Command Line Options.
	KernelCommand *string `json:"kernelCommand,omitempty"`

	// Name The OS resource's name.
	Name *string `json:"name,omitempty"`

	// OsProvider Indicating the provider of OS (e.g., Infra or Lenovo).
	OsProvider *OperatingSystemResourceOsProvider `json:"osProvider,omitempty"`

	// OsResourceID Deprecated, The OS resource's unique identifier. Alias of resourceId.
	OsResourceID *string `json:"osResourceID,omitempty"`

	// OsType Indicating the type of OS (for example, mutable or immutable).
	OsType *OperatingSystemResourceOsType `json:"osType,omitempty"`

	// PlatformBundle Opaque JSON field storing references to custom installation script(s) that supplements the base OS with additional OS-level dependencies/configurations.  If empty, the default OS installation will be used.
	PlatformBundle *string `json:"platformBundle,omitempty"`

	// ProfileName Name of an OS profile that the OS resource belongs to. Uniquely identifies a family of OS resources.
	ProfileName *string `json:"profileName,omitempty"`

	// ProfileVersion Version of OS profile that the OS resource belongs to.
	ProfileVersion *string `json:"profileVersion,omitempty"`

	// RepoUrl Deprecated. OS image URL. URL of the original installation source.
	RepoUrl *string `json:"repoUrl,omitempty"`

	// ResourceId Resource ID, generated by inventory on Create.
	ResourceId *string `json:"resourceId,omitempty"`

	// SecurityFeature Indicating if this OS is capable of supporting features like Secure Boot (SB) and Full Disk Encryption (FDE). Immutable after creation.
	SecurityFeature *OperatingSystemResourceSecurityFeature `json:"securityFeature,omitempty"`

	// Sha256 SHA256 checksum of the OS resource in hexadecimal representation.
	Sha256     string      `json:"sha256"`
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// UpdateSources The list of OS resource update sources. Should be in 'DEB822 Source Format' for Debian style OSs
	UpdateSources []string `json:"updateSources"`
}

// OperatingSystemResourceOsProvider Indicating the provider of OS (e.g., Infra or Lenovo).
type OperatingSystemResourceOsProvider string

// OperatingSystemResourceOsType Indicating the type of OS (for example, mutable or immutable).
type OperatingSystemResourceOsType string

// OperatingSystemResourceSecurityFeature Indicating if this OS is capable of supporting features like Secure Boot (SB) and Full Disk Encryption (FDE). Immutable after creation.
type OperatingSystemResourceSecurityFeature string

// ProviderResource A provider resource.
type ProviderResource struct {
	// ApiCredentials The provider resource's list of credentials.
	ApiCredentials *[]string `json:"apiCredentials,omitempty"`

	// ApiEndpoint The provider resource's API endpoint.
	ApiEndpoint string `json:"apiEndpoint"`

	// Config Opaque provider configuration.
	Config *string `json:"config,omitempty"`

	// Name The provider resource's name.
	Name string `json:"name"`

	// ProviderID Deprecated, The provider resource's unique identifier. Alias of resourceId.
	ProviderID *string `json:"providerID,omitempty"`

	// ProviderKind The provider kind.
	ProviderKind ProviderResourceProviderKind `json:"providerKind"`

	// ProviderVendor The provider vendor.
	ProviderVendor *ProviderResourceProviderVendor `json:"providerVendor,omitempty"`

	// ResourceId Resource ID, generated by the inventory on Create.
	ResourceId *string     `json:"resourceId,omitempty"`
	Timestamps *Timestamps `json:"timestamps,omitempty"`
}

// ProviderResourceProviderKind The provider kind.
type ProviderResourceProviderKind string

// ProviderResourceProviderVendor The provider vendor.
type ProviderResourceProviderVendor string

// RegionResource A region resource.
type RegionResource struct {
	// InheritedMetadata The rendered metadata from the Region parent(s) that can be inherited by the Region, represented by a list of key:value pairs. This field can not be used in filter.
	InheritedMetadata *[]MetadataItem `json:"inheritedMetadata,omitempty"`

	// Metadata The metadata associated to the Region, represented by a list of key:value pairs.
	Metadata *[]MetadataItem `json:"metadata,omitempty"`

	// Name The user-provided, human-readable name of region
	Name *string `json:"name,omitempty"`

	// ParentId The parent Region unique identifier that the region is associated to, when existent. This field can not be used in filter.
	ParentId *string `json:"parentId,omitempty"`

	// ParentRegion A region resource.
	ParentRegion *RegionResource `json:"parentRegion,omitempty"`

	// RegionID Deprecated, The Region unique identifier. Alias of resourceId.
	RegionID *string `json:"regionID,omitempty"`

	// ResourceId resource ID, generated by the inventory on Create.
	ResourceId *string     `json:"resourceId,omitempty"`
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// TotalSites The total number of sites in the region.
	TotalSites *int32 `json:"totalSites,omitempty"`
}

// RepeatedScheduleResource A repeated-schedule resource.
type RepeatedScheduleResource struct {
	// CronDayMonth cron style day of month (1-31), it can be empty only when used in a Filter
	CronDayMonth string `json:"cronDayMonth"`

	// CronDayWeek cron style day of week (0-6), it can be empty only when used in a Filter
	CronDayWeek string `json:"cronDayWeek"`

	// CronHours cron style hours (0-23), it can be empty only when used in a Filter
	CronHours string `json:"cronHours"`

	// CronMinutes cron style minutes (0-59), it can be empty only when used in a Filter.
	CronMinutes string `json:"cronMinutes"`

	// CronMonth cron style month (1-12), it can be empty only when used in a Filter
	CronMonth string `json:"cronMonth"`

	// DurationSeconds The duration in seconds of the repeated schedule, per schedule.
	DurationSeconds int32 `json:"durationSeconds"`

	// Name The schedule's name.
	Name *string `json:"name,omitempty"`

	// RepeatedScheduleID Deprecated, The repeated schedule's unique identifier. Alias of resourceId.
	RepeatedScheduleID *string `json:"repeatedScheduleID,omitempty"`

	// ResourceId Resource ID, generated by the inventory on Create.
	ResourceId *string `json:"resourceId,omitempty"`

	// ScheduleStatus The schedule status.
	ScheduleStatus RepeatedScheduleResourceScheduleStatus `json:"scheduleStatus"`

	// TargetHost A Host resource.
	TargetHost *HostResource `json:"targetHost,omitempty"`

	// TargetHostId The target region ID of the schedule. Only one target can be provided per schedule. This field cannot be used as filter.
	TargetHostId *string `json:"targetHostId,omitempty"`

	// TargetRegion A region resource.
	TargetRegion *RegionResource `json:"targetRegion,omitempty"`

	// TargetRegionId The target region ID of the schedule. Only one target can be provided per schedule. This field cannot be used as filter.
	TargetRegionId *string `json:"targetRegionId,omitempty"`

	// TargetSite A site resource.
	TargetSite *SiteResource `json:"targetSite,omitempty"`

	// TargetSiteId The target site ID of the schedule. Only one target can be provided per schedule. This field cannot be used as filter.
	TargetSiteId *string     `json:"targetSiteId,omitempty"`
	Timestamps   *Timestamps `json:"timestamps,omitempty"`
}

// RepeatedScheduleResourceScheduleStatus The schedule status.
type RepeatedScheduleResourceScheduleStatus string

// SingleScheduleResource A single schedule resource.
type SingleScheduleResource struct {
	// EndSeconds The end time in seconds, of the single schedule. The value of endSeconds must be equal to or bigger than the value of startSeconds.
	EndSeconds *uint32 `json:"endSeconds,omitempty"`

	// Name The schedule's name.
	Name *string `json:"name,omitempty"`

	// ResourceId Resource ID, generated by the inventory on Create.
	ResourceId *string `json:"resourceId,omitempty"`

	// ScheduleStatus The schedule status.
	ScheduleStatus SingleScheduleResourceScheduleStatus `json:"scheduleStatus"`

	// SingleScheduleID Deprecated, The single schedule resource's unique identifier. Alias of resourceId.
	SingleScheduleID *string `json:"singleScheduleID,omitempty"`

	// StartSeconds The start time in seconds, of the single schedule.
	StartSeconds uint32 `json:"startSeconds"`

	// TargetHost A Host resource.
	TargetHost *HostResource `json:"targetHost,omitempty"`

	// TargetHostId The target host ID of the schedule. Only one target can be provided per schedule. This field cannot be used as filter.
	TargetHostId *string `json:"targetHostId,omitempty"`

	// TargetRegion A region resource.
	TargetRegion *RegionResource `json:"targetRegion,omitempty"`

	// TargetRegionId The target region ID of the schedule. Only one target can be provided per schedule. This field cannot be used as filter.
	TargetRegionId *string `json:"targetRegionId,omitempty"`

	// TargetSite A site resource.
	TargetSite *SiteResource `json:"targetSite,omitempty"`

	// TargetSiteId The target site ID of the schedule. Only one target can be provided per schedule. This field cannot be used as filter.
	TargetSiteId *string     `json:"targetSiteId,omitempty"`
	Timestamps   *Timestamps `json:"timestamps,omitempty"`
}

// SingleScheduleResourceScheduleStatus The schedule status.
type SingleScheduleResourceScheduleStatus string

// SiteResource A site resource.
type SiteResource struct {
	// InheritedMetadata The rendered metadata from the Region parent(s) that can be inherited by the Region, represented by a list of key:value pairs. This field can not be used in filter.
	InheritedMetadata *[]MetadataItem `json:"inheritedMetadata,omitempty"`

	// Metadata The metadata associated to the Region, represented by a list of key:value pairs.
	Metadata *[]MetadataItem `json:"metadata,omitempty"`

	// Name The site's human-readable name.
	Name *string `json:"name,omitempty"`

	// Provider A provider resource.
	Provider *ProviderResource `json:"provider,omitempty"`

	// Region A region resource.
	Region *RegionResource `json:"region,omitempty"`

	// RegionId The region's unique identifier that the site is associated to. This field cannot be used in filter.
	RegionId *string `json:"regionId,omitempty"`

	// ResourceId resource ID, generated by the inventory on Create.
	ResourceId *string `json:"resourceId,omitempty"`

	// SiteID Deprecated, The site unique identifier. Alias of resourceId.
	SiteID *string `json:"siteID,omitempty"`

	// SiteLat The geolocation latitude of the site. Points are represented as latitude-longitude pairs in the E7 representation (degrees are multiplied by 10**7 and rounded to the nearest integer). siteLat must be in the range of +/- 90 degrees.
	SiteLat *int32 `json:"siteLat,omitempty"`

	// SiteLng The geolocation longitude of the site. Points are represented as latitude-longitude pairs in the E7 representation (degrees are multiplied by 10**7 and rounded to the nearest integer). siteLng must be in the range of +/- 180 degrees (inclusive).
	SiteLng    *int32      `json:"siteLng,omitempty"`
	Timestamps *Timestamps `json:"timestamps,omitempty"`
}

// Status The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
type Status struct {
	// Code The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
	Code *int32 `json:"code,omitempty"`

	// Details A list of messages that carry the error details.  There is a common set of message types for APIs to use.
	Details *[]GoogleProtobufAny `json:"details,omitempty"`

	// Message A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
	Message *string `json:"message,omitempty"`
}

// TelemetryLogsGroupResource TelemetryLogsGroupResource.
type TelemetryLogsGroupResource struct {
	// CollectorKind The collector kind.
	CollectorKind TelemetryLogsGroupResourceCollectorKind `json:"collectorKind"`

	// Groups A list of log groups to collect.
	Groups []string `json:"groups"`

	// Name Human-readable name for the log group.
	Name string `json:"name"`

	// ResourceId Unique ID of the telemetry group.
	ResourceId *string `json:"resourceId,omitempty"`

	// TelemetryLogsGroupId Deprecated, Unique ID of the telemetry group. Alias of resource_id.
	TelemetryLogsGroupId *string     `json:"telemetryLogsGroupId,omitempty"`
	Timestamps           *Timestamps `json:"timestamps,omitempty"`
}

// TelemetryLogsGroupResourceCollectorKind The collector kind.
type TelemetryLogsGroupResourceCollectorKind string

// TelemetryLogsProfileResource A telemetry log profile for a hierarchy object.
type TelemetryLogsProfileResource struct {
	// LogLevel The log level og the telemetry profile.
	LogLevel TelemetryLogsProfileResourceLogLevel `json:"logLevel"`

	// LogsGroup TelemetryLogsGroupResource.
	LogsGroup *TelemetryLogsGroupResource `json:"logsGroup,omitempty"`

	// LogsGroupId The unique identifier of the telemetry log group.
	LogsGroupId string `json:"logsGroupId"`

	// ProfileId Deprecated, The ID of the telemetry profile.
	ProfileId *string `json:"profileId,omitempty"`

	// ResourceId The ID of the telemetry profile.
	ResourceId *string `json:"resourceId,omitempty"`

	// TargetInstance The ID of the instance that the telemetry profile is assigned to. Can only be one of targetInstance, targetSite, or targetRegion.
	TargetInstance *string `json:"targetInstance,omitempty"`

	// TargetRegion The ID of the region where the telemetry profile is assigned to. Can only be one of targetInstance, targetSite, or targetRegion.
	TargetRegion *string `json:"targetRegion,omitempty"`

	// TargetSite The ID of the site where the telemetry profile is assigned to. Can only be one of targetInstance, targetSite, or targetRegion.
	TargetSite *string     `json:"targetSite,omitempty"`
	Timestamps *Timestamps `json:"timestamps,omitempty"`
}

// TelemetryLogsProfileResourceLogLevel The log level og the telemetry profile.
type TelemetryLogsProfileResourceLogLevel string

// TelemetryMetricsGroupResource TelemetryMetricsGroupResource.
type TelemetryMetricsGroupResource struct {
	// CollectorKind The collector kind.
	CollectorKind TelemetryMetricsGroupResourceCollectorKind `json:"collectorKind"`

	// Groups A list of log groups to collect.
	Groups []string `json:"groups"`

	// Name Human-readable name for the log group.
	Name string `json:"name"`

	// ResourceId Unique ID of the telemetry group.
	ResourceId *string `json:"resourceId,omitempty"`

	// TelemetryMetricsGroupId Deprecated, Unique ID of the telemetry group. Alias of resource_id.
	TelemetryMetricsGroupId *string     `json:"telemetryMetricsGroupId,omitempty"`
	Timestamps              *Timestamps `json:"timestamps,omitempty"`
}

// TelemetryMetricsGroupResourceCollectorKind The collector kind.
type TelemetryMetricsGroupResourceCollectorKind string

// TelemetryMetricsProfileResource A telemetry metric profile for a hierarchy object.
type TelemetryMetricsProfileResource struct {
	// MetricsGroup TelemetryMetricsGroupResource.
	MetricsGroup *TelemetryMetricsGroupResource `json:"metricsGroup,omitempty"`

	// MetricsGroupId The unique identifier of the telemetry metric group.
	MetricsGroupId string `json:"metricsGroupId"`

	// MetricsInterval Metric interval (in seconds) for the telemetry profile. This field must only be defined if the type equals to TELEMETRY_CONFIG_KIND_METRICS.
	MetricsInterval int32 `json:"metricsInterval"`

	// ProfileId Deprecated, The ID of the telemetry profile.
	ProfileId *string `json:"profileId,omitempty"`

	// ResourceId The ID of the telemetry profile.
	ResourceId *string `json:"resourceId,omitempty"`

	// TargetInstance The ID of the instance that the telemetry profile is assigned to. Can only be one of targetInstance, targetSite, or targetRegion.
	TargetInstance *string `json:"targetInstance,omitempty"`

	// TargetRegion The ID of the region where the telemetry profile is assigned to. Can only be one of targetInstance, targetSite, or targetRegion.
	TargetRegion *string `json:"targetRegion,omitempty"`

	// TargetSite The ID of the site where the telemetry profile is assigned to. Can only be one of targetInstance, targetSite, or targetRegion.
	TargetSite *string     `json:"targetSite,omitempty"`
	Timestamps *Timestamps `json:"timestamps,omitempty"`
}

// Timestamps defines model for Timestamps.
type Timestamps struct {
	// CreatedAt The time when the resource was created.
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// UpdatedAt The time when the resource was last updated.
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// WorkloadMember Intermediate resource to represent a relation between a workload and a compute resource (i.e., instance).
type WorkloadMember struct {
	// Instance InstanceResource describes an instantiated OS install, running on either a host or hypervisor.
	Instance *InstanceResource `json:"instance,omitempty"`

	// InstanceId The unique identifier of the instance.
	InstanceId *string `json:"instanceId,omitempty"`

	// Kind The kind of the workload member.
	Kind WorkloadMemberKind `json:"kind"`

	// Member InstanceResource describes an instantiated OS install, running on either a host or hypervisor.
	Member *InstanceResource `json:"member,omitempty"`

	// ResourceId Resource ID, generated by the inventory on Create.
	ResourceId *string     `json:"resourceId,omitempty"`
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// Workload A generic way to group compute resources to obtain a workload.
	Workload *WorkloadResource `json:"workload,omitempty"`

	// WorkloadId The workload unique identifier.
	WorkloadId *string `json:"workloadId,omitempty"`

	// WorkloadMemberId Deprecated, The workload unique identifier. Alias of resourceId.
	WorkloadMemberId *string `json:"workloadMemberId,omitempty"`
}

// WorkloadMemberKind The kind of the workload member.
type WorkloadMemberKind string

// WorkloadResource A generic way to group compute resources to obtain a workload.
type WorkloadResource struct {
	// ExternalId The ID of the external resource, used to link to resources outside the realm of Edge Infrastructure Manager.
	ExternalId *string `json:"externalId,omitempty"`

	// Kind Type of workload.
	Kind WorkloadResourceKind `json:"kind"`

	// Members The members of the workload.
	Members *[]WorkloadMember `json:"members,omitempty"`

	// Name Human-readable name for the workload.
	Name *string `json:"name,omitempty"`

	// ResourceId resource ID, generated by the inventory on Create.
	ResourceId *string `json:"resourceId,omitempty"`

	// Status Human-readable status of the workload.
	Status     *string     `json:"status,omitempty"`
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// WorkloadId Deprecated, The workload unique identifier. Alias of resourceId.
	WorkloadId *string `json:"workloadId,omitempty"`
}

// WorkloadResourceKind Type of workload.
type WorkloadResourceKind string

// HostServiceListHostsParams defines parameters for HostServiceListHosts.
type HostServiceListHostsParams struct {
	// OrderBy Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// Filter Optional filter to return only item of interest. See https://google.aip.dev/160 for details.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page. Default of 20.
	PageSize *int32 `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Offset Index of the first item to return. This allows skipping items.
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`
}

// HostServiceRegisterHostParams defines parameters for HostServiceRegisterHost.
type HostServiceRegisterHostParams struct {
	ResourceId *string `form:"resourceId,omitempty" json:"resourceId,omitempty"`
}

// HostServicePatchHostParams defines parameters for HostServicePatchHost.
type HostServicePatchHostParams struct {
	// FieldMask Field mask to be applied on the patch of host.
	FieldMask *string `form:"fieldMask,omitempty" json:"fieldMask,omitempty"`
}

// HostServiceInvalidateHostParams defines parameters for HostServiceInvalidateHost.
type HostServiceInvalidateHostParams struct {
	Note *string `form:"note,omitempty" json:"note,omitempty"`
}

// HostServiceGetHostsSummaryParams defines parameters for HostServiceGetHostsSummary.
type HostServiceGetHostsSummaryParams struct {
	// Filter Optional filter to return only item of interest. See https://google.aip.dev/160 for details.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`
}

// InstanceServiceListInstancesParams defines parameters for InstanceServiceListInstances.
type InstanceServiceListInstancesParams struct {
	// OrderBy Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// Filter Optional filter to return only item of interest. See https://google.aip.dev/160 for details.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page. Default of 20.
	PageSize *int32 `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Offset Index of the first item to return. This allows skipping items.
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`
}

// InstanceServicePatchInstanceParams defines parameters for InstanceServicePatchInstance.
type InstanceServicePatchInstanceParams struct {
	// FieldMask Field mask to be applied on the patch of instance.
	FieldMask *string `form:"fieldMask,omitempty" json:"fieldMask,omitempty"`
}

// LocalAccountServiceListLocalAccountsParams defines parameters for LocalAccountServiceListLocalAccounts.
type LocalAccountServiceListLocalAccountsParams struct {
	// OrderBy Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// Filter Optional filter to return only item of interest. See https://google.aip.dev/160 for details.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page. Default of 20.
	PageSize *int32 `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Offset Index of the first item to return. This allows skipping items.
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`
}

// LocationServiceListLocationsParams defines parameters for LocationServiceListLocations.
type LocationServiceListLocationsParams struct {
	// Name Filter locations by name
	Name *string `form:"name,omitempty" json:"name,omitempty"`

	// ShowSites Return site locations
	ShowSites *bool `form:"showSites,omitempty" json:"showSites,omitempty"`

	// ShowRegions Return region locations
	ShowRegions *bool `form:"showRegions,omitempty" json:"showRegions,omitempty"`
}

// OperatingSystemServiceListOperatingSystemsParams defines parameters for OperatingSystemServiceListOperatingSystems.
type OperatingSystemServiceListOperatingSystemsParams struct {
	// OrderBy Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// Filter Optional filter to return only item of interest. See https://google.aip.dev/160 for details.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page. Default of 20.
	PageSize *int32 `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Offset Index of the first item to return. This allows skipping items.
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`
}

// OperatingSystemServicePatchOperatingSystemParams defines parameters for OperatingSystemServicePatchOperatingSystem.
type OperatingSystemServicePatchOperatingSystemParams struct {
	// FieldMask Field mask to be applied on the patch of os.
	FieldMask *string `form:"fieldMask,omitempty" json:"fieldMask,omitempty"`
}

// OSUpdateRunListOSUpdateRunParams defines parameters for OSUpdateRunListOSUpdateRun.
type OSUpdateRunListOSUpdateRunParams struct {
	// OrderBy Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// Filter Optional filter to return only item of interest. See https://google.aip.dev/160 for details.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page. Default of 20.
	PageSize *uint32 `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Offset Index of the first item to return. This allows skipping items.
	Offset *uint32 `form:"offset,omitempty" json:"offset,omitempty"`
}

// ProviderServiceListProvidersParams defines parameters for ProviderServiceListProviders.
type ProviderServiceListProvidersParams struct {
	// OrderBy Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// Filter Optional filter to return only item of interest. See https://google.aip.dev/160 for details.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page. Default of 20.
	PageSize *int32 `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Offset Index of the first item to return. This allows skipping items.
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`
}

// RegionServiceListRegionsParams defines parameters for RegionServiceListRegions.
type RegionServiceListRegionsParams struct {
	// OrderBy Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// Filter Optional filter to return only item of interest. See https://google.aip.dev/160 for details.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page. Default of 20.
	PageSize *int32 `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Offset Index of the first item to return. This allows skipping items.
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`

	// ShowTotalSites Flag to signal if the total amount of site in a region should be returned.
	ShowTotalSites *bool `form:"showTotalSites,omitempty" json:"showTotalSites,omitempty"`
}

// RegionServicePatchRegionParams defines parameters for RegionServicePatchRegion.
type RegionServicePatchRegionParams struct {
	// FieldMask Field mask to be applied on the patch of region.
	FieldMask *string `form:"fieldMask,omitempty" json:"fieldMask,omitempty"`
}

// ScheduleServiceListSchedulesParams defines parameters for ScheduleServiceListSchedules.
type ScheduleServiceListSchedulesParams struct {
	// PageSize Defines the amount of items to be contained in a single page. Default of 20.
	PageSize *int32 `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Offset Index of the first item to return. This allows skipping items.
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`

	// HostId The host ID target of the schedules. If not specified, returns all schedules (given the other query params). If specified, returns the schedules that have the specified host ID applied to them, i.e., target including the inherited ones (parent site if not null). If null, returns all the schedules without a host ID as target.
	HostId *string `form:"hostId,omitempty" json:"hostId,omitempty"`

	// SiteId The site ID target of the schedules. If not specified, returns all schedules (given the other query params). If specified, returns the schedules that have the specified site ID applied to them, i.e., target including the inherited ones. If null, returns all the schedules without a site ID as target
	SiteId *string `form:"siteId,omitempty" json:"siteId,omitempty"`

	// RegionId The region ID target of the schedules. If not specified, returns all schedules (given the other query params). If specified, returns the schedules that have the specified region ID applied to them, i.e., target including the inherited ones (parent region if not null). If null, returns all the schedules without a region ID as target.
	RegionId *string `form:"regionId,omitempty" json:"regionId,omitempty"`

	// UnixEpoch Filter based on the timestamp, expected to be UNIX epoch UTC timestamp in seconds.
	UnixEpoch *string `form:"unixEpoch,omitempty" json:"unixEpoch,omitempty"`
}

// ScheduleServiceListRepeatedSchedulesParams defines parameters for ScheduleServiceListRepeatedSchedules.
type ScheduleServiceListRepeatedSchedulesParams struct {
	// PageSize Defines the amount of items to be contained in a single page. Default of 20.
	PageSize *int32 `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Offset Index of the first item to return. This allows skipping items.
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`

	// HostId The host ID target of the schedules. If not specified, returns all schedules (given the other query params). If specified, returns the schedules that have the specified host ID applied to them, i.e., target including the inherited ones (parent site if not null). If null, returns all the schedules without a host ID as target.
	HostId *string `form:"hostId,omitempty" json:"hostId,omitempty"`

	// SiteId The site ID target of the schedules. If not specified, returns all schedules (given the other query params). If specified, returns the schedules that have the specified site ID applied to them, i.e., target including the inherited ones. If null, returns all the schedules without a site ID as target
	SiteId *string `form:"siteId,omitempty" json:"siteId,omitempty"`

	// RegionId The region ID target of the schedules. If not specified, returns all schedules (given the other query params). If specified, returns the schedules that have the specified region ID applied to them, i.e., target including the inherited ones (parent region if not null). If null, returns all the schedules without a region ID as target.
	RegionId *string `form:"regionId,omitempty" json:"regionId,omitempty"`

	// UnixEpoch Filter based on the timestamp, expected to be UNIX epoch UTC timestamp in seconds.
	UnixEpoch *string `form:"unixEpoch,omitempty" json:"unixEpoch,omitempty"`
}

// ScheduleServicePatchRepeatedScheduleParams defines parameters for ScheduleServicePatchRepeatedSchedule.
type ScheduleServicePatchRepeatedScheduleParams struct {
	// FieldMask Field mask to be applied on the patch of repeated_schedule.
	FieldMask *string `form:"fieldMask,omitempty" json:"fieldMask,omitempty"`
}

// ScheduleServiceListSingleSchedulesParams defines parameters for ScheduleServiceListSingleSchedules.
type ScheduleServiceListSingleSchedulesParams struct {
	// PageSize Defines the amount of items to be contained in a single page. Default of 20.
	PageSize *int32 `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Offset Index of the first item to return. This allows skipping items.
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`

	// HostId The host ID target of the schedules. If not specified, returns all schedules (given the other query params). If specified, returns the schedules that have the specified host ID applied to them, i.e., target including the inherited ones (parent site if not null). If null, returns all the schedules without a host ID as target.
	HostId *string `form:"hostId,omitempty" json:"hostId,omitempty"`

	// SiteId The site ID target of the schedules. If not specified, returns all schedules (given the other query params). If specified, returns the schedules that have the specified site ID applied to them, i.e., target including the inherited ones. If null, returns all the schedules without a site ID as target
	SiteId *string `form:"siteId,omitempty" json:"siteId,omitempty"`

	// RegionId The region ID target of the schedules. If not specified, returns all schedules (given the other query params). If specified, returns the schedules that have the specified region ID applied to them, i.e., target including the inherited ones (parent region if not null). If null, returns all the schedules without a region ID as target.
	RegionId *string `form:"regionId,omitempty" json:"regionId,omitempty"`

	// UnixEpoch Filter based on the timestamp, expected to be UNIX epoch UTC timestamp in seconds.
	UnixEpoch *string `form:"unixEpoch,omitempty" json:"unixEpoch,omitempty"`
}

// ScheduleServicePatchSingleScheduleParams defines parameters for ScheduleServicePatchSingleSchedule.
type ScheduleServicePatchSingleScheduleParams struct {
	// FieldMask Field mask to be applied on the patch of single_schedule.
	FieldMask *string `form:"fieldMask,omitempty" json:"fieldMask,omitempty"`
}

// SiteServiceListSitesParams defines parameters for SiteServiceListSites.
type SiteServiceListSitesParams struct {
	// OrderBy Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// Filter Optional filter to return only item of interest. See https://google.aip.dev/160 for details.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page. Default of 20.
	PageSize *int32 `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Offset Index of the first item to return. This allows skipping items.
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`
}

// SiteServicePatchSiteParams defines parameters for SiteServicePatchSite.
type SiteServicePatchSiteParams struct {
	// FieldMask Field mask to be applied on the patch of site.
	FieldMask *string `form:"fieldMask,omitempty" json:"fieldMask,omitempty"`
}

// TelemetryLogsGroupServiceListTelemetryLogsGroupsParams defines parameters for TelemetryLogsGroupServiceListTelemetryLogsGroups.
type TelemetryLogsGroupServiceListTelemetryLogsGroupsParams struct {
	// PageSize Defines the amount of items to be contained in a single page. Default of 20.
	PageSize *int32 `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Offset Index of the first item to return. This allows skipping items.
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`

	// OrderBy Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`
}

// TelemetryMetricsGroupServiceListTelemetryMetricsGroupsParams defines parameters for TelemetryMetricsGroupServiceListTelemetryMetricsGroups.
type TelemetryMetricsGroupServiceListTelemetryMetricsGroupsParams struct {
	// PageSize Defines the amount of items to be contained in a single page. Default of 20.
	PageSize *int32 `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Offset Index of the first item to return. This allows skipping items.
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`

	// OrderBy Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`
}

// TelemetryLogsProfileServiceListTelemetryLogsProfilesParams defines parameters for TelemetryLogsProfileServiceListTelemetryLogsProfiles.
type TelemetryLogsProfileServiceListTelemetryLogsProfilesParams struct {
	// PageSize Defines the amount of items to be contained in a single page. Default of 20.
	PageSize *int32 `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Offset Index of the first item to return. This allows skipping items.
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`

	// OrderBy Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// InstanceId Returns only the telemetry profiles that are assigned with the given instance identifier.
	InstanceId *string `form:"instanceId,omitempty" json:"instanceId,omitempty"`

	// SiteId Returns only the telemetry profiles that are assigned with the given siteID.
	SiteId *string `form:"siteId,omitempty" json:"siteId,omitempty"`

	// RegionId Returns only the telemetry profiles that are assigned with the given regionID.
	RegionId *string `form:"regionId,omitempty" json:"regionId,omitempty"`

	// ShowInherited Indicates if listed telemetry profiles should be extended with telemetry profiles rendered from hierarchy. This flag is only used along with one of siteId, regionId or instanceId. If siteId, regionId or instanceId are not set, this flag is ignored.
	ShowInherited *bool `form:"showInherited,omitempty" json:"showInherited,omitempty"`
}

// TelemetryLogsProfileServicePatchTelemetryLogsProfileParams defines parameters for TelemetryLogsProfileServicePatchTelemetryLogsProfile.
type TelemetryLogsProfileServicePatchTelemetryLogsProfileParams struct {
	// FieldMask Field mask to be applied on the patch of telemetry_logs_profile.
	FieldMask *string `form:"fieldMask,omitempty" json:"fieldMask,omitempty"`
}

// TelemetryMetricsProfileServiceListTelemetryMetricsProfilesParams defines parameters for TelemetryMetricsProfileServiceListTelemetryMetricsProfiles.
type TelemetryMetricsProfileServiceListTelemetryMetricsProfilesParams struct {
	// PageSize Defines the amount of items to be contained in a single page. Default of 20.
	PageSize *int32 `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Offset Index of the first item to return. This allows skipping items.
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`

	// OrderBy Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// InstanceId Returns only the telemetry profiles that are assigned with the given instance identifier.
	InstanceId *string `form:"instanceId,omitempty" json:"instanceId,omitempty"`

	// SiteId Returns only the telemetry profiles that are assigned with the given siteID.
	SiteId *string `form:"siteId,omitempty" json:"siteId,omitempty"`

	// RegionId Returns only the telemetry profiles that are assigned with the given regionID.
	RegionId *string `form:"regionId,omitempty" json:"regionId,omitempty"`

	// ShowInherited Indicates if listed telemetry profiles should be extended with telemetry profiles rendered from hierarchy. This flag is only used along with one of siteId, regionId or instanceId. If siteId, regionId or instanceId are not set, this flag is ignored.
	ShowInherited *bool `form:"showInherited,omitempty" json:"showInherited,omitempty"`
}

// TelemetryMetricsProfileServicePatchTelemetryMetricsProfileParams defines parameters for TelemetryMetricsProfileServicePatchTelemetryMetricsProfile.
type TelemetryMetricsProfileServicePatchTelemetryMetricsProfileParams struct {
	// FieldMask Field mask to be applied on the patch of telemetry_metrics_profile.
	FieldMask *string `form:"fieldMask,omitempty" json:"fieldMask,omitempty"`
}

// WorkloadMemberServiceListWorkloadMembersParams defines parameters for WorkloadMemberServiceListWorkloadMembers.
type WorkloadMemberServiceListWorkloadMembersParams struct {
	// OrderBy Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// Filter Optional filter to return only item of interest. See https://google.aip.dev/160 for details.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page. Default of 20.
	PageSize *int32 `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Offset Index of the first item to return. This allows skipping items.
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`
}

// WorkloadServiceListWorkloadsParams defines parameters for WorkloadServiceListWorkloads.
type WorkloadServiceListWorkloadsParams struct {
	// OrderBy Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// Filter Optional filter to return only item of interest. See https://google.aip.dev/160 for details.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page. Default of 20.
	PageSize *int32 `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Offset Index of the first item to return. This allows skipping items.
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`
}

// WorkloadServicePatchWorkloadParams defines parameters for WorkloadServicePatchWorkload.
type WorkloadServicePatchWorkloadParams struct {
	// FieldMask Field mask to be applied on the patch of workload.
	FieldMask *string `form:"fieldMask,omitempty" json:"fieldMask,omitempty"`
}

// HostServiceCreateHostJSONRequestBody defines body for HostServiceCreateHost for application/json ContentType.
type HostServiceCreateHostJSONRequestBody = HostResource

// HostServiceRegisterHostJSONRequestBody defines body for HostServiceRegisterHost for application/json ContentType.
type HostServiceRegisterHostJSONRequestBody = HostRegister

// HostServicePatchHostJSONRequestBody defines body for HostServicePatchHost for application/json ContentType.
type HostServicePatchHostJSONRequestBody = HostResource

// HostServiceUpdateHostJSONRequestBody defines body for HostServiceUpdateHost for application/json ContentType.
type HostServiceUpdateHostJSONRequestBody = HostResource

// HostServiceRegisterUpdateHostJSONRequestBody defines body for HostServiceRegisterUpdateHost for application/json ContentType.
type HostServiceRegisterUpdateHostJSONRequestBody = HostRegister

// InstanceServiceCreateInstanceJSONRequestBody defines body for InstanceServiceCreateInstance for application/json ContentType.
type InstanceServiceCreateInstanceJSONRequestBody = InstanceResource

// InstanceServicePatchInstanceJSONRequestBody defines body for InstanceServicePatchInstance for application/json ContentType.
type InstanceServicePatchInstanceJSONRequestBody = InstanceResource

// InstanceServiceUpdateInstanceJSONRequestBody defines body for InstanceServiceUpdateInstance for application/json ContentType.
type InstanceServiceUpdateInstanceJSONRequestBody = InstanceResource

// LocalAccountServiceCreateLocalAccountJSONRequestBody defines body for LocalAccountServiceCreateLocalAccount for application/json ContentType.
type LocalAccountServiceCreateLocalAccountJSONRequestBody = LocalAccountResource

// OperatingSystemServiceCreateOperatingSystemJSONRequestBody defines body for OperatingSystemServiceCreateOperatingSystem for application/json ContentType.
type OperatingSystemServiceCreateOperatingSystemJSONRequestBody = OperatingSystemResource

// OperatingSystemServicePatchOperatingSystemJSONRequestBody defines body for OperatingSystemServicePatchOperatingSystem for application/json ContentType.
type OperatingSystemServicePatchOperatingSystemJSONRequestBody = OperatingSystemResource

// OperatingSystemServiceUpdateOperatingSystemJSONRequestBody defines body for OperatingSystemServiceUpdateOperatingSystem for application/json ContentType.
type OperatingSystemServiceUpdateOperatingSystemJSONRequestBody = OperatingSystemResource

// ProviderServiceCreateProviderJSONRequestBody defines body for ProviderServiceCreateProvider for application/json ContentType.
type ProviderServiceCreateProviderJSONRequestBody = ProviderResource

// RegionServiceCreateRegionJSONRequestBody defines body for RegionServiceCreateRegion for application/json ContentType.
type RegionServiceCreateRegionJSONRequestBody = RegionResource

// RegionServicePatchRegionJSONRequestBody defines body for RegionServicePatchRegion for application/json ContentType.
type RegionServicePatchRegionJSONRequestBody = RegionResource

// RegionServiceUpdateRegionJSONRequestBody defines body for RegionServiceUpdateRegion for application/json ContentType.
type RegionServiceUpdateRegionJSONRequestBody = RegionResource

// ScheduleServiceCreateRepeatedScheduleJSONRequestBody defines body for ScheduleServiceCreateRepeatedSchedule for application/json ContentType.
type ScheduleServiceCreateRepeatedScheduleJSONRequestBody = RepeatedScheduleResource

// ScheduleServicePatchRepeatedScheduleJSONRequestBody defines body for ScheduleServicePatchRepeatedSchedule for application/json ContentType.
type ScheduleServicePatchRepeatedScheduleJSONRequestBody = RepeatedScheduleResource

// ScheduleServiceUpdateRepeatedScheduleJSONRequestBody defines body for ScheduleServiceUpdateRepeatedSchedule for application/json ContentType.
type ScheduleServiceUpdateRepeatedScheduleJSONRequestBody = RepeatedScheduleResource

// ScheduleServiceCreateSingleScheduleJSONRequestBody defines body for ScheduleServiceCreateSingleSchedule for application/json ContentType.
type ScheduleServiceCreateSingleScheduleJSONRequestBody = SingleScheduleResource

// ScheduleServicePatchSingleScheduleJSONRequestBody defines body for ScheduleServicePatchSingleSchedule for application/json ContentType.
type ScheduleServicePatchSingleScheduleJSONRequestBody = SingleScheduleResource

// ScheduleServiceUpdateSingleScheduleJSONRequestBody defines body for ScheduleServiceUpdateSingleSchedule for application/json ContentType.
type ScheduleServiceUpdateSingleScheduleJSONRequestBody = SingleScheduleResource

// SiteServiceCreateSiteJSONRequestBody defines body for SiteServiceCreateSite for application/json ContentType.
type SiteServiceCreateSiteJSONRequestBody = SiteResource

// SiteServicePatchSiteJSONRequestBody defines body for SiteServicePatchSite for application/json ContentType.
type SiteServicePatchSiteJSONRequestBody = SiteResource

// SiteServiceUpdateSiteJSONRequestBody defines body for SiteServiceUpdateSite for application/json ContentType.
type SiteServiceUpdateSiteJSONRequestBody = SiteResource

// TelemetryLogsGroupServiceCreateTelemetryLogsGroupJSONRequestBody defines body for TelemetryLogsGroupServiceCreateTelemetryLogsGroup for application/json ContentType.
type TelemetryLogsGroupServiceCreateTelemetryLogsGroupJSONRequestBody = TelemetryLogsGroupResource

// TelemetryMetricsGroupServiceCreateTelemetryMetricsGroupJSONRequestBody defines body for TelemetryMetricsGroupServiceCreateTelemetryMetricsGroup for application/json ContentType.
type TelemetryMetricsGroupServiceCreateTelemetryMetricsGroupJSONRequestBody = TelemetryMetricsGroupResource

// TelemetryLogsProfileServiceCreateTelemetryLogsProfileJSONRequestBody defines body for TelemetryLogsProfileServiceCreateTelemetryLogsProfile for application/json ContentType.
type TelemetryLogsProfileServiceCreateTelemetryLogsProfileJSONRequestBody = TelemetryLogsProfileResource

// TelemetryLogsProfileServicePatchTelemetryLogsProfileJSONRequestBody defines body for TelemetryLogsProfileServicePatchTelemetryLogsProfile for application/json ContentType.
type TelemetryLogsProfileServicePatchTelemetryLogsProfileJSONRequestBody = TelemetryLogsProfileResource

// TelemetryLogsProfileServiceUpdateTelemetryLogsProfileJSONRequestBody defines body for TelemetryLogsProfileServiceUpdateTelemetryLogsProfile for application/json ContentType.
type TelemetryLogsProfileServiceUpdateTelemetryLogsProfileJSONRequestBody = TelemetryLogsProfileResource

// TelemetryMetricsProfileServiceCreateTelemetryMetricsProfileJSONRequestBody defines body for TelemetryMetricsProfileServiceCreateTelemetryMetricsProfile for application/json ContentType.
type TelemetryMetricsProfileServiceCreateTelemetryMetricsProfileJSONRequestBody = TelemetryMetricsProfileResource

// TelemetryMetricsProfileServicePatchTelemetryMetricsProfileJSONRequestBody defines body for TelemetryMetricsProfileServicePatchTelemetryMetricsProfile for application/json ContentType.
type TelemetryMetricsProfileServicePatchTelemetryMetricsProfileJSONRequestBody = TelemetryMetricsProfileResource

// TelemetryMetricsProfileServiceUpdateTelemetryMetricsProfileJSONRequestBody defines body for TelemetryMetricsProfileServiceUpdateTelemetryMetricsProfile for application/json ContentType.
type TelemetryMetricsProfileServiceUpdateTelemetryMetricsProfileJSONRequestBody = TelemetryMetricsProfileResource

// WorkloadMemberServiceCreateWorkloadMemberJSONRequestBody defines body for WorkloadMemberServiceCreateWorkloadMember for application/json ContentType.
type WorkloadMemberServiceCreateWorkloadMemberJSONRequestBody = WorkloadMember

// WorkloadServiceCreateWorkloadJSONRequestBody defines body for WorkloadServiceCreateWorkload for application/json ContentType.
type WorkloadServiceCreateWorkloadJSONRequestBody = WorkloadResource

// WorkloadServicePatchWorkloadJSONRequestBody defines body for WorkloadServicePatchWorkload for application/json ContentType.
type WorkloadServicePatchWorkloadJSONRequestBody = WorkloadResource

// WorkloadServiceUpdateWorkloadJSONRequestBody defines body for WorkloadServiceUpdateWorkload for application/json ContentType.
type WorkloadServiceUpdateWorkloadJSONRequestBody = WorkloadResource

// Getter for additional properties for GoogleProtobufAny. Returns the specified
// element and whether it was found
func (a GoogleProtobufAny) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for GoogleProtobufAny
func (a *GoogleProtobufAny) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for GoogleProtobufAny to handle AdditionalProperties
func (a *GoogleProtobufAny) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if raw, found := object["@type"]; found {
		err = json.Unmarshal(raw, &a.Type)
		if err != nil {
			return fmt.Errorf("error reading '@type': %w", err)
		}
		delete(object, "@type")
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for GoogleProtobufAny to handle AdditionalProperties
func (a GoogleProtobufAny) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	if a.Type != nil {
		object["@type"], err = json.Marshal(a.Type)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '@type': %w", err)
		}
	}

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}
