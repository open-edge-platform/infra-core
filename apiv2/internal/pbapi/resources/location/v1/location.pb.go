// SPDX-FileCopyrightText: (C) 2025 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: resources/location/v1/location.proto

package locationv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	v1 "github.com/open-edge-platform/infra-core/apiv2/v2/internal/pbapi/resources/common/v1"
	v11 "github.com/open-edge-platform/infra-core/apiv2/v2/internal/pbapi/resources/provider/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A region resource.
type RegionResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// resource ID, generated by the inventory on Create.
	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// The user-provided, human-readable name of region
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The parent Region associated to the Region, when existent.
	ParentRegion *RegionResource `protobuf:"bytes,4,opt,name=parent_region,json=parentRegion,proto3" json:"parent_region,omitempty"`
	// The Region unique identifier. Alias of resourceId.
	RegionID string `protobuf:"bytes,5001,opt,name=regionID,proto3" json:"regionID,omitempty"`
	// The metadata associated to the Region,
	// represented by a list of key:value pairs.
	Metadata []*v1.MetadataItem `protobuf:"bytes,5002,rep,name=metadata,proto3" json:"metadata,omitempty"`
	// The rendered metadata from the Region parent(s)
	// that can be inherited by the Region, represented by a list of key:value pairs.
	// This field can not be used in filter.
	InheritedMetadata []*v1.MetadataItem `protobuf:"bytes,5003,rep,name=inherited_metadata,json=inheritedMetadata,proto3" json:"inherited_metadata,omitempty"`
	// The total number of sites in the region.
	TotalSites int32 `protobuf:"varint,5004,opt,name=total_sites,json=totalSites,proto3" json:"total_sites,omitempty"`
	// The parent Region unique identifier
	// that the region is associated to, when existent.
	// This field can not be used in filter.
	ParentId string `protobuf:"bytes,5005,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// Timestamps associated to the resource.
	Timestamps *v1.Timestamps `protobuf:"bytes,50100,opt,name=timestamps,proto3" json:"timestamps,omitempty"`
}

func (x *RegionResource) Reset() {
	*x = RegionResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_location_v1_location_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionResource) ProtoMessage() {}

func (x *RegionResource) ProtoReflect() protoreflect.Message {
	mi := &file_resources_location_v1_location_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionResource.ProtoReflect.Descriptor instead.
func (*RegionResource) Descriptor() ([]byte, []int) {
	return file_resources_location_v1_location_proto_rawDescGZIP(), []int{0}
}

func (x *RegionResource) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *RegionResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegionResource) GetParentRegion() *RegionResource {
	if x != nil {
		return x.ParentRegion
	}
	return nil
}

func (x *RegionResource) GetRegionID() string {
	if x != nil {
		return x.RegionID
	}
	return ""
}

func (x *RegionResource) GetMetadata() []*v1.MetadataItem {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RegionResource) GetInheritedMetadata() []*v1.MetadataItem {
	if x != nil {
		return x.InheritedMetadata
	}
	return nil
}

func (x *RegionResource) GetTotalSites() int32 {
	if x != nil {
		return x.TotalSites
	}
	return 0
}

func (x *RegionResource) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *RegionResource) GetTimestamps() *v1.Timestamps {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

// A site resource.
type SiteResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// resource ID, generated by the inventory on Create.
	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// The site's human-readable name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Region this site is located in
	Region *RegionResource `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	// The geolocation latitude of the site.
	// Points are represented as latitude-longitude pairs in the E7 representation
	// (degrees are multiplied by 10**7 and rounded to the nearest integer).
	// siteLat must be in the range of +/- 90 degrees.
	SiteLat int32 `protobuf:"varint,8,opt,name=site_lat,json=siteLat,proto3" json:"site_lat,omitempty"`
	// The geolocation longitude of the site.
	// Points are represented as latitude-longitude pairs in the E7 representation
	// (degrees are multiplied by 10**7 and rounded to the nearest integer).
	// siteLng must be in the range of +/- 180 degrees (inclusive).
	SiteLng int32 `protobuf:"varint,9,opt,name=site_lng,json=siteLng,proto3" json:"site_lng,omitempty"`
	// Provider this Site is managed by
	Provider *v11.ProviderResource `protobuf:"bytes,30,opt,name=provider,proto3" json:"provider,omitempty"`
	// The site unique identifier. Alias of resourceId.
	SiteID string `protobuf:"bytes,5001,opt,name=siteID,proto3" json:"siteID,omitempty"`
	// The metadata associated to the Region,
	// represented by a list of key:value pairs.
	Metadata []*v1.MetadataItem `protobuf:"bytes,5002,rep,name=metadata,proto3" json:"metadata,omitempty"`
	// The rendered metadata from the Region parent(s)
	// that can be inherited by the Region, represented by a list of key:value pairs.
	// This field can not be used in filter.
	InheritedMetadata []*v1.MetadataItem `protobuf:"bytes,5003,rep,name=inherited_metadata,json=inheritedMetadata,proto3" json:"inherited_metadata,omitempty"`
	// The region's unique identifier
	// that the site is associated to. This field cannot be used in filter.
	RegionId string `protobuf:"bytes,5004,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	// Timestamps associated to the resource.
	Timestamps *v1.Timestamps `protobuf:"bytes,50100,opt,name=timestamps,proto3" json:"timestamps,omitempty"`
}

func (x *SiteResource) Reset() {
	*x = SiteResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_location_v1_location_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteResource) ProtoMessage() {}

func (x *SiteResource) ProtoReflect() protoreflect.Message {
	mi := &file_resources_location_v1_location_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteResource.ProtoReflect.Descriptor instead.
func (*SiteResource) Descriptor() ([]byte, []int) {
	return file_resources_location_v1_location_proto_rawDescGZIP(), []int{1}
}

func (x *SiteResource) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *SiteResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SiteResource) GetRegion() *RegionResource {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *SiteResource) GetSiteLat() int32 {
	if x != nil {
		return x.SiteLat
	}
	return 0
}

func (x *SiteResource) GetSiteLng() int32 {
	if x != nil {
		return x.SiteLng
	}
	return 0
}

func (x *SiteResource) GetProvider() *v11.ProviderResource {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *SiteResource) GetSiteID() string {
	if x != nil {
		return x.SiteID
	}
	return ""
}

func (x *SiteResource) GetMetadata() []*v1.MetadataItem {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SiteResource) GetInheritedMetadata() []*v1.MetadataItem {
	if x != nil {
		return x.InheritedMetadata
	}
	return nil
}

func (x *SiteResource) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *SiteResource) GetTimestamps() *v1.Timestamps {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

var File_resources_location_v1_location_proto protoreflect.FileDescriptor

var file_resources_location_v1_location_proto_rawDesc = []byte{
	0x0a, 0x24, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x24, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xef, 0x04, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x20, 0xe0, 0x41, 0x03, 0xfa, 0x42, 0x1a, 0x72,
	0x18, 0x18, 0x0f, 0x32, 0x14, 0x5e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2d, 0x5b, 0x30, 0x2d,
	0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x38, 0x7d, 0x24, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x20, 0xfa, 0x42, 0x1d, 0x72, 0x1b, 0x18, 0x32, 0x32, 0x17, 0x5e, 0x24,
	0x7c, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x2d, 0x5f, 0x30, 0x2d, 0x39, 0x2e, 0x2f,
	0x3a, 0x20, 0x5d, 0x2b, 0x24, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x0d, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0c,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x08,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x89, 0x27, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x20, 0xe0, 0x41, 0x03, 0xfa, 0x42, 0x1a, 0x72, 0x18, 0x18, 0x0f, 0x32, 0x14, 0x5e, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x38, 0x7d,
	0x24, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x43, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x8a, 0x27, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65,
	0x6d, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x56, 0x0a, 0x12, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x8b, 0x27, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x11, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x65, 0x64,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x18, 0x8c, 0x27, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a,
	0xe0, 0x41, 0x03, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x69, 0x74, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x8d, 0x27, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0xe0, 0x41, 0x04, 0xfa,
	0x42, 0x1d, 0x72, 0x1b, 0x18, 0x0f, 0x32, 0x17, 0x5e, 0x24, 0x7c, 0x5e, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x38, 0x7d, 0x24, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x0a, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x18, 0xb4, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x73, 0x22, 0xd2, 0x05, 0x0a, 0x0c, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0xe0, 0x41, 0x03, 0xfa, 0x42, 0x18, 0x72,
	0x16, 0x18, 0x0d, 0x32, 0x12, 0x5e, 0x73, 0x69, 0x74, 0x65, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61,
	0x2d, 0x66, 0x5d, 0x7b, 0x38, 0x7d, 0x24, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x20, 0xfa, 0x42, 0x1d, 0x72, 0x1b, 0x18, 0x32, 0x32, 0x17, 0x5e, 0x24, 0x7c, 0x5e,
	0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x2d, 0x5f, 0x30, 0x2d, 0x39, 0x2e, 0x2f, 0x3a, 0x20,
	0x5d, 0x2b, 0x24, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a,
	0x08, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x16, 0xfa, 0x42, 0x13, 0x1a, 0x11, 0x18, 0x80, 0xd2, 0x93, 0xad, 0x03, 0x28, 0x80, 0xae, 0xec,
	0xd2, 0xfc, 0xff, 0xff, 0xff, 0xff, 0x01, 0x52, 0x07, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x74,
	0x12, 0x31, 0x0a, 0x08, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x16, 0xfa, 0x42, 0x13, 0x1a, 0x11, 0x18, 0x80, 0xa4, 0xa7, 0xda, 0x06, 0x28,
	0x80, 0xdc, 0xd8, 0xa5, 0xf9, 0xff, 0xff, 0xff, 0xff, 0x01, 0x52, 0x07, 0x73, 0x69, 0x74, 0x65,
	0x4c, 0x6e, 0x67, 0x12, 0x43, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x69, 0x74, 0x65,
	0x49, 0x44, 0x18, 0x89, 0x27, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1b, 0xfa, 0x42, 0x18, 0x72, 0x16,
	0x18, 0x0d, 0x32, 0x12, 0x5e, 0x73, 0x69, 0x74, 0x65, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d,
	0x66, 0x5d, 0x7b, 0x38, 0x7d, 0x24, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x44, 0x12, 0x43,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x8a, 0x27, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x49, 0x74, 0x65, 0x6d, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x56, 0x0a, 0x12, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x65, 0x64,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x8b, 0x27, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x11, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69,
	0x74, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x09, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x8c, 0x27, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x23, 0xe0, 0x41, 0x04, 0xfa, 0x42, 0x1d, 0x72, 0x1b, 0x18, 0x0f, 0x32, 0x17, 0x5e, 0x24, 0x7c,
	0x5e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d,
	0x7b, 0x38, 0x7d, 0x24, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x46,
	0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x18, 0xb4, 0x87, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x42, 0x63, 0x5a, 0x61, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x2d, 0x65, 0x64, 0x67, 0x65, 0x2d, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2d, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x76, 0x32, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x62, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x3b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_resources_location_v1_location_proto_rawDescOnce sync.Once
	file_resources_location_v1_location_proto_rawDescData = file_resources_location_v1_location_proto_rawDesc
)

func file_resources_location_v1_location_proto_rawDescGZIP() []byte {
	file_resources_location_v1_location_proto_rawDescOnce.Do(func() {
		file_resources_location_v1_location_proto_rawDescData = protoimpl.X.CompressGZIP(file_resources_location_v1_location_proto_rawDescData)
	})
	return file_resources_location_v1_location_proto_rawDescData
}

var file_resources_location_v1_location_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_resources_location_v1_location_proto_goTypes = []interface{}{
	(*RegionResource)(nil),       // 0: resources.location.v1.RegionResource
	(*SiteResource)(nil),         // 1: resources.location.v1.SiteResource
	(*v1.MetadataItem)(nil),      // 2: resources.common.v1.MetadataItem
	(*v1.Timestamps)(nil),        // 3: resources.common.v1.Timestamps
	(*v11.ProviderResource)(nil), // 4: resources.provider.v1.ProviderResource
}
var file_resources_location_v1_location_proto_depIdxs = []int32{
	0, // 0: resources.location.v1.RegionResource.parent_region:type_name -> resources.location.v1.RegionResource
	2, // 1: resources.location.v1.RegionResource.metadata:type_name -> resources.common.v1.MetadataItem
	2, // 2: resources.location.v1.RegionResource.inherited_metadata:type_name -> resources.common.v1.MetadataItem
	3, // 3: resources.location.v1.RegionResource.timestamps:type_name -> resources.common.v1.Timestamps
	0, // 4: resources.location.v1.SiteResource.region:type_name -> resources.location.v1.RegionResource
	4, // 5: resources.location.v1.SiteResource.provider:type_name -> resources.provider.v1.ProviderResource
	2, // 6: resources.location.v1.SiteResource.metadata:type_name -> resources.common.v1.MetadataItem
	2, // 7: resources.location.v1.SiteResource.inherited_metadata:type_name -> resources.common.v1.MetadataItem
	3, // 8: resources.location.v1.SiteResource.timestamps:type_name -> resources.common.v1.Timestamps
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_resources_location_v1_location_proto_init() }
func file_resources_location_v1_location_proto_init() {
	if File_resources_location_v1_location_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_resources_location_v1_location_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_location_v1_location_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_resources_location_v1_location_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resources_location_v1_location_proto_goTypes,
		DependencyIndexes: file_resources_location_v1_location_proto_depIdxs,
		MessageInfos:      file_resources_location_v1_location_proto_msgTypes,
	}.Build()
	File_resources_location_v1_location_proto = out.File
	file_resources_location_v1_location_proto_rawDesc = nil
	file_resources_location_v1_location_proto_goTypes = nil
	file_resources_location_v1_location_proto_depIdxs = nil
}
