// SPDX-FileCopyrightText: (C) 2025 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: resources/network/v1/network.proto

package networkv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	v1 "github.com/open-edge-platform/infra-core/apiv2/v2/internal/pbapi/resources/common/v1"
	_ "github.com/open-edge-platform/infra-core/apiv2/v2/internal/pbapi/resources/location/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IPAddressState int32

const (
	IPAddressState_IP_ADDRESS_STATE_UNSPECIFIED IPAddressState = 0
	IPAddressState_IP_ADDRESS_STATE_ERROR       IPAddressState = 1
	IPAddressState_IP_ADDRESS_STATE_ASSIGNED    IPAddressState = 2
	IPAddressState_IP_ADDRESS_STATE_CONFIGURED  IPAddressState = 3
	IPAddressState_IP_ADDRESS_STATE_RELEASED    IPAddressState = 4
	IPAddressState_IP_ADDRESS_STATE_DELETED     IPAddressState = 5
)

// Enum value maps for IPAddressState.
var (
	IPAddressState_name = map[int32]string{
		0: "IP_ADDRESS_STATE_UNSPECIFIED",
		1: "IP_ADDRESS_STATE_ERROR",
		2: "IP_ADDRESS_STATE_ASSIGNED",
		3: "IP_ADDRESS_STATE_CONFIGURED",
		4: "IP_ADDRESS_STATE_RELEASED",
		5: "IP_ADDRESS_STATE_DELETED",
	}
	IPAddressState_value = map[string]int32{
		"IP_ADDRESS_STATE_UNSPECIFIED": 0,
		"IP_ADDRESS_STATE_ERROR":       1,
		"IP_ADDRESS_STATE_ASSIGNED":    2,
		"IP_ADDRESS_STATE_CONFIGURED":  3,
		"IP_ADDRESS_STATE_RELEASED":    4,
		"IP_ADDRESS_STATE_DELETED":     5,
	}
)

func (x IPAddressState) Enum() *IPAddressState {
	p := new(IPAddressState)
	*p = x
	return p
}

func (x IPAddressState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IPAddressState) Descriptor() protoreflect.EnumDescriptor {
	return file_resources_network_v1_network_proto_enumTypes[0].Descriptor()
}

func (IPAddressState) Type() protoreflect.EnumType {
	return &file_resources_network_v1_network_proto_enumTypes[0]
}

func (x IPAddressState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IPAddressState.Descriptor instead.
func (IPAddressState) EnumDescriptor() ([]byte, []int) {
	return file_resources_network_v1_network_proto_rawDescGZIP(), []int{0}
}

type IPAddressStatus int32

const (
	IPAddressStatus_IP_ADDRESS_STATUS_UNSPECIFIED         IPAddressStatus = 0
	IPAddressStatus_IP_ADDRESS_STATUS_ASSIGNMENT_ERROR    IPAddressStatus = 1
	IPAddressStatus_IP_ADDRESS_STATUS_ASSIGNED            IPAddressStatus = 2
	IPAddressStatus_IP_ADDRESS_STATUS_CONFIGURATION_ERROR IPAddressStatus = 3
	IPAddressStatus_IP_ADDRESS_STATUS_CONFIGURED          IPAddressStatus = 4
	IPAddressStatus_IP_ADDRESS_STATUS_RELEASED            IPAddressStatus = 5
	IPAddressStatus_IP_ADDRESS_STATUS_ERROR               IPAddressStatus = 6
)

// Enum value maps for IPAddressStatus.
var (
	IPAddressStatus_name = map[int32]string{
		0: "IP_ADDRESS_STATUS_UNSPECIFIED",
		1: "IP_ADDRESS_STATUS_ASSIGNMENT_ERROR",
		2: "IP_ADDRESS_STATUS_ASSIGNED",
		3: "IP_ADDRESS_STATUS_CONFIGURATION_ERROR",
		4: "IP_ADDRESS_STATUS_CONFIGURED",
		5: "IP_ADDRESS_STATUS_RELEASED",
		6: "IP_ADDRESS_STATUS_ERROR",
	}
	IPAddressStatus_value = map[string]int32{
		"IP_ADDRESS_STATUS_UNSPECIFIED":         0,
		"IP_ADDRESS_STATUS_ASSIGNMENT_ERROR":    1,
		"IP_ADDRESS_STATUS_ASSIGNED":            2,
		"IP_ADDRESS_STATUS_CONFIGURATION_ERROR": 3,
		"IP_ADDRESS_STATUS_CONFIGURED":          4,
		"IP_ADDRESS_STATUS_RELEASED":            5,
		"IP_ADDRESS_STATUS_ERROR":               6,
	}
)

func (x IPAddressStatus) Enum() *IPAddressStatus {
	p := new(IPAddressStatus)
	*p = x
	return p
}

func (x IPAddressStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IPAddressStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_resources_network_v1_network_proto_enumTypes[1].Descriptor()
}

func (IPAddressStatus) Type() protoreflect.EnumType {
	return &file_resources_network_v1_network_proto_enumTypes[1]
}

func (x IPAddressStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IPAddressStatus.Descriptor instead.
func (IPAddressStatus) EnumDescriptor() ([]byte, []int) {
	return file_resources_network_v1_network_proto_rawDescGZIP(), []int{1}
}

type IPAddressConfigMethod int32

const (
	IPAddressConfigMethod_IP_ADDRESS_CONFIG_METHOD_UNSPECIFIED IPAddressConfigMethod = 0
	IPAddressConfigMethod_IP_ADDRESS_CONFIG_METHOD_STATIC      IPAddressConfigMethod = 1
	IPAddressConfigMethod_IP_ADDRESS_CONFIG_METHOD_DYNAMIC     IPAddressConfigMethod = 2
)

// Enum value maps for IPAddressConfigMethod.
var (
	IPAddressConfigMethod_name = map[int32]string{
		0: "IP_ADDRESS_CONFIG_METHOD_UNSPECIFIED",
		1: "IP_ADDRESS_CONFIG_METHOD_STATIC",
		2: "IP_ADDRESS_CONFIG_METHOD_DYNAMIC",
	}
	IPAddressConfigMethod_value = map[string]int32{
		"IP_ADDRESS_CONFIG_METHOD_UNSPECIFIED": 0,
		"IP_ADDRESS_CONFIG_METHOD_STATIC":      1,
		"IP_ADDRESS_CONFIG_METHOD_DYNAMIC":     2,
	}
)

func (x IPAddressConfigMethod) Enum() *IPAddressConfigMethod {
	p := new(IPAddressConfigMethod)
	*p = x
	return p
}

func (x IPAddressConfigMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IPAddressConfigMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_resources_network_v1_network_proto_enumTypes[2].Descriptor()
}

func (IPAddressConfigMethod) Type() protoreflect.EnumType {
	return &file_resources_network_v1_network_proto_enumTypes[2]
}

func (x IPAddressConfigMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IPAddressConfigMethod.Descriptor instead.
func (IPAddressConfigMethod) EnumDescriptor() ([]byte, []int) {
	return file_resources_network_v1_network_proto_rawDescGZIP(), []int{2}
}

type IPAddressResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource ID, generated by Inventory on Create
	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// CIDR representation of the IP address.
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// The status of the IP address.
	Status IPAddressStatus `protobuf:"varint,7,opt,name=status,proto3,enum=resources.network.v1.IPAddressStatus" json:"status,omitempty"`
	// User-friendly status to provide details about the resource state
	StatusDetail string `protobuf:"bytes,8,opt,name=status_detail,json=statusDetail,proto3" json:"status_detail,omitempty"`
	// Specifies how the IP address is configured.
	ConfigMethod IPAddressConfigMethod `protobuf:"varint,9,opt,name=config_method,json=configMethod,proto3,enum=resources.network.v1.IPAddressConfigMethod" json:"config_method,omitempty"`
	// Timestamps associated to the resource.
	Timestamps *v1.Timestamps `protobuf:"bytes,50100,opt,name=timestamps,proto3" json:"timestamps,omitempty"`
}

func (x *IPAddressResource) Reset() {
	*x = IPAddressResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_network_v1_network_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPAddressResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPAddressResource) ProtoMessage() {}

func (x *IPAddressResource) ProtoReflect() protoreflect.Message {
	mi := &file_resources_network_v1_network_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPAddressResource.ProtoReflect.Descriptor instead.
func (*IPAddressResource) Descriptor() ([]byte, []int) {
	return file_resources_network_v1_network_proto_rawDescGZIP(), []int{0}
}

func (x *IPAddressResource) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *IPAddressResource) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *IPAddressResource) GetStatus() IPAddressStatus {
	if x != nil {
		return x.Status
	}
	return IPAddressStatus_IP_ADDRESS_STATUS_UNSPECIFIED
}

func (x *IPAddressResource) GetStatusDetail() string {
	if x != nil {
		return x.StatusDetail
	}
	return ""
}

func (x *IPAddressResource) GetConfigMethod() IPAddressConfigMethod {
	if x != nil {
		return x.ConfigMethod
	}
	return IPAddressConfigMethod_IP_ADDRESS_CONFIG_METHOD_UNSPECIFIED
}

func (x *IPAddressResource) GetTimestamps() *v1.Timestamps {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

var File_resources_network_v1_network_proto protoreflect.FileDescriptor

var file_resources_network_v1_network_proto_rawDesc = []byte{
	0x0a, 0x22, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x03, 0x0a,
	0x11, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x20, 0xe0, 0x41, 0x03, 0xfa, 0x42, 0x1a, 0x72,
	0x18, 0x18, 0x0f, 0x32, 0x14, 0x5e, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x2d, 0x5b, 0x30, 0x2d,
	0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x38, 0x7d, 0x24, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x42, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x50, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x55, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x46, 0x0a, 0x0a, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x18, 0xb4, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x73, 0x2a, 0xcb, 0x01, 0x0a, 0x0e, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x49, 0x50, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45,
	0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x50, 0x5f, 0x41, 0x44, 0x44,
	0x52, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x49, 0x50, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x49, 0x50, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x44,
	0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x49, 0x50, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x44, 0x10,
	0x04, 0x12, 0x1c, 0x0a, 0x18, 0x49, 0x50, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x05, 0x2a,
	0x86, 0x02, 0x0a, 0x0f, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x1d, 0x49, 0x50, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53,
	0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x26, 0x0a, 0x22, 0x49, 0x50, 0x5f, 0x41, 0x44, 0x44,
	0x52, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x53, 0x53, 0x49,
	0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x1e,
	0x0a, 0x1a, 0x49, 0x50, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x10, 0x02, 0x12, 0x29,
	0x0a, 0x25, 0x49, 0x50, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c, 0x49, 0x50, 0x5f,
	0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x44, 0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x49,
	0x50, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x44, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x49,
	0x50, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x06, 0x2a, 0x8c, 0x01, 0x0a, 0x15, 0x49, 0x50, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x28, 0x0a, 0x24, 0x49, 0x50, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53,
	0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f,
	0x49, 0x50, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x47, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x10,
	0x01, 0x12, 0x24, 0x0a, 0x20, 0x49, 0x50, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x5f,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x44, 0x59,
	0x4e, 0x41, 0x4d, 0x49, 0x43, 0x10, 0x02, 0x42, 0x61, 0x5a, 0x5f, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x2d, 0x65, 0x64, 0x67, 0x65, 0x2d,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2d, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x76, 0x32, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x62, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x31,
	0x3b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_resources_network_v1_network_proto_rawDescOnce sync.Once
	file_resources_network_v1_network_proto_rawDescData = file_resources_network_v1_network_proto_rawDesc
)

func file_resources_network_v1_network_proto_rawDescGZIP() []byte {
	file_resources_network_v1_network_proto_rawDescOnce.Do(func() {
		file_resources_network_v1_network_proto_rawDescData = protoimpl.X.CompressGZIP(file_resources_network_v1_network_proto_rawDescData)
	})
	return file_resources_network_v1_network_proto_rawDescData
}

var file_resources_network_v1_network_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_resources_network_v1_network_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_resources_network_v1_network_proto_goTypes = []interface{}{
	(IPAddressState)(0),        // 0: resources.network.v1.IPAddressState
	(IPAddressStatus)(0),       // 1: resources.network.v1.IPAddressStatus
	(IPAddressConfigMethod)(0), // 2: resources.network.v1.IPAddressConfigMethod
	(*IPAddressResource)(nil),  // 3: resources.network.v1.IPAddressResource
	(*v1.Timestamps)(nil),      // 4: resources.common.v1.Timestamps
}
var file_resources_network_v1_network_proto_depIdxs = []int32{
	1, // 0: resources.network.v1.IPAddressResource.status:type_name -> resources.network.v1.IPAddressStatus
	2, // 1: resources.network.v1.IPAddressResource.config_method:type_name -> resources.network.v1.IPAddressConfigMethod
	4, // 2: resources.network.v1.IPAddressResource.timestamps:type_name -> resources.common.v1.Timestamps
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_resources_network_v1_network_proto_init() }
func file_resources_network_v1_network_proto_init() {
	if File_resources_network_v1_network_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_resources_network_v1_network_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPAddressResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_resources_network_v1_network_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resources_network_v1_network_proto_goTypes,
		DependencyIndexes: file_resources_network_v1_network_proto_depIdxs,
		EnumInfos:         file_resources_network_v1_network_proto_enumTypes,
		MessageInfos:      file_resources_network_v1_network_proto_msgTypes,
	}.Build()
	File_resources_network_v1_network_proto = out.File
	file_resources_network_v1_network_proto_rawDesc = nil
	file_resources_network_v1_network_proto_goTypes = nil
	file_resources_network_v1_network_proto_depIdxs = nil
}
