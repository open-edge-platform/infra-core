---
# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
# Generated file do not edit !!!
openapi: 3.1.0
info:
  title: Edge Infrastructure Manager
  description: Edge Infrastructure Manager API
  contact:
    name: Open Edge Platform GitHub Organization
    url: https://github.com/open-edge-platform
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.2.0
paths:
  /edge-infra.orchestrator.apis/v2/regions:
    get:
      tags:
        - RegionService
      summary: ListRegions
      description: Get a list of regions.
      operationId: RegionService_ListRegions
      parameters:
        - name: orderBy
          in: query
          description: |-
            Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
          schema:
            type: string
            title: order_by
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9., ]+$
            description: |-
              (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
               See https://google.aip.dev/132 for details.
        - name: filter
          in: query
          description: |-
            Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
          schema:
            type: string
            title: filter
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
            description: |-
              (OPTIONAL) Optional filter to return only item of interest.
               See https://google.aip.dev/160 for details.
        - name: pageSize
          in: query
          description: |-
            Defines the amount of items to be contained in a single page.
             Default of 20.
          schema:
            type: integer
            title: page_size
            maximum: 100
            minimum: 1
            description: |-
              (OPTIONAL) Defines the amount of items to be contained in a single page.
               Default of 20.
        - name: offset
          in: query
          description: Index of the first item to return. This allows skipping items.
          schema:
            type: integer
            title: offset
            maximum: 10000
            description: (OPTIONAL) Index of the first item to return. This allows skipping items.
        - name: showTotalSites
          in: query
          description: Flag to signal if the total amount of site in a region should be returned.
          schema:
            type: boolean
            title: show_total_sites
            description: (OPTIONAL) Flag to signal if the total amount of site in a region should be returned.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRegionsResponse'
    post:
      tags:
        - RegionService
      summary: CreateRegion
      description: Create a region.
      operationId: RegionService_CreateRegion
      requestBody:
        description: The region to create.
        content:
          application/json:
            schema:
              title: region
              description: The region to create.
              $ref: '#/components/schemas/RegionResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionResource'
  /edge-infra.orchestrator.apis/v2/regions/{resourceId}:
    get:
      tags:
        - RegionService
      summary: GetRegion
      description: Get a specific region.
      operationId: RegionService_GetRegion
      parameters:
        - name: resourceId
          in: path
          description: Name of the requested region.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the requested region.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionResource'
    put:
      tags:
        - RegionService
      summary: UpdateRegion
      description: Update a region.
      operationId: RegionService_UpdateRegion
      parameters:
        - name: resourceId
          in: path
          description: Name of the region region to be updated.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the region region to be updated.
      requestBody:
        description: Updated values for the region.
        content:
          application/json:
            schema:
              title: region
              description: Updated values for the region.
              $ref: '#/components/schemas/RegionResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionResource'
    delete:
      tags:
        - RegionService
      summary: DeleteRegion
      description: Delete a region.
      operationId: RegionService_DeleteRegion
      parameters:
        - name: resourceId
          in: path
          description: Name of the region region to be deleted.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the region region to be deleted.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRegionResponse'
    patch:
      tags:
        - RegionService
      summary: PatchRegion
      description: Patch a region.
      operationId: RegionService_PatchRegion
      parameters:
        - name: resourceId
          in: path
          description: ID of the resource to be updated.
          required: true
          schema:
            type: string
            title: resourceId
            description: ID of the resource to be updated.
      requestBody:
        description: Updated values for the region.
        content:
          application/json:
            schema:
              title: region
              description: Updated values for the region.
              $ref: '#/components/schemas/RegionResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionResource'
  /edge-infra.orchestrator.apis/v2/sites:
    get:
      tags:
        - SiteService
      summary: ListSites
      description: Get a list of sites.
      operationId: SiteService_ListSites
      parameters:
        - name: orderBy
          in: query
          description: |-
            Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
          schema:
            type: string
            title: order_by
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9., ]+$
            description: |-
              (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
               See https://google.aip.dev/132 for details.
        - name: filter
          in: query
          description: |-
            Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
          schema:
            type: string
            title: filter
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
            description: |-
              (OPTIONAL) Optional filter to return only item of interest.
               See https://google.aip.dev/160 for details.
        - name: pageSize
          in: query
          description: |-
            Defines the amount of items to be contained in a single page.
             Default of 20.
          schema:
            type: integer
            title: page_size
            maximum: 100
            minimum: 1
            description: |-
              (OPTIONAL) Defines the amount of items to be contained in a single page.
               Default of 20.
        - name: offset
          in: query
          description: Index of the first item to return. This allows skipping items.
          schema:
            type: integer
            title: offset
            maximum: 10000
            description: (OPTIONAL) Index of the first item to return. This allows skipping items.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSitesResponse'
    post:
      tags:
        - SiteService
      summary: CreateSite
      description: Create a site.
      operationId: SiteService_CreateSite
      requestBody:
        description: The site to create.
        content:
          application/json:
            schema:
              title: site
              description: The site to create.
              $ref: '#/components/schemas/SiteResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteResource'
  /edge-infra.orchestrator.apis/v2/sites/{resourceId}:
    get:
      tags:
        - SiteService
      summary: GetSite
      description: Get a specific site.
      operationId: SiteService_GetSite
      parameters:
        - name: resourceId
          in: path
          description: Name of the requested site.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the requested site.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteResource'
    put:
      tags:
        - SiteService
      summary: UpdateSite
      description: Update a site.
      operationId: SiteService_UpdateSite
      parameters:
        - name: resourceId
          in: path
          description: Name of the site site to be updated.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the site site to be updated.
      requestBody:
        description: Updated values for the site.
        content:
          application/json:
            schema:
              title: site
              description: Updated values for the site.
              $ref: '#/components/schemas/SiteResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteResource'
    delete:
      tags:
        - SiteService
      summary: DeleteSite
      description: Delete a site.
      operationId: SiteService_DeleteSite
      parameters:
        - name: resourceId
          in: path
          description: Name of the site site to be deleted.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the site site to be deleted.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSiteResponse'
    patch:
      tags:
        - SiteService
      summary: PatchSite
      description: Patch a site.
      operationId: SiteService_PatchSite
      parameters:
        - name: resourceId
          in: path
          description: ID of the resource to be updated.
          required: true
          schema:
            type: string
            title: resourceId
            description: ID of the resource to be updated.
      requestBody:
        description: Updated values for the site.
        content:
          application/json:
            schema:
              title: site
              description: Updated values for the site.
              $ref: '#/components/schemas/SiteResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteResource'
  /edge-infra.orchestrator.apis/v2/locations:
    get:
      tags:
        - LocationService
      summary: ListLocations
      description: Get a list of locations.
      operationId: LocationService_ListLocations
      parameters:
        - name: name
          in: query
          description: Filter locations by name
          schema:
            type: string
            title: name
            maxLength: 50
            pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
            description: (OPTIONAL) Filter locations by name
        - name: showSites
          in: query
          description: Return site locations
          schema:
            type: boolean
            title: show_sites
            description: (OPTIONAL) Return site locations
        - name: showRegions
          in: query
          description: Return region locations
          schema:
            type: boolean
            title: show_regions
            description: (OPTIONAL) Return region locations
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
  /edge-infra.orchestrator.apis/v2/hosts_summary:
    get:
      tags:
        - HostService
      summary: GetHostsSummary
      description: Get a summary of the hosts status.
      operationId: HostService_GetHostsSummary
      parameters:
        - name: filter
          in: query
          description: |-
            Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
          schema:
            type: string
            title: filter
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
            description: |-
              (OPTIONAL) Optional filter to return only item of interest.
               See https://google.aip.dev/160 for details.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHostSummaryResponse'
  /edge-infra.orchestrator.apis/v2/hosts:
    get:
      tags:
        - HostService
      summary: ListHosts
      description: Get a list of hosts.
      operationId: HostService_ListHosts
      parameters:
        - name: orderBy
          in: query
          description: |-
            Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
          schema:
            type: string
            title: order_by
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9., ]+$
            description: |-
              (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
               See https://google.aip.dev/132 for details.
        - name: filter
          in: query
          description: |-
            Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
          schema:
            type: string
            title: filter
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
            description: |-
              (OPTIONAL) Optional filter to return only item of interest.
               See https://google.aip.dev/160 for details.
        - name: pageSize
          in: query
          description: |-
            Defines the amount of items to be contained in a single page.
             Default of 20.
          schema:
            type: integer
            title: page_size
            maximum: 100
            minimum: 1
            description: |-
              (OPTIONAL) Defines the amount of items to be contained in a single page.
               Default of 20.
        - name: offset
          in: query
          description: Index of the first item to return. This allows skipping items.
          schema:
            type: integer
            title: offset
            maximum: 10000
            description: (OPTIONAL) Index of the first item to return. This allows skipping items.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHostsResponse'
    post:
      tags:
        - HostService
      summary: CreateHost
      description: Create a host.
      operationId: HostService_CreateHost
      requestBody:
        description: The host to create.
        content:
          application/json:
            schema:
              title: host
              description: The host to create.
              $ref: '#/components/schemas/HostResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostResource'
  /edge-infra.orchestrator.apis/v2/hosts/{resourceId}:
    get:
      tags:
        - HostService
      summary: GetHost
      description: Get a specific host.
      operationId: HostService_GetHost
      parameters:
        - name: resourceId
          in: path
          description: Name of the requested host.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the requested host.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostResource'
    put:
      tags:
        - HostService
      summary: UpdateHost
      description: Update a host.
      operationId: HostService_UpdateHost
      parameters:
        - name: resourceId
          in: path
          description: Name of the host host to be updated.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the host host to be updated.
      requestBody:
        description: Updated values for the host.
        content:
          application/json:
            schema:
              title: host
              description: Updated values for the host.
              $ref: '#/components/schemas/HostResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostResource'
    delete:
      tags:
        - HostService
      summary: DeleteHost
      description: Delete a host.
      operationId: HostService_DeleteHost
      parameters:
        - name: resourceId
          in: path
          description: Name of the host host to be deleted.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the host host to be deleted.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteHostResponse'
    patch:
      tags:
        - HostService
      summary: PatchHost
      description: Patch a host.
      operationId: HostService_PatchHost
      parameters:
        - name: resourceId
          in: path
          description: ID of the resource to be updated.
          required: true
          schema:
            type: string
            title: resourceId
            description: ID of the resource to be updated.
      requestBody:
        description: Updated values for the host.
        content:
          application/json:
            schema:
              title: host
              description: Updated values for the host.
              $ref: '#/components/schemas/HostResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostResource'
  /edge-infra.orchestrator.apis/v2/hosts/{resourceId}/invalidate:
    put:
      tags:
        - HostService
      summary: InvalidateHost
      description: Invalidate a host.
      operationId: HostService_InvalidateHost
      parameters:
        - name: resourceId
          in: path
          description: Host resource ID
          required: true
          schema:
            type: string
            title: resourceId
            pattern: ^host-[0-9a-f]{8}$
            description: Host resource ID
        - name: note
          in: query
          description: user-provided reason for change or a freeform field
          schema:
            type: string
            title: note
            maxLength: 512
            minLength: 1
            pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()" ]+$
            description: user-provided reason for change or a freeform field
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidateHostResponse'
  /edge-infra.orchestrator.apis/v2/hosts/register:
    post:
      tags:
        - HostService
      summary: RegisterHost
      description: Register a host.
      operationId: HostService_RegisterHost
      requestBody:
        content:
          application/json:
            schema:
              title: host
              $ref: '#/components/schemas/HostRegister'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostResource'
  /edge-infra.orchestrator.apis/v2/hosts/{resourceId}/register:
    patch:
      tags:
        - HostService
      summary: PatchRegisterHost
      description: Update a host registration.
      operationId: HostService_PatchRegisterHost
      parameters:
        - name: resourceId
          in: path
          required: true
          schema:
            type: string
            title: resourceId
            pattern: ^host-[0-9a-f]{8}$
      requestBody:
        content:
          application/json:
            schema:
              title: host
              $ref: '#/components/schemas/HostRegister'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostResource'
  /edge-infra.orchestrator.apis/v2/hosts/{resourceId}/onboard:
    patch:
      tags:
        - HostService
      summary: OnboardHost
      description: Onboard a host.
      operationId: HostService_OnboardHost
      parameters:
        - name: resourceId
          in: path
          description: Host resource ID
          required: true
          schema:
            type: string
            title: resourceId
            pattern: ^host-[0-9a-f]{8}$
            description: Host resource ID
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardHostResponse'
  /edge-infra.orchestrator.apis/v2/instances:
    get:
      tags:
        - InstanceService
      summary: ListInstances
      description: Get a list of instances.
      operationId: InstanceService_ListInstances
      parameters:
        - name: orderBy
          in: query
          description: |-
            Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
          schema:
            type: string
            title: order_by
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9., ]+$
            description: |-
              (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
               See https://google.aip.dev/132 for details.
        - name: filter
          in: query
          description: |-
            Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
          schema:
            type: string
            title: filter
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
            description: |-
              (OPTIONAL) Optional filter to return only item of interest.
               See https://google.aip.dev/160 for details.
        - name: pageSize
          in: query
          description: |-
            Defines the amount of items to be contained in a single page.
             Default of 20.
          schema:
            type: integer
            title: page_size
            maximum: 100
            minimum: 1
            description: |-
              (OPTIONAL) Defines the amount of items to be contained in a single page.
               Default of 20.
        - name: offset
          in: query
          description: Index of the first item to return. This allows skipping items.
          schema:
            type: integer
            title: offset
            maximum: 10000
            description: (OPTIONAL) Index of the first item to return. This allows skipping items.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
    post:
      tags:
        - InstanceService
      summary: CreateInstance
      description: Create a instance.
      operationId: InstanceService_CreateInstance
      requestBody:
        description: The instance to create.
        content:
          application/json:
            schema:
              title: instance
              description: The instance to create.
              $ref: '#/components/schemas/InstanceResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceResource'
  /edge-infra.orchestrator.apis/v2/instances/{resourceId}:
    get:
      tags:
        - InstanceService
      summary: GetInstance
      description: Get a specific instance.
      operationId: InstanceService_GetInstance
      parameters:
        - name: resourceId
          in: path
          description: Name of the requested instance.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the requested instance.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceResource'
    put:
      tags:
        - InstanceService
      summary: UpdateInstance
      description: Update a instance.
      operationId: InstanceService_UpdateInstance
      parameters:
        - name: resourceId
          in: path
          description: ID of the resource to be updated.
          required: true
          schema:
            type: string
            title: resourceId
            description: ID of the resource to be updated.
      requestBody:
        description: Updated values for the instance.
        content:
          application/json:
            schema:
              title: instance
              description: Updated values for the instance.
              $ref: '#/components/schemas/InstanceResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceResource'
    delete:
      tags:
        - InstanceService
      summary: DeleteInstance
      description: Delete a instance.
      operationId: InstanceService_DeleteInstance
      parameters:
        - name: resourceId
          in: path
          description: Name of the instance instance to be deleted.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the instance instance to be deleted.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInstanceResponse'
    patch:
      tags:
        - InstanceService
      summary: PatchInstance
      description: Patch a instance.
      operationId: InstanceService_PatchInstance
      parameters:
        - name: resourceId
          in: path
          description: ID of the resource to be updated.
          required: true
          schema:
            type: string
            title: resourceId
            description: ID of the resource to be updated.
      requestBody:
        description: Updated values for the instance.
        content:
          application/json:
            schema:
              title: instance
              description: Updated values for the instance.
              $ref: '#/components/schemas/InstanceResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceResource'
  /edge-infra.orchestrator.apis/v2/instances/{resourceId}/invalidate:
    put:
      tags:
        - InstanceService
      summary: InvalidateInstance
      description: Invalidate a instance.
      operationId: InstanceService_InvalidateInstance
      parameters:
        - name: resourceId
          in: path
          description: Instance resource ID
          required: true
          schema:
            type: string
            title: resourceId
            pattern: ^inst-[0-9a-f]{8}$
            description: Instance resource ID
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidateInstanceResponse'
  /edge-infra.orchestrator.apis/v2/operating_systems:
    get:
      tags:
        - OperatingSystemService
      summary: ListOperatingSystems
      description: Get a list of OSs.
      operationId: OperatingSystemService_ListOperatingSystems
      parameters:
        - name: orderBy
          in: query
          description: |-
            Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
          schema:
            type: string
            title: order_by
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9., ]+$
            description: |-
              (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
               See https://google.aip.dev/132 for details.
        - name: filter
          in: query
          description: |-
            Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
          schema:
            type: string
            title: filter
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
            description: |-
              (OPTIONAL) Optional filter to return only item of interest.
               See https://google.aip.dev/160 for details.
        - name: pageSize
          in: query
          description: |-
            Defines the amount of items to be contained in a single page.
             Default of 20.
          schema:
            type: integer
            title: page_size
            maximum: 100
            minimum: 1
            description: |-
              (OPTIONAL) Defines the amount of items to be contained in a single page.
               Default of 20.
        - name: offset
          in: query
          description: Index of the first item to return. This allows skipping items.
          schema:
            type: integer
            title: offset
            maximum: 10000
            description: (OPTIONAL) Index of the first item to return. This allows skipping items.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperatingSystemsResponse'
    post:
      tags:
        - OperatingSystemService
      summary: CreateOperatingSystem
      description: Create an OS
      operationId: OperatingSystemService_CreateOperatingSystem
      requestBody:
        description: The os to create.
        content:
          application/json:
            schema:
              title: os
              description: The os to create.
              $ref: '#/components/schemas/OperatingSystemResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatingSystemResource'
  /edge-infra.orchestrator.apis/v2/operating_systems/{resourceId}:
    get:
      tags:
        - OperatingSystemService
      summary: GetOperatingSystem
      description: Get a specific OS.
      operationId: OperatingSystemService_GetOperatingSystem
      parameters:
        - name: resourceId
          in: path
          description: Name of the requested os.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the requested os.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatingSystemResource'
    put:
      tags:
        - OperatingSystemService
      summary: UpdateOperatingSystem
      description: Update an OS.
      operationId: OperatingSystemService_UpdateOperatingSystem
      parameters:
        - name: resourceId
          in: path
          description: Name of the os os to be updated.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the os os to be updated.
      requestBody:
        description: Updated values for the os.
        content:
          application/json:
            schema:
              title: os
              description: Updated values for the os.
              $ref: '#/components/schemas/OperatingSystemResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatingSystemResource'
    delete:
      tags:
        - OperatingSystemService
      summary: DeleteOperatingSystem
      description: Delete an OS.
      operationId: OperatingSystemService_DeleteOperatingSystem
      parameters:
        - name: resourceId
          in: path
          description: Name of the os os to be deleted.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the os os to be deleted.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOperatingSystemResponse'
    patch:
      tags:
        - OperatingSystemService
      summary: PatchOperatingSystem
      description: Patch an OS.
      operationId: OperatingSystemService_PatchOperatingSystem
      parameters:
        - name: resourceId
          in: path
          description: ID of the resource to be updated.
          required: true
          schema:
            type: string
            title: resourceId
            description: ID of the resource to be updated.
      requestBody:
        description: Updated values for the os.
        content:
          application/json:
            schema:
              title: os
              description: Updated values for the os.
              $ref: '#/components/schemas/OperatingSystemResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatingSystemResource'
  /edge-infra.orchestrator.apis/v2/providers:
    get:
      tags:
        - ProviderService
      summary: ListProviders
      description: Get a list of providers.
      operationId: ProviderService_ListProviders
      parameters:
        - name: orderBy
          in: query
          description: |-
            Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
          schema:
            type: string
            title: order_by
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9., ]+$
            description: |-
              (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
               See https://google.aip.dev/132 for details.
        - name: filter
          in: query
          description: |-
            Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
          schema:
            type: string
            title: filter
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
            description: |-
              (OPTIONAL) Optional filter to return only item of interest.
               See https://google.aip.dev/160 for details.
        - name: pageSize
          in: query
          description: |-
            Defines the amount of items to be contained in a single page.
             Default of 20.
          schema:
            type: integer
            title: page_size
            maximum: 100
            minimum: 1
            description: |-
              (OPTIONAL) Defines the amount of items to be contained in a single page.
               Default of 20.
        - name: offset
          in: query
          description: Index of the first item to return. This allows skipping items.
          schema:
            type: integer
            title: offset
            maximum: 10000
            description: (OPTIONAL) Index of the first item to return. This allows skipping items.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProvidersResponse'
    post:
      tags:
        - ProviderService
      summary: CreateProvider
      description: Create a provider.
      operationId: ProviderService_CreateProvider
      requestBody:
        description: The provider to create.
        content:
          application/json:
            schema:
              title: provider
              description: The provider to create.
              $ref: '#/components/schemas/ProviderResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderResource'
  /edge-infra.orchestrator.apis/v2/providers/{resourceId}:
    get:
      tags:
        - ProviderService
      summary: GetProvider
      description: Get a specific provider.
      operationId: ProviderService_GetProvider
      parameters:
        - name: resourceId
          in: path
          description: Name of the requested provider.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the requested provider.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderResource'
    delete:
      tags:
        - ProviderService
      summary: DeleteProvider
      description: Delete a provider.
      operationId: ProviderService_DeleteProvider
      parameters:
        - name: resourceId
          in: path
          description: Name of the provider provider to be deleted.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the provider provider to be deleted.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProviderResponse'
  /edge-infra.orchestrator.apis/v2/workloads:
    get:
      tags:
        - WorkloadService
      summary: ListWorkloads
      description: Get a list of workloads.
      operationId: WorkloadService_ListWorkloads
      parameters:
        - name: orderBy
          in: query
          description: |-
            Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
          schema:
            type: string
            title: order_by
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9., ]+$
            description: |-
              (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
               See https://google.aip.dev/132 for details.
        - name: filter
          in: query
          description: |-
            Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
          schema:
            type: string
            title: filter
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
            description: |-
              (OPTIONAL) Optional filter to return only item of interest.
               See https://google.aip.dev/160 for details.
        - name: pageSize
          in: query
          description: |-
            Defines the amount of items to be contained in a single page.
             Default of 20.
          schema:
            type: integer
            title: page_size
            maximum: 100
            minimum: 1
            description: |-
              (OPTIONAL) Defines the amount of items to be contained in a single page.
               Default of 20.
        - name: offset
          in: query
          description: Index of the first item to return. This allows skipping items.
          schema:
            type: integer
            title: offset
            maximum: 10000
            description: (OPTIONAL) Index of the first item to return. This allows skipping items.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkloadsResponse'
    post:
      tags:
        - WorkloadService
      summary: CreateWorkload
      description: Create a workload.
      operationId: WorkloadService_CreateWorkload
      requestBody:
        description: The workload to create.
        content:
          application/json:
            schema:
              title: workload
              description: The workload to create.
              $ref: '#/components/schemas/WorkloadResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadResource'
  /edge-infra.orchestrator.apis/v2/workloads/{resourceId}:
    get:
      tags:
        - WorkloadService
      summary: GetWorkload
      description: Get a specific workload.
      operationId: WorkloadService_GetWorkload
      parameters:
        - name: resourceId
          in: path
          description: Name of the requested workload.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the requested workload.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadResource'
    put:
      tags:
        - WorkloadService
      summary: UpdateWorkload
      description: Update a workload.
      operationId: WorkloadService_UpdateWorkload
      parameters:
        - name: resourceId
          in: path
          description: Name of the workload workload to be updated.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the workload workload to be updated.
      requestBody:
        description: Updated values for the workload.
        content:
          application/json:
            schema:
              title: workload
              description: Updated values for the workload.
              $ref: '#/components/schemas/WorkloadResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadResource'
    delete:
      tags:
        - WorkloadService
      summary: DeleteWorkload
      description: Delete a workload.
      operationId: WorkloadService_DeleteWorkload
      parameters:
        - name: resourceId
          in: path
          description: Name of the workload workload to be deleted.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the workload workload to be deleted.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWorkloadResponse'
    patch:
      tags:
        - WorkloadService
      summary: PatchWorkload
      description: Patch a workload.
      operationId: WorkloadService_PatchWorkload
      parameters:
        - name: resourceId
          in: path
          description: ID of the resource to be updated.
          required: true
          schema:
            type: string
            title: resourceId
            description: ID of the resource to be updated.
      requestBody:
        description: Updated values for the workload.
        content:
          application/json:
            schema:
              title: workload
              description: Updated values for the workload.
              $ref: '#/components/schemas/WorkloadResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadResource'
  /edge-infra.orchestrator.apis/v2/workload_members:
    get:
      tags:
        - WorkloadMemberService
      summary: ListWorkloadMembers
      description: Get a list of workload_members.
      operationId: WorkloadMemberService_ListWorkloadMembers
      parameters:
        - name: orderBy
          in: query
          description: |-
            Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
          schema:
            type: string
            title: order_by
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9., ]+$
            description: |-
              (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
               See https://google.aip.dev/132 for details.
        - name: filter
          in: query
          description: |-
            Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
          schema:
            type: string
            title: filter
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
            description: |-
              (OPTIONAL) Optional filter to return only item of interest.
               See https://google.aip.dev/160 for details.
        - name: pageSize
          in: query
          description: |-
            Defines the amount of items to be contained in a single page.
             Default of 20.
          schema:
            type: integer
            title: page_size
            maximum: 100
            minimum: 1
            description: |-
              (OPTIONAL) Defines the amount of items to be contained in a single page.
               Default of 20.
        - name: offset
          in: query
          description: Index of the first item to return. This allows skipping items.
          schema:
            type: integer
            title: offset
            maximum: 10000
            description: (OPTIONAL) Index of the first item to return. This allows skipping items.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkloadMembersResponse'
    post:
      tags:
        - WorkloadMemberService
      summary: CreateWorkloadMember
      description: Create a workload_member.
      operationId: WorkloadMemberService_CreateWorkloadMember
      requestBody:
        description: The workload_member to create.
        content:
          application/json:
            schema:
              title: workload_member
              description: The workload_member to create.
              $ref: '#/components/schemas/WorkloadMember'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadMember'
  /edge-infra.orchestrator.apis/v2/workload_members/{resourceId}:
    get:
      tags:
        - WorkloadMemberService
      summary: GetWorkloadMember
      description: Get a specific workload_member.
      operationId: WorkloadMemberService_GetWorkloadMember
      parameters:
        - name: resourceId
          in: path
          description: Name of the requested workload_member.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the requested workload_member.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadMember'
    delete:
      tags:
        - WorkloadMemberService
      summary: DeleteWorkloadMember
      description: Delete a workload_member.
      operationId: WorkloadMemberService_DeleteWorkloadMember
      parameters:
        - name: resourceId
          in: path
          description: Name of the workload_member workload_member to be deleted.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the workload_member workload_member to be deleted.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWorkloadMemberResponse'
  /edge-infra.orchestrator.apis/v2/schedules:
    get:
      tags:
        - ScheduleService
      summary: ListSchedules
      description: Get a list of schedules (single/repeated).
      operationId: ScheduleService_ListSchedules
      parameters:
        - name: pageSize
          in: query
          description: |-
            Defines the amount of items to be contained in a single page.
             Default of 20.
          schema:
            type: integer
            title: page_size
            maximum: 100
            minimum: 1
            description: |-
              (OPTIONAL) Defines the amount of items to be contained in a single page.
               Default of 20.
        - name: offset
          in: query
          description: Index of the first item to return. This allows skipping items.
          schema:
            type: integer
            title: offset
            maximum: 10000
            description: (OPTIONAL) Index of the first item to return. This allows skipping items.
        - name: hostId
          in: query
          description: |-
            The host ID target of the schedules. If not specified, returns all schedules
             (given the other query params). If specified, returns the schedules that have
             the specified host ID applied to them, i.e., target including the inherited ones
             (parent site if not null). If null, returns all the schedules without a host ID as target.
          schema:
            type: string
            title: host_id
            pattern: ^host-[0-9a-f]{8}$
            description: |-
              (OPTIONAL) The host ID target of the schedules. If not specified, returns all schedules
               (given the other query params). If specified, returns the schedules that have
               the specified host ID applied to them, i.e., target including the inherited ones
               (parent site if not null). If null, returns all the schedules without a host ID as target.
        - name: siteId
          in: query
          description: |-
            The site ID target of the schedules. If not specified, returns all schedules
             (given the other query params). If specified, returns the schedules that have
             the specified site ID applied to them, i.e., target including the inherited ones.
             If null, returns all the schedules without a site ID as target
          schema:
            type: string
            title: site_id
            pattern: ^site-[0-9a-f]{8}$
            description: |-
              (OPTIONAL) The site ID target of the schedules. If not specified, returns all schedules
               (given the other query params). If specified, returns the schedules that have
               the specified site ID applied to them, i.e., target including the inherited ones.
               If null, returns all the schedules without a site ID as target
        - name: regionId
          in: query
          description: |-
            The region ID target of the schedules. If not specified,
             returns all schedules (given the other query params).
             If specified, returns the schedules that have the specified region ID applied to them,
             i.e., target including the inherited ones (parent region if not null).
             If null, returns all the schedules without a region ID as target.
          schema:
            type: string
            title: region_id
            pattern: ^region-[0-9a-f]{8}$
            description: |-
              (OPTIONAL) The region ID target of the schedules. If not specified,
               returns all schedules (given the other query params).
               If specified, returns the schedules that have the specified region ID applied to them,
               i.e., target including the inherited ones (parent region if not null).
               If null, returns all the schedules without a region ID as target.
        - name: unixEpoch
          in: query
          description: Filter based on the timestamp, expected to be UNIX epoch UTC timestamp in seconds.
          schema:
            type: string
            title: unix_epoch
            pattern: ^[0-9]+$
            description: (OPTIONAL) Filter based on the timestamp, expected to be UNIX epoch UTC timestamp in seconds.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSchedulesResponse'
  /edge-infra.orchestrator.apis/v2/schedules/single:
    get:
      tags:
        - ScheduleService
      summary: ListSingleSchedules
      description: Get a list of singleSchedules.
      operationId: ScheduleService_ListSingleSchedules
      parameters:
        - name: pageSize
          in: query
          description: |-
            Defines the amount of items to be contained in a single page.
             Default of 20.
          schema:
            type: integer
            title: page_size
            maximum: 100
            minimum: 1
            description: |-
              (OPTIONAL) Defines the amount of items to be contained in a single page.
               Default of 20.
        - name: offset
          in: query
          description: Index of the first item to return. This allows skipping items.
          schema:
            type: integer
            title: offset
            maximum: 10000
            description: (OPTIONAL) Index of the first item to return. This allows skipping items.
        - name: hostId
          in: query
          description: |-
            The host ID target of the schedules. If not specified, returns all schedules
             (given the other query params). If specified, returns the schedules that have
             the specified host ID applied to them, i.e., target including the inherited ones
             (parent site if not null). If null, returns all the schedules without a host ID as target.
          schema:
            type: string
            title: host_id
            pattern: ^host-[0-9a-f]{8}$
            description: |-
              (OPTIONAL) The host ID target of the schedules. If not specified, returns all schedules
               (given the other query params). If specified, returns the schedules that have
               the specified host ID applied to them, i.e., target including the inherited ones
               (parent site if not null). If null, returns all the schedules without a host ID as target.
        - name: siteId
          in: query
          description: |-
            The site ID target of the schedules. If not specified, returns all schedules
             (given the other query params). If specified, returns the schedules that have
             the specified site ID applied to them, i.e., target including the inherited ones.
             If null, returns all the schedules without a site ID as target
          schema:
            type: string
            title: site_id
            pattern: ^site-[0-9a-f]{8}$
            description: |-
              (OPTIONAL) The site ID target of the schedules. If not specified, returns all schedules
               (given the other query params). If specified, returns the schedules that have
               the specified site ID applied to them, i.e., target including the inherited ones.
               If null, returns all the schedules without a site ID as target
        - name: regionId
          in: query
          description: |-
            The region ID target of the schedules. If not specified,
             returns all schedules (given the other query params).
             If specified, returns the schedules that have the specified region ID applied to them,
             i.e., target including the inherited ones (parent region if not null).
             If null, returns all the schedules without a region ID as target.
          schema:
            type: string
            title: region_id
            pattern: ^region-[0-9a-f]{8}$
            description: |-
              (OPTIONAL) The region ID target of the schedules. If not specified,
               returns all schedules (given the other query params).
               If specified, returns the schedules that have the specified region ID applied to them,
               i.e., target including the inherited ones (parent region if not null).
               If null, returns all the schedules without a region ID as target.
        - name: unixEpoch
          in: query
          description: Filter based on the timestamp, expected to be UNIX epoch UTC timestamp in seconds.
          schema:
            type: string
            title: unix_epoch
            pattern: ^[0-9]+$
            description: (OPTIONAL) Filter based on the timestamp, expected to be UNIX epoch UTC timestamp in seconds.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSingleSchedulesResponse'
    post:
      tags:
        - ScheduleService
      summary: CreateSingleSchedule
      description: Create a single_schedule.
      operationId: ScheduleService_CreateSingleSchedule
      requestBody:
        description: The single_schedule to create.
        content:
          application/json:
            schema:
              title: single_schedule
              description: The single_schedule to create.
              $ref: '#/components/schemas/SingleScheduleResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleScheduleResource'
  /edge-infra.orchestrator.apis/v2/schedules/single/{resourceId}:
    get:
      tags:
        - ScheduleService
      summary: GetSingleSchedule
      description: Get a specific single_schedule.
      operationId: ScheduleService_GetSingleSchedule
      parameters:
        - name: resourceId
          in: path
          description: Name of the requested single_schedule.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the requested single_schedule.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleScheduleResource'
    put:
      tags:
        - ScheduleService
      summary: UpdateSingleSchedule
      description: Update a single_schedule.
      operationId: ScheduleService_UpdateSingleSchedule
      parameters:
        - name: resourceId
          in: path
          description: Name of the single_schedule single_schedule to be updated.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the single_schedule single_schedule to be updated.
      requestBody:
        description: Updated values for the single_schedule.
        content:
          application/json:
            schema:
              title: single_schedule
              description: Updated values for the single_schedule.
              $ref: '#/components/schemas/SingleScheduleResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleScheduleResource'
    delete:
      tags:
        - ScheduleService
      summary: DeleteSingleSchedule
      description: Delete a single_schedule.
      operationId: ScheduleService_DeleteSingleSchedule
      parameters:
        - name: resourceId
          in: path
          description: Name of the single_schedule single_schedule to be deleted.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the single_schedule single_schedule to be deleted.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSingleScheduleResponse'
    patch:
      tags:
        - ScheduleService
      summary: PatchSingleSchedule
      description: Patch a single_schedule.
      operationId: ScheduleService_PatchSingleSchedule
      parameters:
        - name: resourceId
          in: path
          description: ID of the resource to be updated.
          required: true
          schema:
            type: string
            title: resourceId
            description: ID of the resource to be updated.
      requestBody:
        description: Updated values for the single_schedule.
        content:
          application/json:
            schema:
              title: single_schedule
              description: Updated values for the single_schedule.
              $ref: '#/components/schemas/SingleScheduleResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleScheduleResource'
  /edge-infra.orchestrator.apis/v2/schedules/repeated:
    get:
      tags:
        - ScheduleService
      summary: ListRepeatedSchedules
      description: Get a list of repeatedSchedules.
      operationId: ScheduleService_ListRepeatedSchedules
      parameters:
        - name: pageSize
          in: query
          description: |-
            Defines the amount of items to be contained in a single page.
             Default of 20.
          schema:
            type: integer
            title: page_size
            maximum: 100
            minimum: 1
            description: |-
              (OPTIONAL) Defines the amount of items to be contained in a single page.
               Default of 20.
        - name: offset
          in: query
          description: Index of the first item to return. This allows skipping items.
          schema:
            type: integer
            title: offset
            maximum: 10000
            description: (OPTIONAL) Index of the first item to return. This allows skipping items.
        - name: hostId
          in: query
          description: |-
            The host ID target of the schedules. If not specified, returns all schedules
             (given the other query params). If specified, returns the schedules that have
             the specified host ID applied to them, i.e., target including the inherited ones
             (parent site if not null). If null, returns all the schedules without a host ID as target.
          schema:
            type: string
            title: host_id
            pattern: ^host-[0-9a-f]{8}$
            description: |-
              (OPTIONAL) The host ID target of the schedules. If not specified, returns all schedules
               (given the other query params). If specified, returns the schedules that have
               the specified host ID applied to them, i.e., target including the inherited ones
               (parent site if not null). If null, returns all the schedules without a host ID as target.
        - name: siteId
          in: query
          description: |-
            The site ID target of the schedules. If not specified, returns all schedules
             (given the other query params). If specified, returns the schedules that have
             the specified site ID applied to them, i.e., target including the inherited ones.
             If null, returns all the schedules without a site ID as target
          schema:
            type: string
            title: site_id
            pattern: ^site-[0-9a-f]{8}$
            description: |-
              (OPTIONAL) The site ID target of the schedules. If not specified, returns all schedules
               (given the other query params). If specified, returns the schedules that have
               the specified site ID applied to them, i.e., target including the inherited ones.
               If null, returns all the schedules without a site ID as target
        - name: regionId
          in: query
          description: |-
            The region ID target of the schedules. If not specified,
             returns all schedules (given the other query params).
             If specified, returns the schedules that have the specified region ID applied to them,
             i.e., target including the inherited ones (parent region if not null).
             If null, returns all the schedules without a region ID as target.
          schema:
            type: string
            title: region_id
            pattern: ^region-[0-9a-f]{8}$
            description: |-
              (OPTIONAL) The region ID target of the schedules. If not specified,
               returns all schedules (given the other query params).
               If specified, returns the schedules that have the specified region ID applied to them,
               i.e., target including the inherited ones (parent region if not null).
               If null, returns all the schedules without a region ID as target.
        - name: unixEpoch
          in: query
          description: Filter based on the timestamp, expected to be UNIX epoch UTC timestamp in seconds.
          schema:
            type: string
            title: unix_epoch
            pattern: ^[0-9]+$
            description: (OPTIONAL) Filter based on the timestamp, expected to be UNIX epoch UTC timestamp in seconds.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepeatedSchedulesResponse'
    post:
      tags:
        - ScheduleService
      summary: CreateRepeatedSchedule
      description: Create a repeated_schedule.
      operationId: ScheduleService_CreateRepeatedSchedule
      requestBody:
        description: The repeated_schedule to create.
        content:
          application/json:
            schema:
              title: repeated_schedule
              description: The repeated_schedule to create.
              $ref: '#/components/schemas/RepeatedScheduleResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepeatedScheduleResource'
  /edge-infra.orchestrator.apis/v2/schedules/repeated/{resourceId}:
    get:
      tags:
        - ScheduleService
      summary: GetRepeatedSchedule
      description: Get a specific repeated_schedule.
      operationId: ScheduleService_GetRepeatedSchedule
      parameters:
        - name: resourceId
          in: path
          description: Name of the requested repeated_schedule.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the requested repeated_schedule.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepeatedScheduleResource'
    put:
      tags:
        - ScheduleService
      summary: UpdateRepeatedSchedule
      description: Update a repeated_schedule.
      operationId: ScheduleService_UpdateRepeatedSchedule
      parameters:
        - name: resourceId
          in: path
          description: Name of the repeated_schedule repeated_schedule to be updated.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the repeated_schedule repeated_schedule to be updated.
      requestBody:
        description: Updated values for the repeated_schedule.
        content:
          application/json:
            schema:
              title: repeated_schedule
              description: Updated values for the repeated_schedule.
              $ref: '#/components/schemas/RepeatedScheduleResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepeatedScheduleResource'
    delete:
      tags:
        - ScheduleService
      summary: DeleteRepeatedSchedule
      description: Delete a repeated_schedule.
      operationId: ScheduleService_DeleteRepeatedSchedule
      parameters:
        - name: resourceId
          in: path
          description: Name of the repeated_schedule repeated_schedule to be deleted.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the repeated_schedule repeated_schedule to be deleted.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRepeatedScheduleResponse'
    patch:
      tags:
        - ScheduleService
      summary: PatchRepeatedSchedule
      description: Patch a repeated_schedule.
      operationId: ScheduleService_PatchRepeatedSchedule
      parameters:
        - name: resourceId
          in: path
          description: ID of the resource to be updated.
          required: true
          schema:
            type: string
            title: resourceId
            description: ID of the resource to be updated.
      requestBody:
        description: Updated values for the repeated_schedule.
        content:
          application/json:
            schema:
              title: repeated_schedule
              description: Updated values for the repeated_schedule.
              $ref: '#/components/schemas/RepeatedScheduleResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepeatedScheduleResource'
  /edge-infra.orchestrator.apis/v2/telemetry/groups/logs:
    get:
      tags:
        - TelemetryLogsGroupService
      summary: ListTelemetryLogsGroups
      description: Get a list of telemetry_logs_groups.
      operationId: TelemetryLogsGroupService_ListTelemetryLogsGroups
      parameters:
        - name: pageSize
          in: query
          description: |-
            Defines the amount of items to be contained in a single page.
             Default of 20.
          schema:
            type: integer
            title: page_size
            maximum: 100
            minimum: 1
            description: |-
              (OPTIONAL) Defines the amount of items to be contained in a single page.
               Default of 20.
        - name: offset
          in: query
          description: Index of the first item to return. This allows skipping items.
          schema:
            type: integer
            title: offset
            maximum: 10000
            description: (OPTIONAL) Index of the first item to return. This allows skipping items.
        - name: orderBy
          in: query
          description: |-
            Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
          schema:
            type: string
            title: order_by
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9., ]+$
            description: |-
              (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
               See https://google.aip.dev/132 for details.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTelemetryLogsGroupsResponse'
    post:
      tags:
        - TelemetryLogsGroupService
      summary: CreateTelemetryLogsGroup
      description: Create a telemetry_logs_group.
      operationId: TelemetryLogsGroupService_CreateTelemetryLogsGroup
      requestBody:
        description: The telemetry_logs_group to create.
        content:
          application/json:
            schema:
              title: telemetry_logs_group
              description: The telemetry_logs_group to create.
              $ref: '#/components/schemas/TelemetryLogsGroupResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryLogsGroupResource'
  /edge-infra.orchestrator.apis/v2/telemetry/groups/logs/{resourceId}:
    get:
      tags:
        - TelemetryLogsGroupService
      summary: GetTelemetryLogsGroup
      description: Get a specific telemetry_logs_group.
      operationId: TelemetryLogsGroupService_GetTelemetryLogsGroup
      parameters:
        - name: resourceId
          in: path
          description: Name of the requested telemetry_logs_group.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the requested telemetry_logs_group.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryLogsGroupResource'
    delete:
      tags:
        - TelemetryLogsGroupService
      summary: DeleteTelemetryLogsGroup
      description: Delete a telemetry_logs_group.
      operationId: TelemetryLogsGroupService_DeleteTelemetryLogsGroup
      parameters:
        - name: resourceId
          in: path
          description: Name of the telemetry_logs_group telemetry_logs_group to be deleted.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the telemetry_logs_group telemetry_logs_group to be deleted.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTelemetryLogsGroupResponse'
  /edge-infra.orchestrator.apis/v2/telemetry/groups/metrics:
    get:
      tags:
        - TelemetryMetricsGroupService
      summary: ListTelemetryMetricsGroups
      description: Get a list of telemetryMetricsGroups.
      operationId: TelemetryMetricsGroupService_ListTelemetryMetricsGroups
      parameters:
        - name: pageSize
          in: query
          description: |-
            Defines the amount of items to be contained in a single page.
             Default of 20.
          schema:
            type: integer
            title: page_size
            maximum: 100
            minimum: 1
            description: |-
              (OPTIONAL) Defines the amount of items to be contained in a single page.
               Default of 20.
        - name: offset
          in: query
          description: Index of the first item to return. This allows skipping items.
          schema:
            type: integer
            title: offset
            maximum: 10000
            description: (OPTIONAL) Index of the first item to return. This allows skipping items.
        - name: orderBy
          in: query
          description: |-
            Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
          schema:
            type: string
            title: order_by
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9., ]+$
            description: |-
              (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
               See https://google.aip.dev/132 for details.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTelemetryMetricsGroupsResponse'
    post:
      tags:
        - TelemetryMetricsGroupService
      summary: CreateTelemetryMetricsGroup
      description: Create a telemetry_metrics_group.
      operationId: TelemetryMetricsGroupService_CreateTelemetryMetricsGroup
      requestBody:
        description: The telemetry_metrics_group to create.
        content:
          application/json:
            schema:
              title: telemetry_metrics_group
              description: The telemetry_metrics_group to create.
              $ref: '#/components/schemas/TelemetryMetricsGroupResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryMetricsGroupResource'
  /edge-infra.orchestrator.apis/v2/telemetry/groups/metrics/{resourceId}:
    get:
      tags:
        - TelemetryMetricsGroupService
      summary: GetTelemetryMetricsGroup
      description: Get a specific telemetry_metrics_group.
      operationId: TelemetryMetricsGroupService_GetTelemetryMetricsGroup
      parameters:
        - name: resourceId
          in: path
          description: Name of the requested telemetry_metrics_group.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the requested telemetry_metrics_group.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryMetricsGroupResource'
    delete:
      tags:
        - TelemetryMetricsGroupService
      summary: DeleteTelemetryMetricsGroup
      description: Delete a telemetry_metrics_group.
      operationId: TelemetryMetricsGroupService_DeleteTelemetryMetricsGroup
      parameters:
        - name: resourceId
          in: path
          description: Name of the telemetry_metrics_group telemetry_metrics_group to be deleted.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the telemetry_metrics_group telemetry_metrics_group to be deleted.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTelemetryMetricsGroupResponse'
  /edge-infra.orchestrator.apis/v2/telemetry/profiles/logs:
    get:
      tags:
        - TelemetryLogsProfileService
      summary: ListTelemetryLogsProfiles
      description: Get a list of telemetryLogsProfiles.
      operationId: TelemetryLogsProfileService_ListTelemetryLogsProfiles
      parameters:
        - name: pageSize
          in: query
          description: |-
            Defines the amount of items to be contained in a single page.
             Default of 20.
          schema:
            type: integer
            title: page_size
            maximum: 100
            minimum: 1
            description: |-
              (OPTIONAL) Defines the amount of items to be contained in a single page.
               Default of 20.
        - name: offset
          in: query
          description: Index of the first item to return. This allows skipping items.
          schema:
            type: integer
            title: offset
            maximum: 10000
            description: (OPTIONAL) Index of the first item to return. This allows skipping items.
        - name: orderBy
          in: query
          description: |-
            Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
          schema:
            type: string
            title: order_by
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9., ]+$
            description: |-
              (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
               See https://google.aip.dev/132 for details.
        - name: instanceId
          in: query
          description: Returns only the telemetry profiles that are assigned with the given instance identifier.
          schema:
            type: string
            title: instance_id
            pattern: ^inst-[0-9a-f]{8}$
            description: (OPTIONAL) Returns only the telemetry profiles that are assigned with the given instance identifier.
        - name: siteId
          in: query
          description: Returns only the telemetry profiles that are assigned with the given siteID.
          schema:
            type: string
            title: site_id
            pattern: ^site-[0-9a-f]{8}$
            description: (OPTIONAL) Returns only the telemetry profiles that are assigned with the given siteID.
        - name: regionId
          in: query
          description: Returns only the telemetry profiles that are assigned with the given regionID.
          schema:
            type: string
            title: region_id
            pattern: ^region-[0-9a-f]{8}$
            description: (OPTIONAL) Returns only the telemetry profiles that are assigned with the given regionID.
        - name: showInherited
          in: query
          description: |-
            Indicates if listed telemetry profiles should be extended with telemetry
             profiles rendered from hierarchy. This flag is only used along with one
             of siteId, regionId or instanceId. If siteId, regionId or instanceId are
             not set, this flag is ignored.
          schema:
            type: boolean
            title: show_inherited
            description: |-
              (OPTIONAL) Indicates if listed telemetry profiles should be extended with telemetry
               profiles rendered from hierarchy. This flag is only used along with one
               of siteId, regionId or instanceId. If siteId, regionId or instanceId are
               not set, this flag is ignored.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTelemetryLogsProfilesResponse'
    post:
      tags:
        - TelemetryLogsProfileService
      summary: CreateTelemetryLogsProfile
      description: Create a telemetry_logs_profile.
      operationId: TelemetryLogsProfileService_CreateTelemetryLogsProfile
      requestBody:
        description: The telemetry_logs_profile to create.
        content:
          application/json:
            schema:
              title: telemetry_logs_profile
              description: The telemetry_logs_profile to create.
              $ref: '#/components/schemas/TelemetryLogsProfileResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryLogsProfileResource'
  /edge-infra.orchestrator.apis/v2/telemetry/profiles/logs/{resourceId}:
    get:
      tags:
        - TelemetryLogsProfileService
      summary: GetTelemetryLogsProfile
      description: Get a specific telemetry_logs_profile.
      operationId: TelemetryLogsProfileService_GetTelemetryLogsProfile
      parameters:
        - name: resourceId
          in: path
          description: Name of the requested telemetry_logs_profile.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the requested telemetry_logs_profile.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryLogsProfileResource'
    put:
      tags:
        - TelemetryLogsProfileService
      summary: UpdateTelemetryLogsProfile
      description: Update a telemetry_logs_profile.
      operationId: TelemetryLogsProfileService_UpdateTelemetryLogsProfile
      parameters:
        - name: resourceId
          in: path
          description: Name of the telemetry_logs_profile telemetry_logs_profile to be updated.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the telemetry_logs_profile telemetry_logs_profile to be updated.
      requestBody:
        description: Updated values for the telemetry_logs_profile.
        content:
          application/json:
            schema:
              title: telemetry_logs_profile
              description: Updated values for the telemetry_logs_profile.
              $ref: '#/components/schemas/TelemetryLogsProfileResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryLogsProfileResource'
    delete:
      tags:
        - TelemetryLogsProfileService
      summary: DeleteTelemetryLogsProfile
      description: Delete a telemetry_logs_profile.
      operationId: TelemetryLogsProfileService_DeleteTelemetryLogsProfile
      parameters:
        - name: resourceId
          in: path
          description: Name of the telemetry_logs_profile telemetry_logs_profile to be deleted.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the telemetry_logs_profile telemetry_logs_profile to be deleted.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTelemetryLogsProfileResponse'
    patch:
      tags:
        - TelemetryLogsProfileService
      summary: PatchTelemetryLogsProfile
      description: Patch a telemetry_logs_profile.
      operationId: TelemetryLogsProfileService_PatchTelemetryLogsProfile
      parameters:
        - name: resourceId
          in: path
          description: ID of the resource to be updated.
          required: true
          schema:
            type: string
            title: resourceId
            description: ID of the resource to be updated.
      requestBody:
        description: Updated values for the telemetry_logs_profile.
        content:
          application/json:
            schema:
              title: telemetry_logs_profile
              description: Updated values for the telemetry_logs_profile.
              $ref: '#/components/schemas/TelemetryLogsProfileResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryLogsProfileResource'
  /edge-infra.orchestrator.apis/v2/telemetry/profiles/metrics:
    get:
      tags:
        - TelemetryMetricsProfileService
      summary: ListTelemetryMetricsProfiles
      description: Get a list of telemetryMetricsProfiles.
      operationId: TelemetryMetricsProfileService_ListTelemetryMetricsProfiles
      parameters:
        - name: pageSize
          in: query
          description: |-
            Defines the amount of items to be contained in a single page.
             Default of 20.
          schema:
            type: integer
            title: page_size
            maximum: 100
            minimum: 1
            description: |-
              (OPTIONAL) Defines the amount of items to be contained in a single page.
               Default of 20.
        - name: offset
          in: query
          description: Index of the first item to return. This allows skipping items.
          schema:
            type: integer
            title: offset
            maximum: 10000
            description: (OPTIONAL) Index of the first item to return. This allows skipping items.
        - name: orderBy
          in: query
          description: |-
            Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
          schema:
            type: string
            title: order_by
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9., ]+$
            description: |-
              (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
               See https://google.aip.dev/132 for details.
        - name: instanceId
          in: query
          description: Returns only the telemetry profiles that are assigned with the given instance identifier.
          schema:
            type: string
            title: instance_id
            pattern: ^inst-[0-9a-f]{8}$
            description: (OPTIONAL) Returns only the telemetry profiles that are assigned with the given instance identifier.
        - name: siteId
          in: query
          description: Returns only the telemetry profiles that are assigned with the given siteID.
          schema:
            type: string
            title: site_id
            pattern: ^site-[0-9a-f]{8}$
            description: (OPTIONAL) Returns only the telemetry profiles that are assigned with the given siteID.
        - name: regionId
          in: query
          description: Returns only the telemetry profiles that are assigned with the given regionID.
          schema:
            type: string
            title: region_id
            pattern: ^region-[0-9a-f]{8}$
            description: (OPTIONAL) Returns only the telemetry profiles that are assigned with the given regionID.
        - name: showInherited
          in: query
          description: |-
            Indicates if listed telemetry profiles should be extended with telemetry
             profiles rendered from hierarchy. This flag is only used along with one
             of siteId, regionId or instanceId. If siteId, regionId or instanceId are
             not set, this flag is ignored.
          schema:
            type: boolean
            title: show_inherited
            description: |-
              (OPTIONAL) Indicates if listed telemetry profiles should be extended with telemetry
               profiles rendered from hierarchy. This flag is only used along with one
               of siteId, regionId or instanceId. If siteId, regionId or instanceId are
               not set, this flag is ignored.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTelemetryMetricsProfilesResponse'
    post:
      tags:
        - TelemetryMetricsProfileService
      summary: CreateTelemetryMetricsProfile
      description: Create a telemetry_metrics_profile.
      operationId: TelemetryMetricsProfileService_CreateTelemetryMetricsProfile
      requestBody:
        description: The telemetry_metrics_profile to create.
        content:
          application/json:
            schema:
              title: telemetry_metrics_profile
              description: The telemetry_metrics_profile to create.
              $ref: '#/components/schemas/TelemetryMetricsProfileResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryMetricsProfileResource'
  /edge-infra.orchestrator.apis/v2/telemetry/profiles/metrics/{resourceId}:
    get:
      tags:
        - TelemetryMetricsProfileService
      summary: GetTelemetryMetricsProfile
      description: Get a specific telemetry_metrics_profile.
      operationId: TelemetryMetricsProfileService_GetTelemetryMetricsProfile
      parameters:
        - name: resourceId
          in: path
          description: Name of the requested telemetry_metrics_profile.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the requested telemetry_metrics_profile.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryMetricsProfileResource'
    put:
      tags:
        - TelemetryMetricsProfileService
      summary: UpdateTelemetryMetricsProfile
      description: Update a telemetry_metrics_profile.
      operationId: TelemetryMetricsProfileService_UpdateTelemetryMetricsProfile
      parameters:
        - name: resourceId
          in: path
          description: Name of the telemetry_metrics_profile telemetry_metrics_profile to be updated.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the telemetry_metrics_profile telemetry_metrics_profile to be updated.
      requestBody:
        description: Updated values for the telemetry_metrics_profile.
        content:
          application/json:
            schema:
              title: telemetry_metrics_profile
              description: Updated values for the telemetry_metrics_profile.
              $ref: '#/components/schemas/TelemetryMetricsProfileResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryMetricsProfileResource'
    delete:
      tags:
        - TelemetryMetricsProfileService
      summary: DeleteTelemetryMetricsProfile
      description: Delete a telemetry_metrics_profile.
      operationId: TelemetryMetricsProfileService_DeleteTelemetryMetricsProfile
      parameters:
        - name: resourceId
          in: path
          description: Name of the telemetry_metrics_profile telemetry_metrics_profile to be deleted.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the telemetry_metrics_profile telemetry_metrics_profile to be deleted.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTelemetryMetricsProfileResponse'
    patch:
      tags:
        - TelemetryMetricsProfileService
      summary: PatchTelemetryMetricsProfile
      description: Patch a telemetry_metrics_profile.
      operationId: TelemetryMetricsProfileService_PatchTelemetryMetricsProfile
      parameters:
        - name: resourceId
          in: path
          description: ID of the resource to be updated.
          required: true
          schema:
            type: string
            title: resourceId
            description: ID of the resource to be updated.
      requestBody:
        description: Updated values for the telemetry_metrics_profile.
        content:
          application/json:
            schema:
              title: telemetry_metrics_profile
              description: Updated values for the telemetry_metrics_profile.
              $ref: '#/components/schemas/TelemetryMetricsProfileResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryMetricsProfileResource'
  /edge-infra.orchestrator.apis/v2/localAccounts:
    get:
      tags:
        - LocalAccountService
      summary: ListLocalAccounts
      description: Get a list of providers.
      operationId: LocalAccountService_ListLocalAccounts
      parameters:
        - name: orderBy
          in: query
          description: |-
            Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
          schema:
            type: string
            title: order_by
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9., ]+$
            description: |-
              (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
               See https://google.aip.dev/132 for details.
        - name: filter
          in: query
          description: |-
            Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
          schema:
            type: string
            title: filter
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
            description: |-
              (OPTIONAL) Optional filter to return only item of interest.
               See https://google.aip.dev/160 for details.
        - name: pageSize
          in: query
          description: |-
            Defines the amount of items to be contained in a single page.
             Default of 20.
          schema:
            type: integer
            title: page_size
            maximum: 100
            minimum: 1
            description: |-
              (OPTIONAL) Defines the amount of items to be contained in a single page.
               Default of 20.
        - name: offset
          in: query
          description: Index of the first item to return. This allows skipping items.
          schema:
            type: integer
            title: offset
            maximum: 10000
            description: (OPTIONAL) Index of the first item to return. This allows skipping items.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocalAccountsResponse'
    post:
      tags:
        - LocalAccountService
      summary: CreateLocalAccount
      description: Create a localAccount.
      operationId: LocalAccountService_CreateLocalAccount
      requestBody:
        description: The localaccount to create.
        content:
          application/json:
            schema:
              title: local_account
              description: The localaccount to create.
              $ref: '#/components/schemas/LocalAccountResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalAccountResource'
  /edge-infra.orchestrator.apis/v2/localAccounts/{resourceId}:
    get:
      tags:
        - LocalAccountService
      summary: GetLocalAccount
      description: Get a specific provider.
      operationId: LocalAccountService_GetLocalAccount
      parameters:
        - name: resourceId
          in: path
          description: Name of the requested localaccount.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the requested localaccount.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalAccountResource'
    delete:
      tags:
        - LocalAccountService
      summary: DeleteLocalAccount
      description: Delete a provider.
      operationId: LocalAccountService_DeleteLocalAccount
      parameters:
        - name: resourceId
          in: path
          description: Name of the localaccount to be deleted.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the localaccount to be deleted.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLocalAccountResponse'
  /edge-infra.orchestrator.apis/v2/customConfigs:
    get:
      tags:
        - CustomConfigService
      summary: ListCustomConfigs
      description: Get a list of custom configurations.
      operationId: CustomConfigService_ListCustomConfigs
      parameters:
        - name: orderBy
          in: query
          description: |-
            Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
          schema:
            type: string
            title: order_by
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9., ]+$
            description: |-
              (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
               See https://google.aip.dev/132 for details.
        - name: filter
          in: query
          description: |-
            Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
          schema:
            type: string
            title: filter
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
            description: |-
              (OPTIONAL) Optional filter to return only item of interest.
               See https://google.aip.dev/160 for details.
        - name: pageSize
          in: query
          description: |-
            Defines the amount of items to be contained in a single page.
             Default of 20.
          schema:
            type: integer
            title: page_size
            maximum: 100
            minimum: 1
            description: |-
              (OPTIONAL) Defines the amount of items to be contained in a single page.
               Default of 20.
        - name: offset
          in: query
          description: Index of the first item to return. This allows skipping items.
          schema:
            type: integer
            title: offset
            maximum: 10000
            description: (OPTIONAL) Index of the first item to return. This allows skipping items.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomConfigsResponse'
    post:
      tags:
        - CustomConfigService
      summary: CreateCustomConfig
      description: Create a custom configuration.
      operationId: CustomConfigService_CreateCustomConfig
      requestBody:
        description: The custom configuration to create.
        content:
          application/json:
            schema:
              title: custom_config
              description: The custom configuration to create.
              $ref: '#/components/schemas/CustomConfigResource'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomConfigResource'
  /edge-infra.orchestrator.apis/v2/customConfigs/{resourceId}:
    get:
      tags:
        - CustomConfigService
      summary: GetCustomConfig
      description: Get a specific custom configuration.
      operationId: CustomConfigService_GetCustomConfig
      parameters:
        - name: resourceId
          in: path
          description: Name of the requested custom configuration.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the requested custom configuration.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomConfigResource'
    delete:
      tags:
        - CustomConfigService
      summary: DeleteCustomConfig
      description: Delete a custom configuration.
      operationId: CustomConfigService_DeleteCustomConfig
      parameters:
        - name: resourceId
          in: path
          description: Name of the customconfig to be deleted.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the customconfig to be deleted.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCustomConfigResponse'
  /edge-infra.orchestrator.apis/v2/os_update_policy:
    get:
      tags:
        - OSUpdatePolicy
      summary: ListOSUpdatePolicy
      description: Get a list of OS Update Policies.
      operationId: OSUpdatePolicy_ListOSUpdatePolicy
      parameters:
        - name: orderBy
          in: query
          description: |-
            Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
          schema:
            type: string
            title: order_by
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9., ]+$
            description: |-
              (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
               See https://google.aip.dev/132 for details.
        - name: filter
          in: query
          description: |-
            Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
          schema:
            type: string
            title: filter
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
            description: |-
              (OPTIONAL) Optional filter to return only item of interest.
               See https://google.aip.dev/160 for details.
        - name: pageSize
          in: query
          description: |-
            Defines the amount of items to be contained in a single page.
             Default of 20.
          schema:
            type: integer
            title: page_size
            maximum: 100
            minimum: 1
            description: |-
              (OPTIONAL) Defines the amount of items to be contained in a single page.
               Default of 20.
        - name: offset
          in: query
          description: Index of the first item to return. This allows skipping items.
          schema:
            type: integer
            title: offset
            maximum: 10000
            description: (OPTIONAL) Index of the first item to return. This allows skipping items.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOSUpdatePolicyResponse'
    post:
      tags:
        - OSUpdatePolicy
      summary: CreateOSUpdatePolicy
      description: Create an OS Update Policy.
      operationId: OSUpdatePolicy_CreateOSUpdatePolicy
      requestBody:
        description: The OS Update policy to create.
        content:
          application/json:
            schema:
              title: os_update_policy
              description: The OS Update policy to create.
              $ref: '#/components/schemas/OSUpdatePolicy'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSUpdatePolicy'
  /edge-infra.orchestrator.apis/v2/os_update_policy/{resourceId}:
    get:
      tags:
        - OSUpdatePolicy
      summary: GetOSUpdatePolicy
      description: Get a specific OS Update Policy.
      operationId: OSUpdatePolicy_GetOSUpdatePolicy
      parameters:
        - name: resourceId
          in: path
          description: Name of the requested os.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the requested os.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSUpdatePolicy'
    delete:
      tags:
        - OSUpdatePolicy
      summary: DeleteOSUpdatePolicy
      description: Delete a OS Update Policy.
      operationId: OSUpdatePolicy_DeleteOSUpdatePolicy
      parameters:
        - name: resourceId
          in: path
          description: Name of the OS Update Policy to be deleted.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the OS Update Policy to be deleted.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOSUpdatePolicyResponse'
  /edge-infra.orchestrator.apis/v2/os_update_run:
    get:
      tags:
        - OSUpdateRun
      summary: ListOSUpdateRun
      description: Get a list of OS Update Policies.
      operationId: OSUpdateRun_ListOSUpdateRun
      parameters:
        - name: orderBy
          in: query
          description: |-
            Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
          schema:
            type: string
            title: order_by
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9., ]+$
            description: |-
              (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
               See https://google.aip.dev/132 for details.
        - name: filter
          in: query
          description: |-
            Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
          schema:
            type: string
            title: filter
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
            description: |-
              (OPTIONAL) Optional filter to return only item of interest.
               See https://google.aip.dev/160 for details.
        - name: pageSize
          in: query
          description: |-
            Defines the amount of items to be contained in a single page.
             Default of 20.
          schema:
            type: integer
            title: page_size
            maximum: 100
            minimum: 1
            description: |-
              (OPTIONAL) Defines the amount of items to be contained in a single page.
               Default of 20.
        - name: offset
          in: query
          description: Index of the first item to return. This allows skipping items.
          schema:
            type: integer
            title: offset
            maximum: 10000
            description: (OPTIONAL) Index of the first item to return. This allows skipping items.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOSUpdateRunResponse'
  /edge-infra.orchestrator.apis/v2/os_update_run/{resourceId}:
    get:
      tags:
        - OSUpdateRun
      summary: GetOSUpdateRun
      description: Get a specific OS Update Run.
      operationId: OSUpdateRun_GetOSUpdateRun
      parameters:
        - name: resourceId
          in: path
          description: Name of the requested os.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the requested os.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSUpdateRun'
    delete:
      tags:
        - OSUpdateRun
      summary: DeleteOSUpdateRun
      description: Delete a OS Update Run.
      operationId: OSUpdateRun_DeleteOSUpdateRun
      parameters:
        - name: resourceId
          in: path
          description: Name of the os update run to be deleted.
          required: true
          schema:
            type: string
            title: resourceId
            description: Name of the os update run to be deleted.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOSUpdateRunResponse'
components:
  schemas:
    google.protobuf.Timestamp:
      type: string
      format: date-time
      description: |-
        A Timestamp represents a point in time independent of any time zone or local
         calendar, encoded as a count of seconds and fractions of seconds at
         nanosecond resolution. The count is relative to an epoch at UTC midnight on
         January 1, 1970, in the proleptic Gregorian calendar which extends the
         Gregorian calendar backwards to year one.

         All minutes are 60 seconds long. Leap seconds are "smeared" so that no leap
         second table is needed for interpretation, using a [24-hour linear
         smear](https://developers.google.com/time/smear).

         The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By
         restricting to that range, we ensure that we can convert to and from [RFC
         3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.

         # Examples

         Example 1: Compute Timestamp from POSIX `time()`.

             Timestamp timestamp;
             timestamp.set_seconds(time(NULL));
             timestamp.set_nanos(0);

         Example 2: Compute Timestamp from POSIX `gettimeofday()`.

             struct timeval tv;
             gettimeofday(&tv, NULL);

             Timestamp timestamp;
             timestamp.set_seconds(tv.tv_sec);
             timestamp.set_nanos(tv.tv_usec * 1000);

         Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.

             FILETIME ft;
             GetSystemTimeAsFileTime(&ft);
             UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;

             // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z
             // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.
             Timestamp timestamp;
             timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));
             timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));

         Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.

             long millis = System.currentTimeMillis();

             Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)
                 .setNanos((int) ((millis % 1000) * 1000000)).build();

         Example 5: Compute Timestamp from Java `Instant.now()`.

             Instant now = Instant.now();

             Timestamp timestamp =
                 Timestamp.newBuilder().setSeconds(now.getEpochSecond())
                     .setNanos(now.getNano()).build();

         Example 6: Compute Timestamp from current time in Python.

             timestamp = Timestamp()
             timestamp.GetCurrentTime()

         # JSON Mapping

         In JSON format, the Timestamp type is encoded as a string in the
         [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the
         format is "{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z"
         where {year} is always expressed using four digits while {month}, {day},
         {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional
         seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),
         are optional. The "Z" suffix indicates the timezone ("UTC"); the timezone
         is required. A proto3 JSON serializer should always use UTC (as indicated by
         "Z") when printing the Timestamp type and a proto3 JSON parser should be
         able to accept both UTC and other timezones (as indicated by an offset).

         For example, "2017-01-15T01:30:15.01Z" encodes 15.01 seconds past
         01:30 UTC on January 15, 2017.

         In JavaScript, one can convert a Date object to this format using the
         standard
         [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)
         method. In Python, a standard `datetime.datetime` object can be converted
         to this format using
         [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with
         the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use
         the Joda Time's [`ISODateTimeFormat.dateTime()`](
         http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()
         ) to obtain a formatter capable of generating timestamps in this format.
    MetadataItem:
      type: object
      properties:
        key:
          type: string
          title: key
          maxLength: 316
          pattern: ^$|^[a-z.]+/$|^[a-z.]+/[a-z0-9][a-z0-9-_.]*[a-z0-9]$|^[a-z.]+/[a-z0-9]$|^[a-z]$|^[a-z0-9][a-z0-9-_.]*[a-z0-9]$
          description: The metadata key.
        value:
          type: string
          title: value
          maxLength: 63
          pattern: ^$|^[a-z0-9]$|^[a-z0-9][a-z0-9._-]*[a-z0-9]$
          description: The metadata value.
      title: MetadataItem
      required:
        - key
        - value
      additionalProperties: false
      description: A metadata item, represented by a key:value pair.
    Timestamps:
      type: object
      properties:
        createdAt:
          title: created_at
          description: The time when the resource was created.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedAt:
          title: updated_at
          description: The time when the resource was last updated.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Timestamps
      additionalProperties: false
    CustomConfigResource:
      type: object
      properties:
        resourceId:
          type: string
          title: resource_id
          maxLength: 21
          pattern: ^customconfig-[0-9a-f]{8}$
          description: resource identifier
          readOnly: true
        name:
          type: string
          title: name
          maxLength: 40
          pattern: ^[a-z][a-z0-9-]{0,31}$
          description: Config provided by admin
        description:
          type: string
          title: description
          maxLength: 256
          minLength: 1
          pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()" ]+$
          description: (OPTIONAL) Config description
        config:
          type: string
          title: config
          maxLength: 16384
          description: Config content
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: CustomConfigResource
      required:
        - name
        - config
      additionalProperties: false
    ProviderKind:
      type: string
      title: ProviderKind
      enum:
        - PROVIDER_KIND_UNSPECIFIED
        - PROVIDER_KIND_BAREMETAL
      description: Kind of provider.
    ProviderVendor:
      type: string
      title: ProviderVendor
      enum:
        - PROVIDER_VENDOR_UNSPECIFIED
        - PROVIDER_VENDOR_LENOVO_LXCA
        - PROVIDER_VENDOR_LENOVO_LOCA
      description: Vendor of the provider.
    ProviderResource:
      type: object
      properties:
        resourceId:
          type: string
          title: resource_id
          maxLength: 17
          pattern: ^provider-[0-9a-f]{8}$
          description: Resource ID, generated by the inventory on Create.
          readOnly: true
        providerKind:
          title: provider_kind
          description: The provider kind.
          $ref: '#/components/schemas/ProviderKind'
        providerVendor:
          title: provider_vendor
          description: The provider vendor.
          $ref: '#/components/schemas/ProviderVendor'
        name:
          type: string
          title: name
          maxLength: 40
          pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
          description: The provider resource's name.
        apiEndpoint:
          type: string
          title: api_endpoint
          maxLength: 500
          pattern: ^$|^[a-zA-Z-_0-9./:;=?@!#,<>*() ]+$
          description: The provider resource's API endpoint.
        apiCredentials:
          type: array
          items:
            type: string
            maxLength: 500
            pattern: ^$|^[a-zA-Z-_0-9.\/:;=?@!#,<>*(){}"\\ ]+$
            maxItems: 100
          title: api_credentials
          maxItems: 100
          description: The provider resource's list of credentials.
        config:
          type: string
          title: config
          maxLength: 2000
          pattern: ^$|^[a-zA-Z-_0-9.\/:;=?@!#,<>*(){}"\\ ]+$
          description: Opaque provider configuration.
        providerID:
          type: string
          title: providerID
          maxLength: 17
          pattern: ^provider-[0-9a-f]{8}$
          description: Deprecated, The provider resource's unique identifier. Alias of resourceId.
          readOnly: true
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: ProviderResource
      required:
        - providerKind
        - name
        - apiEndpoint
      additionalProperties: false
      description: A provider resource.
    RegionResource:
      type: object
      properties:
        resourceId:
          type: string
          title: resource_id
          maxLength: 15
          pattern: ^region-[0-9a-f]{8}$
          description: resource ID, generated by the inventory on Create.
          readOnly: true
        name:
          type: string
          title: name
          maxLength: 50
          pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
          description: The user-provided, human-readable name of region
        parentRegion:
          title: parent_region
          description: The parent Region associated to the Region, when existent.
          readOnly: true
          $ref: '#/components/schemas/RegionResource'
        regionID:
          type: string
          title: regionID
          maxLength: 15
          pattern: ^region-[0-9a-f]{8}$
          description: Deprecated, The Region unique identifier. Alias of resourceId.
          readOnly: true
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/MetadataItem'
          title: metadata
          maxItems: 100
          description: |-
            (OPTIONAL) The metadata associated to the Region,
             represented by a list of key:value pairs.
        inheritedMetadata:
          type: array
          items:
            $ref: '#/components/schemas/MetadataItem'
          title: inherited_metadata
          description: |-
            The rendered metadata from the Region parent(s)
             that can be inherited by the Region, represented by a list of key:value pairs.
             This field can not be used in filter.
          readOnly: true
        totalSites:
          type: integer
          title: total_sites
          format: int32
          description: The total number of sites in the region.
          readOnly: true
        parentId:
          type: string
          title: parent_id
          maxLength: 15
          pattern: ^$|^region-[0-9a-f]{8}$
          description: |-
            The parent Region unique identifier
             that the region is associated to, when existent.
             This field can not be used in filter.
          writeOnly: true
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: RegionResource
      additionalProperties: false
      description: A region resource.
    SiteResource:
      type: object
      properties:
        resourceId:
          type: string
          title: resource_id
          maxLength: 13
          pattern: ^site-[0-9a-f]{8}$
          description: resource ID, generated by the inventory on Create.
          readOnly: true
        name:
          type: string
          title: name
          maxLength: 50
          pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
          description: The site's human-readable name.
        region:
          title: region
          description: Region this site is located in
          readOnly: true
          $ref: '#/components/schemas/RegionResource'
        siteLat:
          type: integer
          title: site_lat
          maximum: 900000000
          minimum: -900000000
          format: int32
          description: |-
            The geolocation latitude of the site.
             Points are represented as latitude-longitude pairs in the E7 representation
             (degrees are multiplied by 10**7 and rounded to the nearest integer).
             siteLat must be in the range of +/- 90 degrees.
        siteLng:
          type: integer
          title: site_lng
          maximum: 1800000000
          minimum: -1800000000
          format: int32
          description: |-
            The geolocation longitude of the site.
             Points are represented as latitude-longitude pairs in the E7 representation
             (degrees are multiplied by 10**7 and rounded to the nearest integer).
             siteLng must be in the range of +/- 180 degrees (inclusive).
        provider:
          title: provider
          description: Provider this Site is managed by
          $ref: '#/components/schemas/ProviderResource'
        siteID:
          type: string
          title: siteID
          maxLength: 13
          pattern: ^site-[0-9a-f]{8}$
          description: Deprecated, The site unique identifier. Alias of resourceId.
          readOnly: true
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/MetadataItem'
          title: metadata
          maxItems: 100
          description: |-
            (OPTIONAL) The metadata associated to the Region,
             represented by a list of key:value pairs.
        inheritedMetadata:
          type: array
          items:
            $ref: '#/components/schemas/MetadataItem'
          title: inherited_metadata
          description: |-
            The rendered metadata from the Region parent(s)
             that can be inherited by the Region, represented by a list of key:value pairs.
             This field can not be used in filter.
          readOnly: true
        regionId:
          type: string
          title: region_id
          maxLength: 15
          pattern: ^$|^region-[0-9a-f]{8}$
          description: |-
            The region's unique identifier
             that the site is associated to. This field cannot be used in filter.
          writeOnly: true
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: SiteResource
      additionalProperties: false
      description: A site resource.
    OsProviderKind:
      type: string
      title: OsProviderKind
      enum:
        - OS_PROVIDER_KIND_UNSPECIFIED
        - OS_PROVIDER_KIND_INFRA
        - OS_PROVIDER_KIND_LENOVO
      description: OsProviderKind describes "owner" of the OS, that will drive OS provisioning.
    OsType:
      type: string
      title: OsType
      enum:
        - OS_TYPE_UNSPECIFIED
        - OS_TYPE_MUTABLE
        - OS_TYPE_IMMUTABLE
      description: OsType describes type of operating system.
    SecurityFeature:
      type: string
      title: SecurityFeature
      enum:
        - SECURITY_FEATURE_UNSPECIFIED
        - SECURITY_FEATURE_NONE
        - SECURITY_FEATURE_SECURE_BOOT_AND_FULL_DISK_ENCRYPTION
      description: SecurityFeature describes the security capabilities of a resource.
    OperatingSystemResource:
      type: object
      properties:
        resourceId:
          type: string
          title: resource_id
          maxLength: 11
          pattern: ^os-[0-9a-f]{8}$
          description: Resource ID, generated by inventory on Create.
          readOnly: true
        name:
          type: string
          title: name
          maxLength: 128
          pattern: '^$|^[a-zA-Z-_0-9./: ()]+$'
          description: The OS resource's name.
        architecture:
          type: string
          title: architecture
          maxLength: 20
          pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()" ]+$
          description: The OS resource's CPU architecture.
        kernelCommand:
          type: string
          title: kernel_command
          maxLength: 500
          pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()" ]+$
          description: Deprecated, will be removed in EMF v3.2.0, this has been moved to new resource OSUpdatePolicy. The OS resource's kernel Command Line Options.
        updateSources:
          type: array
          items:
            type: string
            maxLength: 10000
            pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*+()"\ \\\n]+$
            maxItems: 100
          title: update_sources
          maxItems: 100
          description: |-
            Deprecated, will be removed in EMF v3.2.0, this has been moved to new resource OSUpdatePolicy. The list of OS resource update sources.
             Should be in 'DEB822 Source Format' for Debian style OSs
        imageUrl:
          type: string
          title: image_url
          maxLength: 500
          pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()"\ ]+$
          description: The URL repository of the OS image.
        imageId:
          type: string
          title: image_id
          maxLength: 500
          pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()"\ ]+$
          description: A unique identifier of the OS image that can be retrieved from the running OS.
        description:
          type: string
          title: description
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9.:;=@?!#,<>*(){}&%$`^\+\- ]+$
        sha256:
          type: string
          title: sha256
          maxLength: 64
          minLength: 64
          pattern: ^[a-f0-9]+$
          description: SHA256 checksum of the OS resource in hexadecimal representation.
        profileName:
          type: string
          title: profile_name
          maxLength: 128
          pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()"\ ]+$
          description: Name of an OS profile that the OS resource belongs to. Uniquely identifies a family of OS resources.
        profileVersion:
          type: string
          title: profile_version
          description: Version of OS profile that the OS resource belongs to.
          readOnly: true
        installedPackages:
          type: string
          title: installed_packages
          maxLength: 500000
          pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()" \\\n]+$
          description: List of installed packages, encoded as a JSON list.
        installedPackagesUrl:
          type: string
          title: installed_packages_url
          maxLength: 200
          format: uri-ref
          description: |-
            (IMMUTABLE) The URL of the OS manifest which contains install packages details. This will be used to fill the installed_packages field
             for the advance use case to allow manual creation of OSProfiles when supported from backend.
        securityFeature:
          title: security_feature
          description: |-
            Indicating if this OS is capable of supporting features like Secure Boot (SB) and Full Disk Encryption (FDE).
             Immutable after creation.
          $ref: '#/components/schemas/SecurityFeature'
        osType:
          title: os_type
          description: Indicating the type of OS (for example, mutable or immutable).
          $ref: '#/components/schemas/OsType'
        osProvider:
          title: os_provider
          description: Indicating the provider of OS (e.g., Infra or Lenovo).
          $ref: '#/components/schemas/OsProviderKind'
        platformBundle:
          type: string
          title: platform_bundle
          description: "Opaque JSON field storing references to custom installation script(s) that\n supplements the base OS with additional OS-level dependencies/configurations. \n If empty, the default OS installation will be used."
          readOnly: true
        metadata:
          type: string
          title: metadata
          maxLength: 500
          pattern: ^$|^[a-z0-9,.\-_:/"\\ \\n{}\[\]]+$
          description: Opaque JSON field storing metadata associated to this OS resource. Expected to be a JSON object with string keys and values, or an empty string.
        existingCvesUrl:
          type: string
          title: existing_cves_url
          maxLength: 500
          format: uri-ref
          description: (IMMUTABLE) URL of the file containing information about the existing CVEs on the Operating System.
        existingCves:
          type: string
          title: existing_cves
          maxLength: 500000
          pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*+~()"\\À-ÿ \\n\{\}\[\]]+$
          description: The CVEs that are currently present on the Operating System, encoded as a JSON list.
          readOnly: true
        fixedCvesUrl:
          type: string
          title: fixed_cves_url
          maxLength: 500
          format: uri-ref
          description: (IMMUTABLE) URL of the file containing information about the CVEs that have been fixed by this OS Resource version.
        fixedCves:
          type: string
          title: fixed_cves
          maxLength: 500000
          pattern: ^$|^[\p{L}\p{N}\p{P}\p{S}\p{Z}\n\{\}\[\]]+$
          description: The CVEs that have been fixed by this OS Resource version, encoded as a JSON list.
          readOnly: true
        osResourceID:
          type: string
          title: os_resourceID
          maxLength: 11
          pattern: ^os-[0-9a-f]{8}$
          description: Deprecated, The OS resource's unique identifier. Alias of resourceId.
          readOnly: true
        repoUrl:
          type: string
          title: repo_url
          maxLength: 500
          pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()" ]+$
          description: Deprecated. OS image URL. URL of the original installation source.
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: OperatingSystemResource
      required:
        - sha256
      additionalProperties: false
      description: An OS resource.
    LocalAccountResource:
      type: object
      properties:
        resourceId:
          type: string
          title: resource_id
          maxLength: 21
          pattern: ^localaccount-[0-9a-f]{8}$
          description: resource identifier
          readOnly: true
        username:
          type: string
          title: username
          maxLength: 32
          pattern: ^[a-z][a-z0-9-]{0,31}$
          description: Username provided by admin
        sshKey:
          type: string
          title: ssh_key
          maxLength: 800
          pattern: ^(ssh-ed25519|ecdsa-sha2-nistp521) ([A-Za-z0-9+/=]+) ?(.*)?$
          description: SSH Public Key of EN
        localAccountID:
          type: string
          title: local_accountID
          maxLength: 21
          pattern: ^localaccount-[0-9a-f]{8}$
          description: Deprecated, The local account resource's unique identifier. Alias of resourceId.
          readOnly: true
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: LocalAccountResource
      required:
        - username
        - sshKey
      additionalProperties: false
    IPAddressConfigMethod:
      type: string
      title: IPAddressConfigMethod
      enum:
        - IP_ADDRESS_CONFIG_METHOD_UNSPECIFIED
        - IP_ADDRESS_CONFIG_METHOD_STATIC
        - IP_ADDRESS_CONFIG_METHOD_DYNAMIC
    IPAddressState:
      type: string
      title: IPAddressState
      enum:
        - IP_ADDRESS_STATE_UNSPECIFIED
        - IP_ADDRESS_STATE_ERROR
        - IP_ADDRESS_STATE_ASSIGNED
        - IP_ADDRESS_STATE_CONFIGURED
        - IP_ADDRESS_STATE_RELEASED
        - IP_ADDRESS_STATE_DELETED
    IPAddressStatus:
      type: string
      title: IPAddressStatus
      enum:
        - IP_ADDRESS_STATUS_UNSPECIFIED
        - IP_ADDRESS_STATUS_ASSIGNMENT_ERROR
        - IP_ADDRESS_STATUS_ASSIGNED
        - IP_ADDRESS_STATUS_CONFIGURATION_ERROR
        - IP_ADDRESS_STATUS_CONFIGURED
        - IP_ADDRESS_STATUS_RELEASED
        - IP_ADDRESS_STATUS_ERROR
    IPAddressResource:
      type: object
      properties:
        resourceId:
          type: string
          title: resource_id
          maxLength: 15
          pattern: ^ipaddr-[0-9a-f]{8}$
          description: Resource ID, generated by Inventory on Create
          readOnly: true
        address:
          type: string
          title: address
          description: CIDR representation of the IP address.
          readOnly: true
        status:
          title: status
          description: The status of the IP address.
          readOnly: true
          $ref: '#/components/schemas/IPAddressStatus'
        statusDetail:
          type: string
          title: status_detail
          description: User-friendly status to provide details about the resource state
          readOnly: true
        configMethod:
          title: config_method
          description: Specifies how the IP address is configured.
          readOnly: true
          $ref: '#/components/schemas/IPAddressConfigMethod'
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: IPAddressResource
      additionalProperties: false
    StatusIndication:
      type: string
      title: StatusIndication
      enum:
        - STATUS_INDICATION_UNSPECIFIED
        - STATUS_INDICATION_ERROR
        - STATUS_INDICATION_IN_PROGRESS
        - STATUS_INDICATION_IDLE
      description: The status indicator.
    AmtSku:
      type: string
      title: AmtSku
      enum:
        - AMT_SKU_UNSPECIFIED
        - AMT_SKU_AMT
        - AMT_SKU_ISM
    AmtState:
      type: string
      title: AmtState
      enum:
        - AMT_STATE_UNSPECIFIED
        - AMT_STATE_PROVISIONED
        - AMT_STATE_UNPROVISIONED
        - AMT_STATE_DISCONNECTED
      description: The state of the AMT (Active Management Technology) component.
    BaremetalControllerKind:
      type: string
      title: BaremetalControllerKind
      enum:
        - BAREMETAL_CONTROLLER_KIND_UNSPECIFIED
        - BAREMETAL_CONTROLLER_KIND_NONE
        - BAREMETAL_CONTROLLER_KIND_IPMI
        - BAREMETAL_CONTROLLER_KIND_VPRO
        - BAREMETAL_CONTROLLER_KIND_PDU
      description: The type of BMC.
    HostComponentState:
      type: string
      title: HostComponentState
      enum:
        - HOST_COMPONENT_STATE_UNSPECIFIED
        - HOST_COMPONENT_STATE_ERROR
        - HOST_COMPONENT_STATE_DELETED
        - HOST_COMPONENT_STATE_EXISTS
      description: The state of the Host component.
    HostState:
      type: string
      title: HostState
      enum:
        - HOST_STATE_UNSPECIFIED
        - HOST_STATE_DELETED
        - HOST_STATE_ONBOARDED
        - HOST_STATE_UNTRUSTED
        - HOST_STATE_REGISTERED
      description: States of the host.
    InstanceKind:
      type: string
      title: InstanceKind
      enum:
        - INSTANCE_KIND_UNSPECIFIED
        - INSTANCE_KIND_METAL
      description: The Instance kind.
    InstanceState:
      type: string
      title: InstanceState
      enum:
        - INSTANCE_STATE_UNSPECIFIED
        - INSTANCE_STATE_RUNNING
        - INSTANCE_STATE_DELETED
        - INSTANCE_STATE_UNTRUSTED
      description: The Instance States.
    LinkState:
      type: string
      title: LinkState
      enum:
        - NETWORK_INTERFACE_LINK_STATE_UNSPECIFIED
        - NETWORK_INTERFACE_LINK_STATE_UP
        - NETWORK_INTERFACE_LINK_STATE_DOWN
      description: The state of the network interface.
    PowerCommandPolicy:
      type: string
      title: PowerCommandPolicy
      enum:
        - POWER_COMMAND_POLICY_UNSPECIFIED
        - POWER_COMMAND_POLICY_IMMEDIATE
        - POWER_COMMAND_POLICY_ORDERED
      description: The policy for handling power commands.
    PowerState:
      type: string
      title: PowerState
      enum:
        - POWER_STATE_UNSPECIFIED
        - POWER_STATE_ON
        - POWER_STATE_OFF
        - POWER_STATE_SLEEP
        - POWER_STATE_HIBERNATE
        - POWER_STATE_RESET
        - POWER_STATE_POWER_CYCLE
        - POWER_STATE_RESET_REPEAT
      description: The host power state.
    UpdatePolicy:
      type: string
      title: UpdatePolicy
      enum:
        - UPDATE_POLICY_UNSPECIFIED
        - UPDATE_POLICY_LATEST
        - UPDATE_POLICY_TARGET
      description: States of the host.
    WorkloadKind:
      type: string
      title: WorkloadKind
      enum:
        - WORKLOAD_KIND_UNSPECIFIED
        - WORKLOAD_KIND_CLUSTER
      description: Represents the type of workload.
    WorkloadMemberKind:
      type: string
      title: WorkloadMemberKind
      enum:
        - WORKLOAD_MEMBER_KIND_UNSPECIFIED
        - WORKLOAD_MEMBER_KIND_CLUSTER_NODE
      description: Represents the type of the workload member.
    WorkloadState:
      type: string
      title: WorkloadState
      enum:
        - WORKLOAD_STATE_UNSPECIFIED
        - WORKLOAD_STATE_ERROR
        - WORKLOAD_STATE_DELETING
        - WORKLOAD_STATE_DELETED
        - WORKLOAD_STATE_PROVISIONED
      description: Represents the Workload state, used for both current and desired state.
    HostResource:
      type: object
      properties:
        resourceId:
          type: string
          title: resource_id
          maxLength: 13
          pattern: ^host-[0-9a-f]{8}$
          description: Resource ID, generated on Create.
          readOnly: true
        name:
          type: string
          title: name
          maxLength: 50
          pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
          description: The host name.
        desiredState:
          title: desired_state
          description: The desired state of the Host.
          readOnly: true
          $ref: '#/components/schemas/HostState'
        currentState:
          title: current_state
          description: The current state of the Host.
          readOnly: true
          $ref: '#/components/schemas/HostState'
        site:
          title: site
          description: The site resource associated with the host.
          readOnly: true
          $ref: '#/components/schemas/SiteResource'
        provider:
          title: provider
          description: The provider associated with the host.
          readOnly: true
          $ref: '#/components/schemas/ProviderResource'
        note:
          type: string
          title: note
          maxLength: 512
          minLength: 1
          pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()" ]+$
          description: The note associated with the host.
          readOnly: true
        serialNumber:
          type: string
          title: serial_number
          description: SMBIOS device serial number.
          readOnly: true
        uuid:
          type: string
          title: uuid
          maxLength: 36
          pattern: ^$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
          description: (OPTIONAL) The host UUID identifier; UUID is unique and immutable.
        memoryBytes:
          type: string
          title: memory_bytes
          description: Quantity of memory (RAM) in the system in bytes.
          readOnly: true
        cpuModel:
          type: string
          title: cpu_model
          description: CPU model of the Host.
          readOnly: true
        cpuSockets:
          type: integer
          title: cpu_sockets
          description: Number of physical CPU sockets.
          readOnly: true
        cpuCores:
          type: integer
          title: cpu_cores
          description: Number of CPU cores.
          readOnly: true
        cpuCapabilities:
          type: string
          title: cpu_capabilities
          description: String list of all CPU capabilities (possibly JSON).
          readOnly: true
        cpuArchitecture:
          type: string
          title: cpu_architecture
          description: Architecture of the CPU model, e.g. x86_64.
          readOnly: true
        cpuThreads:
          type: integer
          title: cpu_threads
          description: Total Number of threads supported by the CPU.
          readOnly: true
        cpuTopology:
          type: string
          title: cpu_topology
          description: JSON field storing the CPU topology, refer to HDA/HRM docs for the JSON schema.
          readOnly: true
        bmcKind:
          title: bmc_kind
          description: Kind of BMC.
          readOnly: true
          $ref: '#/components/schemas/BaremetalControllerKind'
        bmcIp:
          type: string
          title: bmc_ip
          description: BMC IP address, such as "192.0.0.1".
          readOnly: true
        hostname:
          type: string
          title: hostname
          description: Hostname.
          readOnly: true
        productName:
          type: string
          title: product_name
          description: System Product Name.
          readOnly: true
        biosVersion:
          type: string
          title: bios_version
          description: BIOS Version.
          readOnly: true
        biosReleaseDate:
          type: string
          title: bios_release_date
          description: BIOS Release Date.
          readOnly: true
        biosVendor:
          type: string
          title: bios_vendor
          description: BIOS Vendor.
          readOnly: true
        desiredPowerState:
          title: desired_power_state
          description: (OPTIONAL) Desired power state of the host
          $ref: '#/components/schemas/PowerState'
        currentPowerState:
          title: current_power_state
          description: Current power state of the host
          readOnly: true
          $ref: '#/components/schemas/PowerState'
        powerStatus:
          type: string
          title: power_status
          maxLength: 1024
          description: textual message that describes the runtime status of Host power. Set by DM RM only.
          readOnly: true
        powerStatusIndicator:
          title: power_status_indicator
          description: Indicates dynamicity of the power_status. Set by DM RM only.
          readOnly: true
          $ref: '#/components/schemas/StatusIndication'
        powerStatusTimestamp:
          type: integer
          title: power_status_timestamp
          description: UTC timestamp when power_status was last changed. Set by DM RM only.
          readOnly: true
        powerCommandPolicy:
          title: power_command_policy
          description: (OPTIONAL) Power command policy of the host. By default, it is set to PowerCommandPolicy.POWER_COMMAND_POLICY_ORDERED.
          $ref: '#/components/schemas/PowerCommandPolicy'
        powerOnTime:
          type: integer
          title: power_on_time
          description: UTC timestamp when the host was powered on. Set by DM RM only.
          readOnly: true
        hostStatus:
          type: string
          title: host_status
          maxLength: 1024
          description: textual message that describes the runtime status of Host. Set by RMs only.
          readOnly: true
        hostStatusIndicator:
          title: host_status_indicator
          description: Indicates interpretation of host_status. Set by RMs only.
          readOnly: true
          $ref: '#/components/schemas/StatusIndication'
        hostStatusTimestamp:
          type: integer
          title: host_status_timestamp
          description: UTC timestamp when host_status was last changed. Set by RMs only.
          readOnly: true
        onboardingStatus:
          type: string
          title: onboarding_status
          maxLength: 1024
          description: textual message that describes the onboarding status of Host. Set by RMs only.
          readOnly: true
        onboardingStatusIndicator:
          title: onboarding_status_indicator
          description: Indicates interpretation of onboarding_status. Set by RMs only.
          readOnly: true
          $ref: '#/components/schemas/StatusIndication'
        onboardingStatusTimestamp:
          type: integer
          title: onboarding_status_timestamp
          description: UTC timestamp when onboarding_status was last changed. Set by RMs only.
          readOnly: true
        registrationStatus:
          type: string
          title: registration_status
          maxLength: 1024
          description: textual message that describes the onboarding status of Host. Set by RMs only.
          readOnly: true
        registrationStatusIndicator:
          title: registration_status_indicator
          description: Indicates interpretation of registration_status. Set by RMs only.
          readOnly: true
          $ref: '#/components/schemas/StatusIndication'
        registrationStatusTimestamp:
          type: integer
          title: registration_status_timestamp
          description: UTC timestamp when registration_status was last changed. Set by RMs only.
          readOnly: true
        hostStorages:
          type: array
          items:
            $ref: '#/components/schemas/HoststorageResource'
          title: host_storages
          description: Back-reference to attached host storage resources.
          readOnly: true
        hostNics:
          type: array
          items:
            $ref: '#/components/schemas/HostnicResource'
          title: host_nics
          description: Back-reference to attached host NIC resources.
          readOnly: true
        hostUsbs:
          type: array
          items:
            $ref: '#/components/schemas/HostusbResource'
          title: host_usbs
          description: Back-reference to attached host USB resources.
          readOnly: true
        hostGpus:
          type: array
          items:
            $ref: '#/components/schemas/HostgpuResource'
          title: host_gpus
          description: Back-reference to attached host GPU resources.
          readOnly: true
        instance:
          title: instance
          description: The instance associated with the host.
          readOnly: true
          $ref: '#/components/schemas/InstanceResource'
        amtSku:
          title: amt_sku
          description: coming from device introspection
          readOnly: true
          $ref: '#/components/schemas/AmtSku'
        desiredAmtState:
          title: desired_amt_state
          description: (OPTIONAL) Desired AMT/vPRO state of the host
          $ref: '#/components/schemas/AmtState'
        currentAmtState:
          title: current_amt_state
          description: Current AMT/vPRO state of the host
          readOnly: true
          $ref: '#/components/schemas/AmtState'
        amtStatus:
          type: string
          title: amt_status
          maxLength: 1024
          description: coming from device introspection. Set only by the DM RM.
          readOnly: true
        amtStatusIndicator:
          title: amt_status_indicator
          description: Indicates dynamicity of the amt_status. Set by DM and OM RM only.
          readOnly: true
          $ref: '#/components/schemas/StatusIndication'
        amtStatusTimestamp:
          type: integer
          title: amt_status_timestamp
          description: UTC timestamp when amt_status was last changed. Set by DM and OM RM only.
          readOnly: true
        userLvmSize:
          type: integer
          title: user_lvm_size
          description: LVM size in GB.
          readOnly: true
        siteId:
          type: string
          title: site_id
          maxLength: 13
          pattern: ^$|^site-[0-9a-f]{8}$
          description: The site where the host is located.
          writeOnly: true
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/MetadataItem'
          title: metadata
          maxItems: 100
          description: (OPTIONAL) The metadata associated with the host, represented by a list of key:value pairs.
        inheritedMetadata:
          type: array
          items:
            $ref: '#/components/schemas/MetadataItem'
          title: inherited_metadata
          description: The metadata inherited by the host, represented by a list of key:value pairs, rendered by location and logical structures.
          readOnly: true
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: HostResource
      required:
        - name
      additionalProperties: false
      description: A Host resource.
    HostgpuResource:
      type: object
      properties:
        pciId:
          type: string
          title: pci_id
          description: The GPU device PCI identifier.
          readOnly: true
        product:
          type: string
          title: product
          description: The GPU device model.
          readOnly: true
        vendor:
          type: string
          title: vendor
          description: The GPU device vendor.
          readOnly: true
        description:
          type: string
          title: description
          description: The human-readable GPU device description.
          readOnly: true
        deviceName:
          type: string
          title: device_name
          description: GPU name as reported by OS.
          readOnly: true
        capabilities:
          type: array
          items:
            type: string
            readOnly: true
          title: capabilities
          description: The features of this GPU device, comma separated.
          readOnly: true
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: HostgpuResource
      additionalProperties: false
      description: The set of available host GPU cards.
    HostnicResource:
      type: object
      properties:
        deviceName:
          type: string
          title: device_name
          description: The device name (OS provided, like eth0, enp1s0, etc.).
          readOnly: true
        pciIdentifier:
          type: string
          title: pci_identifier
          description: PCI identifier string for this network interface.
          readOnly: true
        macAddr:
          type: string
          title: mac_addr
          description: The interface MAC address.
          readOnly: true
        sriovEnabled:
          type: boolean
          title: sriov_enabled
          description: If the interface has SRIOV enabled.
          readOnly: true
        sriovVfsNum:
          type: integer
          title: sriov_vfs_num
          description: The number of VFs currently provisioned on the interface, if SR-IOV is supported.
          readOnly: true
        sriovVfsTotal:
          type: integer
          title: sriov_vfs_total
          description: The maximum number of VFs the interface supports, if SR-IOV is supported.
          readOnly: true
        mtu:
          type: integer
          title: mtu
          description: Maximum transmission unit of the interface.
          readOnly: true
        linkState:
          title: link_state
          description: Link state of this interface.
          readOnly: true
          $ref: '#/components/schemas/NetworkInterfaceLinkState'
        bmcInterface:
          type: boolean
          title: bmc_interface
          description: Whether this is a bmc interface or not.
          readOnly: true
        ipaddresses:
          type: array
          items:
            $ref: '#/components/schemas/IPAddressResource'
          title: ipaddresses
          description: The interface's IP address list.
          readOnly: true
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: HostnicResource
      additionalProperties: false
      description: The set of available host interfaces.
    HoststorageResource:
      type: object
      properties:
        wwid:
          type: string
          title: wwid
          description: The storage device unique identifier.
          readOnly: true
        serial:
          type: string
          title: serial
          description: The storage device unique serial number.
          readOnly: true
        vendor:
          type: string
          title: vendor
          description: The Storage device vendor.
          readOnly: true
        model:
          type: string
          title: model
          description: The storage device model.
          readOnly: true
        capacityBytes:
          type: string
          title: capacity_bytes
          description: The storage device Capacity (size) in bytes.
          readOnly: true
        deviceName:
          type: string
          title: device_name
          description: The storage device device name (OS provided, like sda, sdb, etc.)
          readOnly: true
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: HoststorageResource
      additionalProperties: false
      description: The set of available host storage capabilities.
    HostusbResource:
      type: object
      properties:
        idVendor:
          type: string
          title: id_vendor
          description: Hexadecimal number representing ID of the USB device vendor.
          readOnly: true
        idProduct:
          type: string
          title: id_product
          description: Hexadecimal number representing ID of the USB device product.
          readOnly: true
        bus:
          type: integer
          title: bus
          description: Bus number of device connected with.
          readOnly: true
        addr:
          type: integer
          title: addr
          description: USB Device number assigned by OS.
          readOnly: true
        class:
          type: string
          title: class
          description: class defined by USB-IF.
          readOnly: true
        serial:
          type: string
          title: serial
          description: Serial number of device.
          readOnly: true
        deviceName:
          type: string
          title: device_name
          description: the OS-provided device name.
          readOnly: true
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: HostusbResource
      additionalProperties: false
      description: The set of host USB resources.
    InstanceResource:
      type: object
      properties:
        resourceId:
          type: string
          title: resource_id
          maxLength: 13
          pattern: ^inst-[0-9a-f]{8}$
          description: Resource ID, generated on Create.
          readOnly: true
        kind:
          title: kind
          description: Kind of resource. Frequently tied to Provider.
          $ref: '#/components/schemas/InstanceKind'
        name:
          type: string
          title: name
          maxLength: 50
          pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
          description: The instance's human-readable name.
        desiredState:
          title: desired_state
          description: The Instance desired state.
          readOnly: true
          $ref: '#/components/schemas/InstanceState'
        currentState:
          title: current_state
          description: The Instance current state.
          readOnly: true
          $ref: '#/components/schemas/InstanceState'
        host:
          title: host
          description: Host this Instance is placed on. Only applicable to baremetal instances.
          readOnly: true
          $ref: '#/components/schemas/HostResource'
        os:
          title: os
          description: OS resource that should be installed to this Instance.
          readOnly: true
          $ref: '#/components/schemas/OperatingSystemResource'
        desiredOs:
          title: desired_os
          description: Deprecated, will be removed in EMF v3.2.0, use OSUpdatePolicy for driving day2, and os for day0 operations instead. OS resource that should be installed to this Instance.
          readOnly: true
          $ref: '#/components/schemas/OperatingSystemResource'
        currentOs:
          title: current_os
          description: Deprecated, will be removed in EMF v3.2.0, use os field instead. OS resource that is currently installed for this Instance.
          readOnly: true
          $ref: '#/components/schemas/OperatingSystemResource'
        securityFeature:
          title: security_feature
          description: Select to enable security features such as Secure Boot (SB) and Full Disk Encryption (FDE).
          $ref: '#/components/schemas/SecurityFeature'
        instanceStatus:
          type: string
          title: instance_status
          maxLength: 1024
          description: textual message that describes the current instance status. Set by RMs only.
          readOnly: true
        instanceStatusIndicator:
          title: instance_status_indicator
          description: Indicates interpretation of instance_status. Set by RMs only.
          readOnly: true
          $ref: '#/components/schemas/StatusIndication'
        instanceStatusTimestamp:
          type: integer
          title: instance_status_timestamp
          description: UTC timestamp when instance_status was last changed. Set by RMs only.
          readOnly: true
        provisioningStatus:
          type: string
          title: provisioning_status
          maxLength: 1024
          description: textual message that describes the provisioning status of Instance. Set by RMs only.
          readOnly: true
        provisioningStatusIndicator:
          title: provisioning_status_indicator
          description: Indicates interpretation of provisioning_status. Set by RMs only.
          readOnly: true
          $ref: '#/components/schemas/StatusIndication'
        provisioningStatusTimestamp:
          type: integer
          title: provisioning_status_timestamp
          description: UTC timestamp when provisioning_status was last changed. Set by RMs only.
          readOnly: true
        updateStatus:
          type: string
          title: update_status
          maxLength: 1024
          description: textual message that describes the update status of Instance. Set by RMs only.
          readOnly: true
        updateStatusIndicator:
          title: update_status_indicator
          description: Indicates interpretation of update_status. Set by RMs only.
          readOnly: true
          $ref: '#/components/schemas/StatusIndication'
        updateStatusTimestamp:
          type: integer
          title: update_status_timestamp
          description: UTC timestamp when update_status was last changed. Set by RMs only.
          readOnly: true
        updateStatusDetail:
          type: string
          title: update_status_detail
          maxLength: 100000
          description: Deprecated, will be removed in EMF v3.2.0, use OSUpdateRun instead. JSON field storing details of Instance update status. Set by RMs only. Beta, subject to change.
          readOnly: true
        trustedAttestationStatus:
          type: string
          title: trusted_attestation_status
          maxLength: 1024
          description: textual message that describes the trusted_attestation status of Instance. Set by RMs only.
          readOnly: true
        trustedAttestationStatusIndicator:
          title: trusted_attestation_status_indicator
          description: Indicates interpretation of trusted_attestation_status. Set by RMs only.
          readOnly: true
          $ref: '#/components/schemas/StatusIndication'
        trustedAttestationStatusTimestamp:
          type: integer
          title: trusted_attestation_status_timestamp
          description: UTC timestamp when trusted_attestation_status was last changed. Set by RMs only.
          readOnly: true
        workloadMembers:
          type: array
          items:
            $ref: '#/components/schemas/WorkloadMember'
          title: workload_members
          description: The workload members associated with the instance. back-reference to the Workload Members associated to this Instance
          readOnly: true
        localaccount:
          title: localaccount
          description: Local Account associated with this Instance
          readOnly: true
          $ref: '#/components/schemas/LocalAccountResource'
        updatePolicy:
          title: update_policy
          description: Update Policy of this Instance
          readOnly: true
          $ref: '#/components/schemas/OSUpdatePolicy'
        instanceStatusDetail:
          type: string
          title: instance_status_detail
          maxLength: 1024
          pattern: ^$|^[a-zA-Z-_0-9./:;=?@!#,<>*() ]+$
          description: Textual message that gives detailed status of the instance's software components.
          readOnly: true
        existingCves:
          type: string
          title: existing_cves
          maxLength: 500000
          pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*+~()"\\À-ÿ \\n\{\}\[\]]+$
          description: The CVEs that are currently present on the Instance, encoded as a JSON list.
          readOnly: true
        runtimePackages:
          type: string
          title: runtime_packages
          maxLength: 500000
          pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*+~()"\\ \\n\{\}\[\]]+$
          description: The packages available on the Instance at runtime, represented as a JSON list.
          readOnly: true
        osUpdateAvailable:
          type: string
          title: os_update_available
          maxLength: 10000
          pattern: ^$|^[a-zA-Z-_0-9./:;=?@!#,<>*()"\\ \\n]+$
          description: Details about OS Updates available for this Instance. If empty, there are no updates available.
          readOnly: true
        customConfig:
          type: array
          items:
            $ref: '#/components/schemas/CustomConfigResource'
          title: custom_config
          description: The list of custom config associated with the instance.
          readOnly: true
        instanceID:
          type: string
          title: instanceID
          maxLength: 13
          pattern: ^inst-[0-9a-f]{8}$
          description: Deprecated, The instance's unique identifier. Alias of resourceID.
          readOnly: true
        hostID:
          type: string
          title: hostID
          maxLength: 13
          pattern: ^host-[0-9a-f]{8}$
          description: The host's unique identifier associated with the instance.
          writeOnly: true
        osID:
          type: string
          title: osID
          maxLength: 11
          pattern: ^os-[0-9a-f]{8}$
          description: The unique identifier of OS resource that must be installed on the instance. The field is used to drive the day0 operations, and immutable once set the first time.
          writeOnly: true
        localAccountID:
          type: string
          title: local_accountID
          maxLength: 21
          pattern: ^localaccount-[0-9a-f]{8}$
          description: The unique identifier of local account will be associated with the instance.
          writeOnly: true
        osUpdatePolicyID:
          type: string
          title: os_update_policyID
          maxLength: 23
          pattern: ^osupdatepolicy-[0-9a-f]{8}$
          writeOnly: true
        customConfigID:
          type: array
          items:
            type: string
            maxLength: 21
            pattern: ^customconfig-[0-9a-f]{8}$
            writeOnly: true
          title: custom_configID
          maxLength: 21
          pattern: ^customconfig-[0-9a-f]{8}$
          description: The list of custom config associated with the instance.
          writeOnly: true
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: InstanceResource
      additionalProperties: false
      description: |-
        InstanceResource describes an instantiated OS install, running on either a
         host or hypervisor.
    NetworkInterfaceLinkState:
      type: object
      properties:
        type:
          title: type
          description: The interface link state.
          readOnly: true
          $ref: '#/components/schemas/LinkState'
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: NetworkInterfaceLinkState
      additionalProperties: false
    OSUpdatePolicy:
      type: object
      properties:
        resourceId:
          type: string
          title: resource_id
          pattern: ^osupdatepolicy-[0-9a-f]{8}$
          description: resource ID, generated by the inventory on Create.
          readOnly: true
        name:
          type: string
          title: name
          maxLength: 50
          pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
          description: User-provided, human-readable name.
        description:
          type: string
          title: description
          maxLength: 200
          pattern: ^$|^[a-zA-Z-_0-9./:;=?@!#,<>*() ]+$
          description: User-provided, human-readable description.
        installPackages:
          type: string
          title: install_packages
          maxLength: 500000
          pattern: ^$|^[A-Za-z0-9._/:;=@?!#,<>\-*+~()\[\]{} \n]+$
          description: |-
            Freeform text, OS-dependent. A list of package names, one per line (newline separated). Must not contain version information.
             Applies only to Mutable OSes.
             Deprecated, will be removed in EMF v3.2.0, use update_packages field instead.
        updateSources:
          type: array
          items:
            type: string
            pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*+()" \\n]+$
            maxItems: 100
          title: update_sources
          maxItems: 100
          description: |-
            The list of OS resource update sources.
             Should be in 'DEB822 Source Format' for Debian style OSs.
             Applies only to Mutable OSes.
        kernelCommand:
          type: string
          title: kernel_command
          maxLength: 500
          pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()" ]+$
          description: |-
            The OS resource's kernel Command Line Options.
             Applies only to Mutable OSes.
             Deprecated, will be removed in EMF v3.2.0, use update_kernel_command field instead.
        updatePackages:
          type: string
          title: update_packages
          maxLength: 500000
          pattern: ^$|^[A-Za-z0-9._/:;=@?!#,<>\-*+~()\[\]{} \n]+$
          description: |-
            Freeform text, OS-dependent. A list of package names, one per line (newline separated). Must not contain version information.
             Applies only to Mutable OSes.
        updateKernelCommand:
          type: string
          title: update_kernel_command
          maxLength: 500
          pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()" ]+$
          description: |-
            The OS resource's kernel Command Line Options.
             Applies only to Mutable OSes.
        targetOs:
          title: target_os
          description: |-
            The target OS for the update.
             Applies only to Immutable OSes for A/B upgrades.
          readOnly: true
          $ref: '#/components/schemas/OperatingSystemResource'
        targetOsId:
          type: string
          title: target_os_id
          maxLength: 11
          pattern: ^os-[0-9a-f]{8}$
          description: The unique identifier of target OS will be associated with the OS Update policy.
          writeOnly: true
        updatePolicy:
          title: update_policy
          description: |-
            Update Policy for the OS update. This field is used to determine the update policy for the OS update.
             UPDATE_POLICY_LATEST:
             - for mutable: unsupported
             - for immutable: latest version of the OS Resource
             UPDATE_POLICY_TARGET:
             - for mutable: apply the update_packages, update_sources, update_kernel_command
             - for immutable: install the version referenced by target_os
          $ref: '#/components/schemas/UpdatePolicy'
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: OSUpdatePolicy
      required:
        - name
      additionalProperties: false
    OSUpdateRun:
      type: object
      properties:
        resourceId:
          type: string
          title: resource_id
          pattern: ^osupdaterun-[0-9a-f]{8}$
          description: resource ID, generated by the inventory on Create.
          readOnly: true
        name:
          type: string
          title: name
          maxLength: 40
          pattern: ^$|^[a-zA-Z-_0-9./:;=?@!#,<>*() ]+$
          description: Human-readable name.
          readOnly: true
        description:
          type: string
          title: description
          maxLength: 200
          pattern: ^$|^[a-zA-Z-_0-9./:;=?@!#,<>*() ]+$
          description: Human-readable description.
          readOnly: true
        appliedPolicy:
          title: applied_policy
          description: Update Policy of this Instance
          readOnly: true
          $ref: '#/components/schemas/OSUpdatePolicy'
        instance:
          title: instance
          description: The instance resource associated with this OS Update. This OS Update Run is executed for this instance.
          readOnly: true
          $ref: '#/components/schemas/InstanceResource'
        statusIndicator:
          title: status_indicator
          description: |-
            Status Indicator for the OS update run. This field is used to determine the status type for the OS update Run.
             STATUS_INDICATION_ERROR: Update failed in error Indicator
             STATUS_INDICATION_IN_PROGRESS: Update in progress Indicator
             STATUS_INDICATION_IDLE: Update completed successfully Indicator
          readOnly: true
          $ref: '#/components/schemas/StatusIndication'
        status:
          type: string
          title: status
          maxLength: 1024
          description: Short message that describes what happened during the OS Update.
          readOnly: true
        statusDetails:
          type: string
          title: status_details
          maxLength: 100000
          description: Details about what happened during the OS Update.
          readOnly: true
        statusTimestamp:
          type: integer
          title: status_timestamp
          description: UTC timestamp of OS Update status reported.
          readOnly: true
        startTime:
          type: integer
          title: start_time
          description: UTC timestamp of OS Update started.
          readOnly: true
        endTime:
          type: integer
          title: end_time
          description: UTC timestamp of OS Update ended.
          readOnly: true
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: OSUpdateRun
      additionalProperties: false
    WorkloadMember:
      type: object
      properties:
        resourceId:
          type: string
          title: resource_id
          maxLength: 23
          pattern: ^workloadmember-[0-9a-f]{8}$
          description: Resource ID, generated by the inventory on Create.
          readOnly: true
        kind:
          title: kind
          description: The kind of the workload member.
          $ref: '#/components/schemas/WorkloadMemberKind'
        workload:
          title: workload
          description: The workload resource associated with the workload member.
          readOnly: true
          $ref: '#/components/schemas/WorkloadResource'
        instance:
          title: instance
          description: The instance resource associated with the workload member.
          readOnly: true
          $ref: '#/components/schemas/InstanceResource'
        workloadMemberId:
          type: string
          title: workload_member_id
          maxLength: 23
          pattern: ^workloadmember-[0-9a-f]{8}$
          description: Deprecated, The workload unique identifier. Alias of resourceId.
          readOnly: true
        member:
          title: member
          description: The reference of the Instance member of the workload.
          readOnly: true
          $ref: '#/components/schemas/InstanceResource'
        workloadId:
          type: string
          title: workload_id
          maxLength: 17
          pattern: ^workload-[0-9a-f]{8}$
          description: The workload unique identifier.
          writeOnly: true
        instanceId:
          type: string
          title: instance_id
          maxLength: 13
          pattern: ^inst-[0-9a-f]{8}$
          description: The unique identifier of the instance.
          writeOnly: true
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: WorkloadMember
      required:
        - kind
        - workloadId
        - instanceId
      additionalProperties: false
      description: Intermediate resource to represent a relation between a workload and a compute resource (i.e., instance).
    WorkloadResource:
      type: object
      properties:
        resourceId:
          type: string
          title: resource_id
          maxLength: 17
          pattern: ^workload-[0-9a-f]{8}$
          description: resource ID, generated by the inventory on Create.
          readOnly: true
        kind:
          title: kind
          description: Type of workload.
          $ref: '#/components/schemas/WorkloadKind'
        name:
          type: string
          title: name
          maxLength: 50
          pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
          description: Human-readable name for the workload.
        externalId:
          type: string
          title: external_id
          maxLength: 40
          pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
          description: The ID of the external resource, used to link to resources outside the realm of Edge Infrastructure Manager.
        status:
          type: string
          title: status
          maxLength: 500
          pattern: ^$|^[a-zA-Z-_0-9./:;=?@!#,<>*() ]+$
          description: Human-readable status of the workload.
        members:
          type: array
          items:
            $ref: '#/components/schemas/WorkloadMember'
          title: members
          description: The members of the workload.
          readOnly: true
        workloadId:
          type: string
          title: workload_id
          maxLength: 17
          pattern: ^workload-[0-9a-f]{8}$
          description: Deprecated, The workload unique identifier. Alias of resourceId.
          readOnly: true
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: WorkloadResource
      required:
        - kind
        - members
      additionalProperties: false
      description: A generic way to group compute resources to obtain a workload.
    ScheduleStatus:
      type: string
      title: ScheduleStatus
      enum:
        - SCHEDULE_STATUS_UNSPECIFIED
        - SCHEDULE_STATUS_MAINTENANCE
        - SCHEDULE_STATUS_OS_UPDATE
      description: The representation of a schedule's status.
    RepeatedScheduleResource:
      type: object
      properties:
        resourceId:
          type: string
          title: resource_id
          maxLength: 21
          pattern: ^repeatedsche-[0-9a-f]{8}$
          description: Resource ID, generated by the inventory on Create.
          readOnly: true
        scheduleStatus:
          title: schedule_status
          description: The schedule status.
          $ref: '#/components/schemas/ScheduleStatus'
        name:
          type: string
          title: name
          maxLength: 50
          pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
          description: The schedule's name.
        targetSite:
          title: target_site
          description: Resource ID of Site this applies to.
          readOnly: true
          $ref: '#/components/schemas/SiteResource'
        targetHost:
          title: target_host
          description: Resource ID of Host this applies to.
          readOnly: true
          $ref: '#/components/schemas/HostResource'
        targetRegion:
          title: target_region
          description: Resource ID of Region this applies to.
          readOnly: true
          $ref: '#/components/schemas/RegionResource'
        durationSeconds:
          type: integer
          title: duration_seconds
          maximum: 86400
          minimum: 1
          format: int32
          description: The duration in seconds of the repeated schedule, per schedule.
        cronMinutes:
          type: string
          title: cron_minutes
          pattern: ^([*]|([0-9]|([1-5][0-9]))((,([0-9]|([1-5][0-9])))*))$
          description: cron style minutes (0-59), it can be empty only when used in a Filter.
        cronHours:
          type: string
          title: cron_hours
          pattern: ^([*]|([0-9]|1[0-9]|2[0-3])((,([0-9]|1[0-9]|2[0-3]))*))$
          description: cron style hours (0-23), it can be empty only when used in a Filter
        cronDayMonth:
          type: string
          title: cron_day_month
          pattern: ^([*]|([1-9]|([12][0-9])|3[01])((,([1-9]|([12][0-9])|3[01]))*))$
          description: cron style day of month (1-31), it can be empty only when used in a Filter
        cronMonth:
          type: string
          title: cron_month
          pattern: ^([*]|([1-9]|1[012])((,([1-9]|1[012]))*))$
          description: cron style month (1-12), it can be empty only when used in a Filter
        cronDayWeek:
          type: string
          title: cron_day_week
          pattern: ^([*]|([0-6])((,([0-6]))*))$
          description: cron style day of week (0-6), it can be empty only when used in a Filter
        repeatedScheduleID:
          type: string
          title: repeated_scheduleID
          maxLength: 21
          pattern: ^repeatedsche-[0-9a-f]{8}$
          description: Deprecated, The repeated schedule's unique identifier. Alias of resourceId.
          readOnly: true
        targetHostId:
          type: string
          title: target_host_id
          maxLength: 13
          pattern: ^$|^host-[0-9a-f]{8}$
          description: |-
            The target region ID of the schedule.
             Only one target can be provided per schedule.
             This field cannot be used as filter.
          writeOnly: true
        targetSiteId:
          type: string
          title: target_site_id
          maxLength: 13
          pattern: ^$|^site-[0-9a-f]{8}$
          description: |-
            The target site ID of the schedule.
             Only one target can be provided per schedule.
             This field cannot be used as filter.
          writeOnly: true
        targetRegionId:
          type: string
          title: target_region_id
          maxLength: 15
          pattern: ^$|^region-[0-9a-f]{8}$
          description: |-
            The target region ID of the schedule.
             Only one target can be provided per schedule.
             This field cannot be used as filter.
          writeOnly: true
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: RepeatedScheduleResource
      required:
        - scheduleStatus
        - durationSeconds
        - cronMinutes
        - cronHours
        - cronDayMonth
        - cronMonth
        - cronDayWeek
      additionalProperties: false
      description: A repeated-schedule resource.
    SingleScheduleResource:
      type: object
      properties:
        resourceId:
          type: string
          title: resource_id
          maxLength: 19
          pattern: ^singlesche-[0-9a-f]{8}$
          description: Resource ID, generated by the inventory on Create.
          readOnly: true
        scheduleStatus:
          title: schedule_status
          description: The schedule status. status of one-time-schedule
          $ref: '#/components/schemas/ScheduleStatus'
        name:
          type: string
          title: name
          maxLength: 50
          pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
          description: The schedule's name.
        targetSite:
          title: target_site
          description: Resource ID of Site this applies to.
          readOnly: true
          $ref: '#/components/schemas/SiteResource'
        targetHost:
          title: target_host
          description: Resource ID of Host this applies to.
          readOnly: true
          $ref: '#/components/schemas/HostResource'
        targetRegion:
          title: target_region
          description: Resource ID of Region this applies to.
          readOnly: true
          $ref: '#/components/schemas/RegionResource'
        startSeconds:
          type: integer
          title: start_seconds
          maximum: 4294967295
          minimum: 1
          description: The start time in seconds, of the single schedule.
        endSeconds:
          type: integer
          title: end_seconds
          maximum: 4294967295
          minimum: 1
          description: |-
            The end time in seconds, of the single schedule.
             The value of endSeconds must be equal to or bigger than the value of startSeconds.
        singleScheduleID:
          type: string
          title: single_scheduleID
          maxLength: 19
          pattern: ^singlesche-[0-9a-f]{8}$
          description: Deprecated, The single schedule resource's unique identifier. Alias of resourceId.
          readOnly: true
        targetHostId:
          type: string
          title: target_host_id
          maxLength: 13
          pattern: ^$|^host-[0-9a-f]{8}$
          description: |-
            The target host ID of the schedule.
             Only one target can be provided per schedule.
             This field cannot be used as filter.
          writeOnly: true
        targetSiteId:
          type: string
          title: target_site_id
          maxLength: 13
          pattern: ^$|^site-[0-9a-f]{8}$
          description: |-
            The target site ID of the schedule.
             Only one target can be provided per schedule.
             This field cannot be used as filter.
          writeOnly: true
        targetRegionId:
          type: string
          title: target_region_id
          maxLength: 15
          pattern: ^$|^region-[0-9a-f]{8}$
          description: |-
            The target region ID of the schedule.
             Only one target can be provided per schedule.
             This field cannot be used as filter.
          writeOnly: true
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: SingleScheduleResource
      required:
        - scheduleStatus
        - startSeconds
      additionalProperties: false
      description: A single schedule resource.
    SeverityLevel:
      type: string
      title: SeverityLevel
      enum:
        - SEVERITY_LEVEL_UNSPECIFIED
        - SEVERITY_LEVEL_CRITICAL
        - SEVERITY_LEVEL_ERROR
        - SEVERITY_LEVEL_WARN
        - SEVERITY_LEVEL_INFO
        - SEVERITY_LEVEL_DEBUG
      description: |-
        Log level used for the telemetry config.
         This field must only be defined if kind equals to TELEMETRY_CONFIG_KIND_LOGS.
    TelemetryCollectorKind:
      type: string
      title: TelemetryCollectorKind
      enum:
        - TELEMETRY_COLLECTOR_KIND_UNSPECIFIED
        - TELEMETRY_COLLECTOR_KIND_HOST
        - TELEMETRY_COLLECTOR_KIND_CLUSTER
      description: The collector kind.
    TelemetryResourceKind:
      type: string
      title: TelemetryResourceKind
      enum:
        - TELEMETRY_RESOURCE_KIND_UNSPECIFIED
        - TELEMETRY_RESOURCE_KIND_METRICS
        - TELEMETRY_RESOURCE_KIND_LOGS
      description: Kind of telemetry collector.
    TelemetryLogsGroupResource:
      type: object
      properties:
        resourceId:
          type: string
          title: resource_id
          maxLength: 23
          pattern: ^telemetrygroup-[0-9a-f]{8}$
          description: Unique ID of the telemetry group.
          readOnly: true
        telemetryLogsGroupId:
          type: string
          title: telemetry_logs_group_id
          maxLength: 23
          pattern: ^telemetrygroup-[0-9a-f]{8}$
          description: Deprecated, Unique ID of the telemetry group. Alias of resource_id.
          readOnly: true
        name:
          type: string
          title: name
          maxLength: 50
          minLength: 1
          pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
          description: Human-readable name for the log group.
        collectorKind:
          title: collector_kind
          description: The collector kind.
          $ref: '#/components/schemas/TelemetryCollectorKind'
        groups:
          type: array
          items:
            type: string
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9.:;=@?!#*()"\ ]+$
            maxItems: 100
          title: groups
          maxItems: 100
          description: A list of log groups to collect.
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: TelemetryLogsGroupResource
      required:
        - name
        - collectorKind
        - groups
      additionalProperties: false
      description: TelemetryLogsGroupResource.
    TelemetryLogsProfileResource:
      type: object
      properties:
        resourceId:
          type: string
          title: resource_id
          maxLength: 25
          pattern: ^telemetryprofile-[0-9a-f]{8}$
          description: The ID of the telemetry profile.
          readOnly: true
        profileId:
          type: string
          title: profile_id
          maxLength: 25
          pattern: ^telemetryprofile-[0-9a-f]{8}$
          description: Deprecated, The ID of the telemetry profile.
          readOnly: true
        targetInstance:
          type: string
          title: target_instance
          maxLength: 13
          pattern: ^$|^inst-[0-9a-f]{8}$
          description: |-
            The ID of the instance that the telemetry profile is assigned to.
             Can only be one of targetInstance, targetSite, or targetRegion.
        targetSite:
          type: string
          title: target_site
          maxLength: 13
          pattern: ^$|^site-[0-9a-f]{8}$
          description: |-
            The ID of the site where the telemetry profile is assigned to.
             Can only be one of targetInstance, targetSite, or targetRegion.
        targetRegion:
          type: string
          title: target_region
          maxLength: 15
          pattern: ^$|^region-[0-9a-f]{8}$
          description: |-
            The ID of the region where the telemetry profile is assigned to.
             Can only be one of targetInstance, targetSite, or targetRegion.
        logLevel:
          title: log_level
          description: The log level og the telemetry profile.
          $ref: '#/components/schemas/SeverityLevel'
        logsGroupId:
          type: string
          title: logs_group_id
          maxLength: 23
          pattern: ^telemetrygroup-[0-9a-f]{8}$
          description: The unique identifier of the telemetry log group.
        logsGroup:
          title: logs_group
          description: The log group associated with the telemetry profile.
          readOnly: true
          $ref: '#/components/schemas/TelemetryLogsGroupResource'
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: TelemetryLogsProfileResource
      required:
        - logLevel
        - logsGroupId
      additionalProperties: false
      description: A telemetry log profile for a hierarchy object.
    TelemetryMetricsGroupResource:
      type: object
      properties:
        resourceId:
          type: string
          title: resource_id
          maxLength: 23
          pattern: ^telemetrygroup-[0-9a-f]{8}$
          description: Unique ID of the telemetry group.
          readOnly: true
        telemetryMetricsGroupId:
          type: string
          title: telemetry_metrics_group_id
          maxLength: 23
          pattern: ^telemetrygroup-[0-9a-f]{8}$
          description: Deprecated, Unique ID of the telemetry group. Alias of resource_id.
          readOnly: true
        name:
          type: string
          title: name
          maxLength: 50
          minLength: 1
          pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
          description: Human-readable name for the log group.
        collectorKind:
          title: collector_kind
          description: The collector kind.
          $ref: '#/components/schemas/TelemetryCollectorKind'
        groups:
          type: array
          items:
            type: string
            maxLength: 1000
            pattern: ^$|^[a-zA-Z-_0-9.:;=@?!#*()"\ ]+$
            maxItems: 100
          title: groups
          maxItems: 100
          description: A list of log groups to collect.
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: TelemetryMetricsGroupResource
      required:
        - name
        - collectorKind
        - groups
      additionalProperties: false
      description: TelemetryMetricsGroupResource.
    TelemetryMetricsProfileResource:
      type: object
      properties:
        resourceId:
          type: string
          title: resource_id
          maxLength: 25
          pattern: ^telemetryprofile-[0-9a-f]{8}$
          description: The ID of the telemetry profile.
          readOnly: true
        profileId:
          type: string
          title: profile_id
          maxLength: 25
          pattern: ^telemetryprofile-[0-9a-f]{8}$
          description: Deprecated, The ID of the telemetry profile.
          readOnly: true
        targetInstance:
          type: string
          title: target_instance
          maxLength: 13
          pattern: ^$|^inst-[0-9a-f]{8}$
          description: |-
            The ID of the instance that the telemetry profile is assigned to.
             Can only be one of targetInstance, targetSite, or targetRegion.
        targetSite:
          type: string
          title: target_site
          maxLength: 13
          pattern: ^$|^site-[0-9a-f]{8}$
          description: |-
            The ID of the site where the telemetry profile is assigned to.
             Can only be one of targetInstance, targetSite, or targetRegion.
        targetRegion:
          type: string
          title: target_region
          maxLength: 15
          pattern: ^$|^region-[0-9a-f]{8}$
          description: |-
            The ID of the region where the telemetry profile is assigned to.
             Can only be one of targetInstance, targetSite, or targetRegion.
        metricsInterval:
          type: integer
          title: metrics_interval
          minimum: 1
          format: int32
          description: |-
            Metric interval (in seconds) for the telemetry profile.
             This field must only be defined if the type equals to TELEMETRY_CONFIG_KIND_METRICS.
        metricsGroupId:
          type: string
          title: metrics_group_id
          maxLength: 23
          pattern: ^telemetrygroup-[0-9a-f]{8}$
          description: The unique identifier of the telemetry metric group.
        metricsGroup:
          title: metrics_group
          description: The metric group associated with the telemetry profile.
          readOnly: true
          $ref: '#/components/schemas/TelemetryMetricsGroupResource'
        timestamps:
          title: timestamps
          description: Timestamps associated to the resource.
          readOnly: true
          $ref: '#/components/schemas/Timestamps'
      title: TelemetryMetricsProfileResource
      required:
        - metricsInterval
        - metricsGroupId
      additionalProperties: false
      description: A telemetry metric profile for a hierarchy object.
    ListLocationsResponse.ResourceKind:
      type: string
      title: ResourceKind
      enum:
        - RESOURCE_KIND_UNSPECIFIED
        - RESOURCE_KIND_REGION
        - RESOURCE_KIND_SITE
    google.protobuf.FieldMask:
      type: string
      description: |-
        `FieldMask` represents a set of symbolic field paths, for example:

             paths: "f.a"
             paths: "f.b.d"

         Here `f` represents a field in some root message, `a` and `b`
         fields in the message found in `f`, and `d` a field found in the
         message in `f.b`.

         Field masks are used to specify a subset of fields that should be
         returned by a get operation or modified by an update operation.
         Field masks also have a custom JSON encoding (see below).

         # Field Masks in Projections

         When used in the context of a projection, a response message or
         sub-message is filtered by the API to only contain those fields as
         specified in the mask. For example, if the mask in the previous
         example is applied to a response message as follows:

             f {
               a : 22
               b {
                 d : 1
                 x : 2
               }
               y : 13
             }
             z: 8

         The result will not contain specific values for fields x,y and z
         (their value will be set to the default, and omitted in proto text
         output):


             f {
               a : 22
               b {
                 d : 1
               }
             }

         A repeated field is not allowed except at the last position of a
         paths string.

         If a FieldMask object is not present in a get operation, the
         operation applies to all fields (as if a FieldMask of all fields
         had been specified).

         Note that a field mask does not necessarily apply to the
         top-level response message. In case of a REST get operation, the
         field mask applies directly to the response, but in case of a REST
         list operation, the mask instead applies to each individual message
         in the returned resource list. In case of a REST custom method,
         other definitions may be used. Where the mask applies will be
         clearly documented together with its declaration in the API.  In
         any case, the effect on the returned resource/resources is required
         behavior for APIs.

         # Field Masks in Update Operations

         A field mask in update operations specifies which fields of the
         targeted resource are going to be updated. The API is required
         to only change the values of the fields as specified in the mask
         and leave the others untouched. If a resource is passed in to
         describe the updated values, the API ignores the values of all
         fields not covered by the mask.

         If a repeated field is specified for an update operation, new values will
         be appended to the existing repeated field in the target resource. Note that
         a repeated field is only allowed in the last position of a `paths` string.

         If a sub-message is specified in the last position of the field mask for an
         update operation, then new value will be merged into the existing sub-message
         in the target resource.

         For example, given the target message:

             f {
               b {
                 d: 1
                 x: 2
               }
               c: [1]
             }

         And an update message:

             f {
               b {
                 d: 10
               }
               c: [2]
             }

         then if the field mask is:

          paths: ["f.b", "f.c"]

         then the result will be:

             f {
               b {
                 d: 10
                 x: 2
               }
               c: [1, 2]
             }

         An implementation may provide options to override this default behavior for
         repeated and message fields.

         In order to reset a field's value to the default, the field must
         be in the mask and set to the default value in the provided resource.
         Hence, in order to reset all fields of a resource, provide a default
         instance of the resource and set all fields in the mask, or do
         not provide a mask as described below.

         If a field mask is not present on update, the operation applies to
         all fields (as if a field mask of all fields has been specified).
         Note that in the presence of schema evolution, this may mean that
         fields the client does not know and has therefore not filled into
         the request will be reset to their default. If this is unwanted
         behavior, a specific service may require a client to always specify
         a field mask, producing an error if not.

         As with get operations, the location of the resource which
         describes the updated values in the request message depends on the
         operation kind. In any case, the effect of the field mask is
         required to be honored by the API.

         ## Considerations for HTTP REST

         The HTTP kind of an update operation which uses a field mask must
         be set to PATCH instead of PUT in order to satisfy HTTP semantics
         (PUT must only be used for full updates).

         # JSON Encoding of Field Masks

         In JSON, a field mask is encoded as a single string where paths are
         separated by a comma. Fields name in each path are converted
         to/from lower-camel naming conventions.

         As an example, consider the following message declarations:

             message Profile {
               User user = 1;
               Photo photo = 2;
             }
             message User {
               string display_name = 1;
               string address = 2;
             }

         In proto a field mask for `Profile` may look as such:

             mask {
               paths: "user.display_name"
               paths: "photo"
             }

         In JSON, the same mask is represented as below:

             {
               mask: "user.displayName,photo"
             }

         # Field Masks and Oneof Fields

         Field masks treat fields in oneofs just as regular fields. Consider the
         following message:

             message SampleMessage {
               oneof test_oneof {
                 string name = 4;
                 SubMessage sub_message = 9;
               }
             }

         The field mask can be:

             mask {
               paths: "name"
             }

         Or:

             mask {
               paths: "sub_message"
             }

         Note that oneof type names ("test_oneof" in this case) cannot be used in
         paths.

         ## Field Mask Verification

         The implementation of any API method which has a FieldMask type field in the
         request should verify the included field paths, and return an
         `INVALID_ARGUMENT` error if any path is unmappable.
    CreateCustomConfigRequest:
      type: object
      properties:
        customConfig:
          title: custom_config
          description: The custom configuration to create.
          $ref: '#/components/schemas/CustomConfigResource'
      title: CreateCustomConfigRequest
      required:
        - customConfig
      additionalProperties: false
      description: Request message for the CreateCustomConfig method.
    CreateCustomConfigResponse:
      type: object
      properties:
        customConfig:
          title: custom_config
          description: The created custom configuration.
          $ref: '#/components/schemas/CustomConfigResource'
      title: CreateCustomConfigResponse
      required:
        - customConfig
      additionalProperties: false
      description: Response message for the CreateCustomConfig method.
    CreateHostRequest:
      type: object
      properties:
        host:
          title: host
          description: The host to create.
          $ref: '#/components/schemas/HostResource'
      title: CreateHostRequest
      required:
        - host
      additionalProperties: false
      description: Request message for the CreateHost method.
    CreateHostResponse:
      type: object
      properties:
        host:
          title: host
          description: The created host.
          $ref: '#/components/schemas/HostResource'
      title: CreateHostResponse
      required:
        - host
      additionalProperties: false
      description: Response message for the CreateHost method.
    CreateInstanceRequest:
      type: object
      properties:
        instance:
          title: instance
          description: The instance to create.
          $ref: '#/components/schemas/InstanceResource'
      title: CreateInstanceRequest
      required:
        - instance
      additionalProperties: false
      description: Request message for the CreateInstance method.
    CreateInstanceResponse:
      type: object
      properties:
        instance:
          title: instance
          description: The created instance.
          $ref: '#/components/schemas/InstanceResource'
      title: CreateInstanceResponse
      required:
        - instance
      additionalProperties: false
      description: Response message for the CreateInstance method.
    CreateLocalAccountRequest:
      type: object
      properties:
        localAccount:
          title: local_account
          description: The localaccount to create.
          $ref: '#/components/schemas/LocalAccountResource'
      title: CreateLocalAccountRequest
      required:
        - localAccount
      additionalProperties: false
      description: Request message for the CreateLocalAccount method.
    CreateLocalAccountResponse:
      type: object
      properties:
        localAccount:
          title: local_account
          description: The created localaccount.
          $ref: '#/components/schemas/LocalAccountResource'
      title: CreateLocalAccountResponse
      required:
        - localAccount
      additionalProperties: false
      description: Response message for the CreateLocalAccount method.
    CreateOSUpdatePolicyRequest:
      type: object
      properties:
        osUpdatePolicy:
          title: os_update_policy
          description: The OS Update policy to create.
          $ref: '#/components/schemas/OSUpdatePolicy'
      title: CreateOSUpdatePolicyRequest
      required:
        - osUpdatePolicy
      additionalProperties: false
      description: Request message for the CreateOSUpdatePolicy method.
    CreateOSUpdatePolicyResponse:
      type: object
      properties:
        osUpdatePolicy:
          title: os_update_policy
          description: The created os.
          $ref: '#/components/schemas/OSUpdatePolicy'
      title: CreateOSUpdatePolicyResponse
      required:
        - osUpdatePolicy
      additionalProperties: false
      description: Response message for the CreateOSUpdatePolicy method.
    CreateOSUpdateRunRequest:
      type: object
      properties:
        osUpdateRun:
          title: os_update_run
          description: The os update run to create.
          $ref: '#/components/schemas/OSUpdateRun'
      title: CreateOSUpdateRunRequest
      required:
        - osUpdateRun
      additionalProperties: false
      description: Request message for the CreateOSUpdateRun method.
    CreateOSUpdateRunResponse:
      type: object
      properties:
        osUpdateRun:
          title: os_update_run
          description: The created os.
          $ref: '#/components/schemas/OSUpdateRun'
      title: CreateOSUpdateRunResponse
      required:
        - osUpdateRun
      additionalProperties: false
      description: Response message for the CreateOSUpdateRun method.
    CreateOperatingSystemRequest:
      type: object
      properties:
        os:
          title: os
          description: The os to create.
          $ref: '#/components/schemas/OperatingSystemResource'
      title: CreateOperatingSystemRequest
      required:
        - os
      additionalProperties: false
      description: Request message for the CreateOperatingSystem method.
    CreateOperatingSystemResponse:
      type: object
      properties:
        os:
          title: os
          description: The created os.
          $ref: '#/components/schemas/OperatingSystemResource'
      title: CreateOperatingSystemResponse
      required:
        - os
      additionalProperties: false
      description: Response message for the CreateOperatingSystem method.
    CreateProviderRequest:
      type: object
      properties:
        provider:
          title: provider
          description: The provider to create.
          $ref: '#/components/schemas/ProviderResource'
      title: CreateProviderRequest
      required:
        - provider
      additionalProperties: false
      description: Request message for the CreateProvider method.
    CreateProviderResponse:
      type: object
      properties:
        provider:
          title: provider
          description: The created provider.
          $ref: '#/components/schemas/ProviderResource'
      title: CreateProviderResponse
      required:
        - provider
      additionalProperties: false
      description: Response message for the CreateProvider method.
    CreateRegionRequest:
      type: object
      properties:
        region:
          title: region
          description: The region to create.
          $ref: '#/components/schemas/RegionResource'
      title: CreateRegionRequest
      required:
        - region
      additionalProperties: false
      description: Request message for the CreateRegion method.
    CreateRegionResponse:
      type: object
      properties:
        region:
          title: region
          description: The created region.
          $ref: '#/components/schemas/RegionResource'
      title: CreateRegionResponse
      required:
        - region
      additionalProperties: false
      description: Response message for the CreateRegion method.
    CreateRepeatedScheduleRequest:
      type: object
      properties:
        repeatedSchedule:
          title: repeated_schedule
          description: The repeated_schedule to create.
          $ref: '#/components/schemas/RepeatedScheduleResource'
      title: CreateRepeatedScheduleRequest
      required:
        - repeatedSchedule
      additionalProperties: false
      description: Request message for the CreateRepeatedSchedule method.
    CreateRepeatedScheduleResponse:
      type: object
      properties:
        repeatedSchedule:
          title: repeated_schedule
          description: The created repeated_schedule.
          $ref: '#/components/schemas/RepeatedScheduleResource'
      title: CreateRepeatedScheduleResponse
      required:
        - repeatedSchedule
      additionalProperties: false
      description: Response message for the CreateRepeatedSchedule method.
    CreateSingleScheduleRequest:
      type: object
      properties:
        singleSchedule:
          title: single_schedule
          description: The single_schedule to create.
          $ref: '#/components/schemas/SingleScheduleResource'
      title: CreateSingleScheduleRequest
      required:
        - singleSchedule
      additionalProperties: false
      description: Request message for the CreateSingleSchedule method.
    CreateSingleScheduleResponse:
      type: object
      properties:
        singleSchedule:
          title: single_schedule
          description: The created single_schedule.
          $ref: '#/components/schemas/SingleScheduleResource'
      title: CreateSingleScheduleResponse
      required:
        - singleSchedule
      additionalProperties: false
      description: Response message for the CreateSingleSchedule method.
    CreateSiteRequest:
      type: object
      properties:
        site:
          title: site
          description: The site to create.
          $ref: '#/components/schemas/SiteResource'
      title: CreateSiteRequest
      required:
        - site
      additionalProperties: false
      description: Request message for the CreateSite method.
    CreateSiteResponse:
      type: object
      properties:
        site:
          title: site
          description: The created site.
          $ref: '#/components/schemas/SiteResource'
      title: CreateSiteResponse
      required:
        - site
      additionalProperties: false
      description: Response message for the CreateSite method.
    CreateTelemetryLogsGroupRequest:
      type: object
      properties:
        telemetryLogsGroup:
          title: telemetry_logs_group
          description: The telemetry_logs_group to create.
          $ref: '#/components/schemas/TelemetryLogsGroupResource'
      title: CreateTelemetryLogsGroupRequest
      required:
        - telemetryLogsGroup
      additionalProperties: false
      description: Request message for the CreateTelemetryLogsGroup method.
    CreateTelemetryLogsGroupResponse:
      type: object
      properties:
        telemetryLogsGroup:
          title: telemetry_logs_group
          description: The created telemetry_logs_group.
          $ref: '#/components/schemas/TelemetryLogsGroupResource'
      title: CreateTelemetryLogsGroupResponse
      required:
        - telemetryLogsGroup
      additionalProperties: false
      description: Response message for the CreateTelemetryLogsGroup method.
    CreateTelemetryLogsProfileRequest:
      type: object
      properties:
        telemetryLogsProfile:
          title: telemetry_logs_profile
          description: The telemetry_logs_profile to create.
          $ref: '#/components/schemas/TelemetryLogsProfileResource'
      title: CreateTelemetryLogsProfileRequest
      required:
        - telemetryLogsProfile
      additionalProperties: false
      description: Request message for the CreateTelemetryLogsProfile method.
    CreateTelemetryLogsProfileResponse:
      type: object
      properties:
        telemetryLogsProfile:
          title: telemetry_logs_profile
          description: The created telemetry_logs_profile.
          $ref: '#/components/schemas/TelemetryLogsProfileResource'
      title: CreateTelemetryLogsProfileResponse
      required:
        - telemetryLogsProfile
      additionalProperties: false
      description: Response message for the CreateTelemetryLogsProfile method.
    CreateTelemetryMetricsGroupRequest:
      type: object
      properties:
        telemetryMetricsGroup:
          title: telemetry_metrics_group
          description: The telemetry_metrics_group to create.
          $ref: '#/components/schemas/TelemetryMetricsGroupResource'
      title: CreateTelemetryMetricsGroupRequest
      required:
        - telemetryMetricsGroup
      additionalProperties: false
      description: Request message for the CreateTelemetryMetricsGroup method.
    CreateTelemetryMetricsGroupResponse:
      type: object
      properties:
        telemetryMetricsGroup:
          title: telemetry_metrics_group
          description: The created telemetry_metrics_group.
          $ref: '#/components/schemas/TelemetryMetricsGroupResource'
      title: CreateTelemetryMetricsGroupResponse
      required:
        - telemetryMetricsGroup
      additionalProperties: false
      description: Response message for the CreateTelemetryMetricsGroup method.
    CreateTelemetryMetricsProfileRequest:
      type: object
      properties:
        telemetryMetricsProfile:
          title: telemetry_metrics_profile
          description: The telemetry_metrics_profile to create.
          $ref: '#/components/schemas/TelemetryMetricsProfileResource'
      title: CreateTelemetryMetricsProfileRequest
      required:
        - telemetryMetricsProfile
      additionalProperties: false
      description: Request message for the CreateTelemetryMetricsProfile method.
    CreateTelemetryMetricsProfileResponse:
      type: object
      properties:
        telemetryMetricsProfile:
          title: telemetry_metrics_profile
          description: The created telemetry_metrics_profile.
          $ref: '#/components/schemas/TelemetryMetricsProfileResource'
      title: CreateTelemetryMetricsProfileResponse
      required:
        - telemetryMetricsProfile
      additionalProperties: false
      description: Response message for the CreateTelemetryMetricsProfile method.
    CreateWorkloadMemberRequest:
      type: object
      properties:
        workloadMember:
          title: workload_member
          description: The workload_member to create.
          $ref: '#/components/schemas/WorkloadMember'
      title: CreateWorkloadMemberRequest
      required:
        - workloadMember
      additionalProperties: false
      description: Request message for the CreateWorkloadMember method.
    CreateWorkloadMemberResponse:
      type: object
      properties:
        workloadMember:
          title: workload_member
          description: The created workload_member.
          $ref: '#/components/schemas/WorkloadMember'
      title: CreateWorkloadMemberResponse
      required:
        - workloadMember
      additionalProperties: false
      description: Response message for the CreateWorkloadMember method.
    CreateWorkloadRequest:
      type: object
      properties:
        workload:
          title: workload
          description: The workload to create.
          $ref: '#/components/schemas/WorkloadResource'
      title: CreateWorkloadRequest
      required:
        - workload
      additionalProperties: false
      description: Request message for the CreateWorkload method.
    CreateWorkloadResponse:
      type: object
      properties:
        workload:
          title: workload
          description: The created workload.
          $ref: '#/components/schemas/WorkloadResource'
      title: CreateWorkloadResponse
      required:
        - workload
      additionalProperties: false
      description: Response message for the CreateWorkload method.
    DeleteCustomConfigRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the customconfig to be deleted.
      title: DeleteCustomConfigRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for DeleteCustomConfig.
    DeleteCustomConfigResponse:
      type: object
      title: DeleteCustomConfigResponse
      additionalProperties: false
      description: Response message for DeleteCustomConfig.
    DeleteHostRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the host host to be deleted.
      title: DeleteHostRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for DeleteHost.
    DeleteHostResponse:
      type: object
      title: DeleteHostResponse
      additionalProperties: false
      description: Reponse message for DeleteHost.
    DeleteInstanceRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the instance instance to be deleted.
      title: DeleteInstanceRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for DeleteInstance.
    DeleteInstanceResponse:
      type: object
      title: DeleteInstanceResponse
      additionalProperties: false
      description: Response message for DeleteInstance.
    DeleteLocalAccountRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the localaccount to be deleted.
      title: DeleteLocalAccountRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for DeleteLocalAccount.
    DeleteLocalAccountResponse:
      type: object
      title: DeleteLocalAccountResponse
      additionalProperties: false
      description: Response message for DeleteLocalAccount.
    DeleteOSUpdatePolicyRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the OS Update Policy to be deleted.
      title: DeleteOSUpdatePolicyRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for DeleteOperatingSystem.
    DeleteOSUpdatePolicyResponse:
      type: object
      title: DeleteOSUpdatePolicyResponse
      additionalProperties: false
      description: Response message for DeleteOperatingSystem.
    DeleteOSUpdateRunRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the os update run to be deleted.
      title: DeleteOSUpdateRunRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for DeleteOperatingSystem.
    DeleteOSUpdateRunResponse:
      type: object
      title: DeleteOSUpdateRunResponse
      additionalProperties: false
      description: Response message for DeleteOperatingSystem.
    DeleteOperatingSystemRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the os os to be deleted.
      title: DeleteOperatingSystemRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for DeleteOperatingSystem.
    DeleteOperatingSystemResponse:
      type: object
      title: DeleteOperatingSystemResponse
      additionalProperties: false
      description: Response message for DeleteOperatingSystem.
    DeleteProviderRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the provider provider to be deleted.
      title: DeleteProviderRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for DeleteProvider.
    DeleteProviderResponse:
      type: object
      title: DeleteProviderResponse
      additionalProperties: false
      description: Response message for DeleteProvider.
    DeleteRegionRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the region region to be deleted.
      title: DeleteRegionRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for DeleteRegion.
    DeleteRegionResponse:
      type: object
      title: DeleteRegionResponse
      additionalProperties: false
      description: Response message for DeleteRegion.
    DeleteRepeatedScheduleRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the repeated_schedule repeated_schedule to be deleted.
      title: DeleteRepeatedScheduleRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for DeleteRepeatedSchedule.
    DeleteRepeatedScheduleResponse:
      type: object
      title: DeleteRepeatedScheduleResponse
      additionalProperties: false
      description: Response message for DeleteRepeatedSchedule.
    DeleteSingleScheduleRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the single_schedule single_schedule to be deleted.
      title: DeleteSingleScheduleRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for DeleteSingleSchedule.
    DeleteSingleScheduleResponse:
      type: object
      title: DeleteSingleScheduleResponse
      additionalProperties: false
      description: Response message for DeleteSingleSchedule.
    DeleteSiteRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the site site to be deleted.
      title: DeleteSiteRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for DeleteSite.
    DeleteSiteResponse:
      type: object
      title: DeleteSiteResponse
      additionalProperties: false
      description: Response message for DeleteSite.
    DeleteTelemetryLogsGroupRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the telemetry_logs_group telemetry_logs_group to be deleted.
      title: DeleteTelemetryLogsGroupRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for DeleteTelemetryLogsGroup.
    DeleteTelemetryLogsGroupResponse:
      type: object
      title: DeleteTelemetryLogsGroupResponse
      additionalProperties: false
      description: Response message for DeleteTelemetryLogsGroup.
    DeleteTelemetryLogsProfileRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the telemetry_logs_profile telemetry_logs_profile to be deleted.
      title: DeleteTelemetryLogsProfileRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for DeleteTelemetryLogsProfile.
    DeleteTelemetryLogsProfileResponse:
      type: object
      title: DeleteTelemetryLogsProfileResponse
      additionalProperties: false
      description: Response message for DeleteTelemetryLogsProfile.
    DeleteTelemetryMetricsGroupRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the telemetry_metrics_group telemetry_metrics_group to be deleted.
      title: DeleteTelemetryMetricsGroupRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for DeleteTelemetryMetricsGroup.
    DeleteTelemetryMetricsGroupResponse:
      type: object
      title: DeleteTelemetryMetricsGroupResponse
      additionalProperties: false
      description: Response message for DeleteTelemetryMetricsGroup.
    DeleteTelemetryMetricsProfileRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the telemetry_metrics_profile telemetry_metrics_profile to be deleted.
      title: DeleteTelemetryMetricsProfileRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for DeleteTelemetryMetricsProfile.
    DeleteTelemetryMetricsProfileResponse:
      type: object
      title: DeleteTelemetryMetricsProfileResponse
      additionalProperties: false
      description: Response message for DeleteTelemetryMetricsProfile.
    DeleteWorkloadMemberRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the workload_member workload_member to be deleted.
      title: DeleteWorkloadMemberRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for DeleteWorkloadMember.
    DeleteWorkloadMemberResponse:
      type: object
      title: DeleteWorkloadMemberResponse
      additionalProperties: false
      description: Response message for DeleteWorkloadMember.
    DeleteWorkloadRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the workload workload to be deleted.
      title: DeleteWorkloadRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for DeleteWorkload.
    DeleteWorkloadResponse:
      type: object
      title: DeleteWorkloadResponse
      additionalProperties: false
      description: Response message for DeleteWorkload.
    GetCustomConfigRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the requested custom configuration.
      title: GetCustomConfigRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for the GetCustomConfig method.
    GetCustomConfigResponse:
      type: object
      properties:
        customConfig:
          title: custom_config
          description: The requested custom configuration.
          $ref: '#/components/schemas/CustomConfigResource'
      title: GetCustomConfigResponse
      required:
        - customConfig
      additionalProperties: false
      description: Response message for the GetCustomConfig method.
    GetHostRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the requested host.
      title: GetHostRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for the GetHost method.
    GetHostResponse:
      type: object
      properties:
        host:
          title: host
          description: The requested host.
          $ref: '#/components/schemas/HostResource'
      title: GetHostResponse
      required:
        - host
      additionalProperties: false
      description: Response message for the GetHost method.
    GetHostSummaryRequest:
      type: object
      properties:
        filter:
          type: string
          title: filter
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
          description: |-
            (OPTIONAL) Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
      title: GetHostSummaryRequest
      additionalProperties: false
      description: Request the summary of Hosts resources.
    GetHostSummaryResponse:
      type: object
      properties:
        total:
          type: integer
          title: total
          description: The total number of hosts.
          readOnly: true
        error:
          type: integer
          title: error
          description: The total number of hosts presenting an Error.
          readOnly: true
        running:
          type: integer
          title: running
          description: The total number of hosts in Running state.
          readOnly: true
        unallocated:
          type: integer
          title: unallocated
          description: The total number of hosts without a site.
          readOnly: true
      title: GetHostSummaryResponse
      additionalProperties: false
      description: Summary of the hosts status.
    GetInstanceRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the requested instance.
      title: GetInstanceRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for the GetInstance method.
    GetInstanceResponse:
      type: object
      properties:
        instance:
          title: instance
          description: The requested instance.
          $ref: '#/components/schemas/InstanceResource'
      title: GetInstanceResponse
      required:
        - instance
      additionalProperties: false
      description: Response message for the GetInstance method.
    GetLocalAccountRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the requested localaccount.
      title: GetLocalAccountRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for the GetLocalAccount method.
    GetLocalAccountResponse:
      type: object
      properties:
        localAccount:
          title: local_account
          description: The requested localaccount.
          $ref: '#/components/schemas/LocalAccountResource'
      title: GetLocalAccountResponse
      required:
        - localAccount
      additionalProperties: false
      description: Response message for the GetLocalAccount method.
    GetOSUpdatePolicyRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the requested os.
      title: GetOSUpdatePolicyRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for the GetOSUpdatePolicy method.
    GetOSUpdatePolicyResponse:
      type: object
      properties:
        osUpdatePolicy:
          title: os_update_policy
          description: The requested os.
          $ref: '#/components/schemas/OSUpdatePolicy'
      title: GetOSUpdatePolicyResponse
      required:
        - osUpdatePolicy
      additionalProperties: false
      description: Response message for the GetOSUpdatePolicy method.
    GetOSUpdateRunRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the requested os.
      title: GetOSUpdateRunRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for the GetOSUpdateRun method.
    GetOSUpdateRunResponse:
      type: object
      properties:
        osUpdateRun:
          title: os_update_run
          description: The requested os.
          $ref: '#/components/schemas/OSUpdateRun'
      title: GetOSUpdateRunResponse
      required:
        - osUpdateRun
      additionalProperties: false
      description: Response message for the GetOSUpdateRun method.
    GetOperatingSystemRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the requested os.
      title: GetOperatingSystemRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for the GetOperatingSystem method.
    GetOperatingSystemResponse:
      type: object
      properties:
        os:
          title: os
          description: The requested os.
          $ref: '#/components/schemas/OperatingSystemResource'
      title: GetOperatingSystemResponse
      required:
        - os
      additionalProperties: false
      description: Response message for the GetOperatingSystem method.
    GetProviderRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the requested provider.
      title: GetProviderRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for the GetProvider method.
    GetProviderResponse:
      type: object
      properties:
        provider:
          title: provider
          description: The requested provider.
          $ref: '#/components/schemas/ProviderResource'
      title: GetProviderResponse
      required:
        - provider
      additionalProperties: false
      description: Response message for the GetProvider method.
    GetRegionRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the requested region.
      title: GetRegionRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for the GetRegion method.
    GetRegionResponse:
      type: object
      properties:
        region:
          title: region
          description: The requested region.
          $ref: '#/components/schemas/RegionResource'
      title: GetRegionResponse
      required:
        - region
      additionalProperties: false
      description: Response message for the GetRegion method.
    GetRepeatedScheduleRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the requested repeated_schedule.
      title: GetRepeatedScheduleRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for the GetRepeatedSchedule method.
    GetRepeatedScheduleResponse:
      type: object
      properties:
        repeatedSchedule:
          title: repeated_schedule
          description: The requested repeated_schedule.
          $ref: '#/components/schemas/RepeatedScheduleResource'
      title: GetRepeatedScheduleResponse
      required:
        - repeatedSchedule
      additionalProperties: false
      description: Response message for the GetRepeatedSchedule method.
    GetSingleScheduleRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the requested single_schedule.
      title: GetSingleScheduleRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for the GetSingleSchedule method.
    GetSingleScheduleResponse:
      type: object
      properties:
        singleSchedule:
          title: single_schedule
          description: The requested single_schedule.
          $ref: '#/components/schemas/SingleScheduleResource'
      title: GetSingleScheduleResponse
      required:
        - singleSchedule
      additionalProperties: false
      description: Response message for the GetSingleSchedule method.
    GetSiteRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the requested site.
      title: GetSiteRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for the GetSite method.
    GetSiteResponse:
      type: object
      properties:
        site:
          title: site
          description: The requested site.
          $ref: '#/components/schemas/SiteResource'
      title: GetSiteResponse
      required:
        - site
      additionalProperties: false
      description: Response message for the GetSite method.
    GetTelemetryLogsGroupRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the requested telemetry_logs_group.
      title: GetTelemetryLogsGroupRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for the GetTelemetryLogsGroup method.
    GetTelemetryLogsGroupResponse:
      type: object
      properties:
        telemetryLogsGroup:
          title: telemetry_logs_group
          description: The requested telemetry_logs_group.
          $ref: '#/components/schemas/TelemetryLogsGroupResource'
      title: GetTelemetryLogsGroupResponse
      required:
        - telemetryLogsGroup
      additionalProperties: false
      description: Response message for the GetTelemetryLogsGroup method.
    GetTelemetryLogsProfileRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the requested telemetry_logs_profile.
      title: GetTelemetryLogsProfileRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for the GetTelemetryLogsProfile method.
    GetTelemetryLogsProfileResponse:
      type: object
      properties:
        telemetryLogsProfile:
          title: telemetry_logs_profile
          description: The requested telemetry_logs_profile.
          $ref: '#/components/schemas/TelemetryLogsProfileResource'
      title: GetTelemetryLogsProfileResponse
      required:
        - telemetryLogsProfile
      additionalProperties: false
      description: Response message for the GetTelemetryLogsProfile method.
    GetTelemetryMetricsGroupRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the requested telemetry_metrics_group.
      title: GetTelemetryMetricsGroupRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for the GetTelemetryMetricsGroup method.
    GetTelemetryMetricsGroupResponse:
      type: object
      properties:
        telemetryMetricsGroup:
          title: telemetry_metrics_group
          description: The requested telemetry_metrics_group.
          $ref: '#/components/schemas/TelemetryMetricsGroupResource'
      title: GetTelemetryMetricsGroupResponse
      required:
        - telemetryMetricsGroup
      additionalProperties: false
      description: Response message for the GetTelemetryMetricsGroup method.
    GetTelemetryMetricsProfileRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the requested telemetry_metrics_profile.
      title: GetTelemetryMetricsProfileRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for the GetTelemetryMetricsProfile method.
    GetTelemetryMetricsProfileResponse:
      type: object
      properties:
        telemetryMetricsProfile:
          title: telemetry_metrics_profile
          description: The requested telemetry_metrics_profile.
          $ref: '#/components/schemas/TelemetryMetricsProfileResource'
      title: GetTelemetryMetricsProfileResponse
      required:
        - telemetryMetricsProfile
      additionalProperties: false
      description: Response message for the GetTelemetryMetricsProfile method.
    GetWorkloadMemberRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the requested workload_member.
      title: GetWorkloadMemberRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for the GetWorkloadMember method.
    GetWorkloadMemberResponse:
      type: object
      properties:
        workloadMember:
          title: workload_member
          description: The requested workload_member.
          $ref: '#/components/schemas/WorkloadMember'
      title: GetWorkloadMemberResponse
      required:
        - workloadMember
      additionalProperties: false
      description: Response message for the GetWorkloadMember method.
    GetWorkloadRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the requested workload.
      title: GetWorkloadRequest
      required:
        - resourceId
      additionalProperties: false
      description: Request message for the GetWorkload method.
    GetWorkloadResponse:
      type: object
      properties:
        workload:
          title: workload
          description: The requested workload.
          $ref: '#/components/schemas/WorkloadResource'
      title: GetWorkloadResponse
      required:
        - workload
      additionalProperties: false
      description: Response message for the GetWorkload method.
    HostRegister:
      type: object
      properties:
        name:
          type: string
          title: name
          maxLength: 20
          pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
          description: The host name.
        serialNumber:
          type: string
          title: serial_number
          pattern: ^([A-Za-z0-9]{5,20})?$
          description: The host serial number.
        uuid:
          type: string
          title: uuid
          maxLength: 36
          pattern: ^$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
          description: The host UUID.
        autoOnboard:
          type: boolean
          title: auto_onboard
          description: Flag to signal to automatically onboard the host.
        enableVpro:
          type: boolean
          title: enable_vpro
          description: Flag to signal to enable vPRO on the host.
        userLvmSize:
          type: integer
          title: user_lvm_size
          description: LVM size in GB
      title: HostRegister
      additionalProperties: false
      description: Message to register a Host.
    InvalidateHostRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          pattern: ^host-[0-9a-f]{8}$
          description: Host resource ID
        note:
          type: string
          title: note
          maxLength: 512
          minLength: 1
          pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()" ]+$
          description: user-provided reason for change or a freeform field
      title: InvalidateHostRequest
      additionalProperties: false
      description: Request to invalidate/untrust a Host.
    InvalidateHostResponse:
      type: object
      title: InvalidateHostResponse
      additionalProperties: false
      description: Response message for InvalidateHost.
    InvalidateInstanceRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          pattern: ^inst-[0-9a-f]{8}$
          description: Instance resource ID
      title: InvalidateInstanceRequest
      additionalProperties: false
      description: Request message for Invalidate Instance.
    InvalidateInstanceResponse:
      type: object
      title: InvalidateInstanceResponse
      additionalProperties: false
      description: Response message for Invalidate Instance.
    ListCustomConfigsRequest:
      type: object
      properties:
        orderBy:
          type: string
          title: order_by
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9., ]+$
          description: |-
            (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
        filter:
          type: string
          title: filter
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
          description: |-
            (OPTIONAL) Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
        pageSize:
          type: integer
          title: page_size
          maximum: 100
          minimum: 1
          description: |-
            (OPTIONAL) Defines the amount of items to be contained in a single page.
             Default of 20.
        offset:
          type: integer
          title: offset
          maximum: 10000
          description: (OPTIONAL) Index of the first item to return. This allows skipping items.
      title: ListCustomConfigsRequest
      additionalProperties: false
      description: Request message for the ListCustomConfigs method.
    ListCustomConfigsResponse:
      type: object
      properties:
        customConfigs:
          type: array
          items:
            $ref: '#/components/schemas/CustomConfigResource'
          title: custom_configs
          description: Sorted and filtered list of customconfigs.
        totalElements:
          type: integer
          title: total_elements
          format: int32
          description: Count of items in the entire list, regardless of pagination.
        hasNext:
          type: boolean
          title: has_next
          description: Inform if there are more elements
      title: ListCustomConfigsResponse
      required:
        - customConfigs
        - totalElements
        - hasNext
      additionalProperties: false
      description: Response message for the ListCustomConfigs method.
    ListHostsRequest:
      type: object
      properties:
        orderBy:
          type: string
          title: order_by
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9., ]+$
          description: |-
            (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
        filter:
          type: string
          title: filter
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
          description: |-
            (OPTIONAL) Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
        pageSize:
          type: integer
          title: page_size
          maximum: 100
          minimum: 1
          description: |-
            (OPTIONAL) Defines the amount of items to be contained in a single page.
             Default of 20.
        offset:
          type: integer
          title: offset
          maximum: 10000
          description: (OPTIONAL) Index of the first item to return. This allows skipping items.
      title: ListHostsRequest
      additionalProperties: false
      description: Request message for the ListHosts method.
    ListHostsResponse:
      type: object
      properties:
        hosts:
          type: array
          items:
            $ref: '#/components/schemas/HostResource'
          title: hosts
          description: Sorted and filtered list of hosts.
        totalElements:
          type: integer
          title: total_elements
          format: int32
          description: Count of items in the entire list, regardless of pagination.
        hasNext:
          type: boolean
          title: has_next
          description: Inform if there are more elements
      title: ListHostsResponse
      required:
        - hosts
        - totalElements
        - hasNext
      additionalProperties: false
      description: Response message for the ListHosts method.
    ListInstancesRequest:
      type: object
      properties:
        orderBy:
          type: string
          title: order_by
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9., ]+$
          description: |-
            (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
        filter:
          type: string
          title: filter
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
          description: |-
            (OPTIONAL) Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
        pageSize:
          type: integer
          title: page_size
          maximum: 100
          minimum: 1
          description: |-
            (OPTIONAL) Defines the amount of items to be contained in a single page.
             Default of 20.
        offset:
          type: integer
          title: offset
          maximum: 10000
          description: (OPTIONAL) Index of the first item to return. This allows skipping items.
      title: ListInstancesRequest
      additionalProperties: false
      description: Request message for the ListInstances method.
    ListInstancesResponse:
      type: object
      properties:
        instances:
          type: array
          items:
            $ref: '#/components/schemas/InstanceResource'
          title: instances
          description: Sorted and filtered list of instances.
        totalElements:
          type: integer
          title: total_elements
          format: int32
          description: Count of items in the entire list, regardless of pagination.
        hasNext:
          type: boolean
          title: has_next
          description: Inform if there are more elements
      title: ListInstancesResponse
      required:
        - instances
        - totalElements
        - hasNext
      additionalProperties: false
      description: Response message for the ListInstances method.
    ListLocalAccountsRequest:
      type: object
      properties:
        orderBy:
          type: string
          title: order_by
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9., ]+$
          description: |-
            (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
        filter:
          type: string
          title: filter
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
          description: |-
            (OPTIONAL) Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
        pageSize:
          type: integer
          title: page_size
          maximum: 100
          minimum: 1
          description: |-
            (OPTIONAL) Defines the amount of items to be contained in a single page.
             Default of 20.
        offset:
          type: integer
          title: offset
          maximum: 10000
          description: (OPTIONAL) Index of the first item to return. This allows skipping items.
      title: ListLocalAccountsRequest
      additionalProperties: false
      description: Request message for the ListLocalAccounts method.
    ListLocalAccountsResponse:
      type: object
      properties:
        localAccounts:
          type: array
          items:
            $ref: '#/components/schemas/LocalAccountResource'
          title: local_accounts
          description: Sorted and filtered list of localaccounts.
        totalElements:
          type: integer
          title: total_elements
          format: int32
          description: Count of items in the entire list, regardless of pagination.
        hasNext:
          type: boolean
          title: has_next
          description: Inform if there are more elements
      title: ListLocalAccountsResponse
      required:
        - localAccounts
        - totalElements
        - hasNext
      additionalProperties: false
      description: Response message for the ListLocalAccounts method.
    ListLocationsRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          maxLength: 50
          pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
          description: (OPTIONAL) Filter locations by name
        showSites:
          type: boolean
          title: show_sites
          description: (OPTIONAL) Return site locations
        showRegions:
          type: boolean
          title: show_regions
          description: (OPTIONAL) Return region locations
      title: ListLocationsRequest
      additionalProperties: false
      description: Request message for the ListLocations method.
    ListLocationsResponse:
      type: object
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/ListLocationsResponse.LocationNode'
          title: nodes
          description: Sorted and filtered list of regions.
        totalElements:
          type: integer
          title: total_elements
          format: int32
          description: (OPTIONAL) Count of items in the entire list, regardless of pagination.
        outputElements:
          type: integer
          title: output_elements
          format: int32
          description: (OPTIONAL) Amount of items in the returned list.
      title: ListLocationsResponse
      required:
        - nodes
      additionalProperties: false
      description: Response message for the ListLocations method.
    ListLocationsResponse.LocationNode:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: The associated node resource ID, generated by inventory on Create.
        parentId:
          type: string
          title: parent_id
          description: |-
            The associated resource ID, of the parent resource of this Location node.
             In the case of a region, it could be empty or a regionId.
             In the case of a site, it could be empty or a regionId.
        name:
          type: string
          title: name
          description: The node human readable name.
        type:
          title: type
          description: The node type
          $ref: '#/components/schemas/ListLocationsResponse.ResourceKind'
      title: LocationNode
      required:
        - resourceId
        - parentId
        - name
        - type
      additionalProperties: false
      description: A node in the location tree.
    ListOSUpdatePolicyRequest:
      type: object
      properties:
        orderBy:
          type: string
          title: order_by
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9., ]+$
          description: |-
            (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
        filter:
          type: string
          title: filter
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
          description: |-
            (OPTIONAL) Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
        pageSize:
          type: integer
          title: page_size
          maximum: 100
          minimum: 1
          description: |-
            (OPTIONAL) Defines the amount of items to be contained in a single page.
             Default of 20.
        offset:
          type: integer
          title: offset
          maximum: 10000
          description: (OPTIONAL) Index of the first item to return. This allows skipping items.
      title: ListOSUpdatePolicyRequest
      additionalProperties: false
      description: Request message for the ListOSUpdatePolicy method.
    ListOSUpdatePolicyResponse:
      type: object
      properties:
        osUpdatePolicies:
          type: array
          items:
            $ref: '#/components/schemas/OSUpdatePolicy'
          title: os_update_policies
          description: Sorted and filtered list of OS Update Policies.
        totalElements:
          type: integer
          title: total_elements
          format: int32
          description: Count of items in the entire list, regardless of pagination.
        hasNext:
          type: boolean
          title: has_next
          description: Inform if there are more elements
      title: ListOSUpdatePolicyResponse
      required:
        - osUpdatePolicies
        - totalElements
        - hasNext
      additionalProperties: false
      description: Response message for the ListOSUpdatePolicy method.
    ListOSUpdateRunRequest:
      type: object
      properties:
        orderBy:
          type: string
          title: order_by
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9., ]+$
          description: |-
            (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
        filter:
          type: string
          title: filter
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
          description: |-
            (OPTIONAL) Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
        pageSize:
          type: integer
          title: page_size
          maximum: 100
          minimum: 1
          description: |-
            (OPTIONAL) Defines the amount of items to be contained in a single page.
             Default of 20.
        offset:
          type: integer
          title: offset
          maximum: 10000
          description: (OPTIONAL) Index of the first item to return. This allows skipping items.
      title: ListOSUpdateRunRequest
      additionalProperties: false
      description: Request message for the ListOSUpdateRun method.
    ListOSUpdateRunResponse:
      type: object
      properties:
        osUpdateRuns:
          type: array
          items:
            $ref: '#/components/schemas/OSUpdateRun'
          title: os_update_runs
          description: Sorted and filtered list of os update runs.
        totalElements:
          type: integer
          title: total_elements
          format: int32
          description: Count of items in the entire list, regardless of pagination.
        hasNext:
          type: boolean
          title: has_next
          description: Inform if there are more elements
      title: ListOSUpdateRunResponse
      required:
        - osUpdateRuns
        - totalElements
        - hasNext
      additionalProperties: false
      description: Response message for the ListOSUpdateRun method.
    ListOperatingSystemsRequest:
      type: object
      properties:
        orderBy:
          type: string
          title: order_by
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9., ]+$
          description: |-
            (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
        filter:
          type: string
          title: filter
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
          description: |-
            (OPTIONAL) Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
        pageSize:
          type: integer
          title: page_size
          maximum: 100
          minimum: 1
          description: |-
            (OPTIONAL) Defines the amount of items to be contained in a single page.
             Default of 20.
        offset:
          type: integer
          title: offset
          maximum: 10000
          description: (OPTIONAL) Index of the first item to return. This allows skipping items.
      title: ListOperatingSystemsRequest
      additionalProperties: false
      description: Request message for the ListOperatingSystems method.
    ListOperatingSystemsResponse:
      type: object
      properties:
        OperatingSystemResources:
          type: array
          items:
            $ref: '#/components/schemas/OperatingSystemResource'
          title: Operating_system_resources
          description: Sorted and filtered list of oss.
        totalElements:
          type: integer
          title: total_elements
          format: int32
          description: Count of items in the entire list, regardless of pagination.
        hasNext:
          type: boolean
          title: has_next
          description: Inform if there are more elements
      title: ListOperatingSystemsResponse
      required:
        - OperatingSystemResources
        - totalElements
        - hasNext
      additionalProperties: false
      description: Response message for the ListOperatingSystems method.
    ListProvidersRequest:
      type: object
      properties:
        orderBy:
          type: string
          title: order_by
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9., ]+$
          description: |-
            (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
        filter:
          type: string
          title: filter
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
          description: |-
            (OPTIONAL) Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
        pageSize:
          type: integer
          title: page_size
          maximum: 100
          minimum: 1
          description: |-
            (OPTIONAL) Defines the amount of items to be contained in a single page.
             Default of 20.
        offset:
          type: integer
          title: offset
          maximum: 10000
          description: (OPTIONAL) Index of the first item to return. This allows skipping items.
      title: ListProvidersRequest
      additionalProperties: false
      description: Request message for the ListProviders method.
    ListProvidersResponse:
      type: object
      properties:
        providers:
          type: array
          items:
            $ref: '#/components/schemas/ProviderResource'
          title: providers
          description: Sorted and filtered list of providers.
        totalElements:
          type: integer
          title: total_elements
          format: int32
          description: Count of items in the entire list, regardless of pagination.
        hasNext:
          type: boolean
          title: has_next
          description: Inform if there are more elements
      title: ListProvidersResponse
      required:
        - providers
        - totalElements
        - hasNext
      additionalProperties: false
      description: Response message for the ListProviders method.
    ListRegionsRequest:
      type: object
      properties:
        orderBy:
          type: string
          title: order_by
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9., ]+$
          description: |-
            (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
        filter:
          type: string
          title: filter
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
          description: |-
            (OPTIONAL) Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
        pageSize:
          type: integer
          title: page_size
          maximum: 100
          minimum: 1
          description: |-
            (OPTIONAL) Defines the amount of items to be contained in a single page.
             Default of 20.
        offset:
          type: integer
          title: offset
          maximum: 10000
          description: (OPTIONAL) Index of the first item to return. This allows skipping items.
        showTotalSites:
          type: boolean
          title: show_total_sites
          description: (OPTIONAL) Flag to signal if the total amount of site in a region should be returned.
      title: ListRegionsRequest
      additionalProperties: false
      description: Request message for the ListRegions method.
    ListRegionsResponse:
      type: object
      properties:
        regions:
          type: array
          items:
            $ref: '#/components/schemas/RegionResource'
          title: regions
          description: Sorted and filtered list of regions.
        totalElements:
          type: integer
          title: total_elements
          format: int32
          description: Count of items in the entire list, regardless of pagination.
        hasNext:
          type: boolean
          title: has_next
          description: Inform if there are more elements
      title: ListRegionsResponse
      required:
        - regions
        - totalElements
        - hasNext
      additionalProperties: false
      description: Response message for the ListRegions method.
    ListRepeatedSchedulesRequest:
      type: object
      properties:
        pageSize:
          type: integer
          title: page_size
          maximum: 100
          minimum: 1
          description: |-
            (OPTIONAL) Defines the amount of items to be contained in a single page.
             Default of 20.
        offset:
          type: integer
          title: offset
          maximum: 10000
          description: (OPTIONAL) Index of the first item to return. This allows skipping items.
        hostId:
          type: string
          title: host_id
          pattern: ^host-[0-9a-f]{8}$
          description: |-
            (OPTIONAL) The host ID target of the schedules. If not specified, returns all schedules
             (given the other query params). If specified, returns the schedules that have
             the specified host ID applied to them, i.e., target including the inherited ones
             (parent site if not null). If null, returns all the schedules without a host ID as target.
        siteId:
          type: string
          title: site_id
          pattern: ^site-[0-9a-f]{8}$
          description: |-
            (OPTIONAL) The site ID target of the schedules. If not specified, returns all schedules
             (given the other query params). If specified, returns the schedules that have
             the specified site ID applied to them, i.e., target including the inherited ones.
             If null, returns all the schedules without a site ID as target
        regionId:
          type: string
          title: region_id
          pattern: ^region-[0-9a-f]{8}$
          description: |-
            (OPTIONAL) The region ID target of the schedules. If not specified,
             returns all schedules (given the other query params).
             If specified, returns the schedules that have the specified region ID applied to them,
             i.e., target including the inherited ones (parent region if not null).
             If null, returns all the schedules without a region ID as target.
        unixEpoch:
          type: string
          title: unix_epoch
          pattern: ^[0-9]+$
          description: (OPTIONAL) Filter based on the timestamp, expected to be UNIX epoch UTC timestamp in seconds.
      title: ListRepeatedSchedulesRequest
      additionalProperties: false
      description: Request message for the ListRepeatedSchedules method.
    ListRepeatedSchedulesResponse:
      type: object
      properties:
        repeatedSchedules:
          type: array
          items:
            $ref: '#/components/schemas/RepeatedScheduleResource'
          title: repeated_schedules
          description: Sorted and filtered list of repeated_schedules.
        totalElements:
          type: integer
          title: total_elements
          format: int32
          description: Count of items in the entire list, regardless of pagination.
        hasNext:
          type: boolean
          title: has_next
          description: Inform if there are more elements
      title: ListRepeatedSchedulesResponse
      required:
        - repeatedSchedules
        - totalElements
        - hasNext
      additionalProperties: false
      description: Response message for the ListRepeatedSchedules method.
    ListSchedulesRequest:
      type: object
      properties:
        pageSize:
          type: integer
          title: page_size
          maximum: 100
          minimum: 1
          description: |-
            (OPTIONAL) Defines the amount of items to be contained in a single page.
             Default of 20.
        offset:
          type: integer
          title: offset
          maximum: 10000
          description: (OPTIONAL) Index of the first item to return. This allows skipping items.
        hostId:
          type: string
          title: host_id
          pattern: ^host-[0-9a-f]{8}$
          description: |-
            (OPTIONAL) The host ID target of the schedules. If not specified, returns all schedules
             (given the other query params). If specified, returns the schedules that have
             the specified host ID applied to them, i.e., target including the inherited ones
             (parent site if not null). If null, returns all the schedules without a host ID as target.
        siteId:
          type: string
          title: site_id
          pattern: ^site-[0-9a-f]{8}$
          description: |-
            (OPTIONAL) The site ID target of the schedules. If not specified, returns all schedules
             (given the other query params). If specified, returns the schedules that have
             the specified site ID applied to them, i.e., target including the inherited ones.
             If null, returns all the schedules without a site ID as target
        regionId:
          type: string
          title: region_id
          pattern: ^region-[0-9a-f]{8}$
          description: |-
            (OPTIONAL) The region ID target of the schedules. If not specified,
             returns all schedules (given the other query params).
             If specified, returns the schedules that have the specified region ID applied to them,
             i.e., target including the inherited ones (parent region if not null).
             If null, returns all the schedules without a region ID as target.
        unixEpoch:
          type: string
          title: unix_epoch
          pattern: ^[0-9]+$
          description: (OPTIONAL) Filter based on the timestamp, expected to be UNIX epoch UTC timestamp in seconds.
      title: ListSchedulesRequest
      additionalProperties: false
      description: Request message for the ListSchedules method.
    ListSchedulesResponse:
      type: object
      properties:
        singleSchedules:
          type: array
          items:
            $ref: '#/components/schemas/SingleScheduleResource'
          title: single_schedules
          description: Sorted and filtered list of single_schedules.
        repeatedSchedules:
          type: array
          items:
            $ref: '#/components/schemas/RepeatedScheduleResource'
          title: repeated_schedules
          description: Sorted and filtered list of repeated_schedules.
        totalElements:
          type: integer
          title: total_elements
          format: int32
          description: Count of items in the entire list, regardless of pagination.
        hasNext:
          type: boolean
          title: has_next
          description: Inform if there are more elements
      title: ListSchedulesResponse
      required:
        - singleSchedules
        - repeatedSchedules
        - totalElements
        - hasNext
      additionalProperties: false
      description: Response message for the ListSchedulesResponse method.
    ListSingleSchedulesRequest:
      type: object
      properties:
        pageSize:
          type: integer
          title: page_size
          maximum: 100
          minimum: 1
          description: |-
            (OPTIONAL) Defines the amount of items to be contained in a single page.
             Default of 20.
        offset:
          type: integer
          title: offset
          maximum: 10000
          description: (OPTIONAL) Index of the first item to return. This allows skipping items.
        hostId:
          type: string
          title: host_id
          pattern: ^host-[0-9a-f]{8}$
          description: |-
            (OPTIONAL) The host ID target of the schedules. If not specified, returns all schedules
             (given the other query params). If specified, returns the schedules that have
             the specified host ID applied to them, i.e., target including the inherited ones
             (parent site if not null). If null, returns all the schedules without a host ID as target.
        siteId:
          type: string
          title: site_id
          pattern: ^site-[0-9a-f]{8}$
          description: |-
            (OPTIONAL) The site ID target of the schedules. If not specified, returns all schedules
             (given the other query params). If specified, returns the schedules that have
             the specified site ID applied to them, i.e., target including the inherited ones.
             If null, returns all the schedules without a site ID as target
        regionId:
          type: string
          title: region_id
          pattern: ^region-[0-9a-f]{8}$
          description: |-
            (OPTIONAL) The region ID target of the schedules. If not specified,
             returns all schedules (given the other query params).
             If specified, returns the schedules that have the specified region ID applied to them,
             i.e., target including the inherited ones (parent region if not null).
             If null, returns all the schedules without a region ID as target.
        unixEpoch:
          type: string
          title: unix_epoch
          pattern: ^[0-9]+$
          description: (OPTIONAL) Filter based on the timestamp, expected to be UNIX epoch UTC timestamp in seconds.
      title: ListSingleSchedulesRequest
      additionalProperties: false
      description: Request message for the ListSingleSchedules method.
    ListSingleSchedulesResponse:
      type: object
      properties:
        singleSchedules:
          type: array
          items:
            $ref: '#/components/schemas/SingleScheduleResource'
          title: single_schedules
          description: Sorted and filtered list of single_schedules.
        totalElements:
          type: integer
          title: total_elements
          format: int32
          description: Count of items in the entire list, regardless of pagination.
        hasNext:
          type: boolean
          title: has_next
          description: Inform if there are more elements
      title: ListSingleSchedulesResponse
      required:
        - singleSchedules
        - totalElements
        - hasNext
      additionalProperties: false
      description: Response message for the ListSingleSchedules method.
    ListSitesRequest:
      type: object
      properties:
        orderBy:
          type: string
          title: order_by
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9., ]+$
          description: |-
            (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
        filter:
          type: string
          title: filter
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
          description: |-
            (OPTIONAL) Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
        pageSize:
          type: integer
          title: page_size
          maximum: 100
          minimum: 1
          description: |-
            (OPTIONAL) Defines the amount of items to be contained in a single page.
             Default of 20.
        offset:
          type: integer
          title: offset
          maximum: 10000
          description: (OPTIONAL) Index of the first item to return. This allows skipping items.
      title: ListSitesRequest
      additionalProperties: false
      description: Request message for the ListSites method.
    ListSitesResponse:
      type: object
      properties:
        sites:
          type: array
          items:
            $ref: '#/components/schemas/SiteResource'
          title: sites
          description: Sorted and filtered list of sites.
        totalElements:
          type: integer
          title: total_elements
          format: int32
          description: Count of items in the entire list, regardless of pagination.
        hasNext:
          type: boolean
          title: has_next
          description: Inform if there are more elements
      title: ListSitesResponse
      required:
        - sites
        - totalElements
        - hasNext
      additionalProperties: false
      description: Response message for the ListSites method.
    ListTelemetryLogsGroupsRequest:
      type: object
      properties:
        pageSize:
          type: integer
          title: page_size
          maximum: 100
          minimum: 1
          description: |-
            (OPTIONAL) Defines the amount of items to be contained in a single page.
             Default of 20.
        offset:
          type: integer
          title: offset
          maximum: 10000
          description: (OPTIONAL) Index of the first item to return. This allows skipping items.
        orderBy:
          type: string
          title: order_by
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9., ]+$
          description: |-
            (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
      title: ListTelemetryLogsGroupsRequest
      additionalProperties: false
      description: Request message for the ListTelemetryLogsGroups method.
    ListTelemetryLogsGroupsResponse:
      type: object
      properties:
        telemetryLogsGroups:
          type: array
          items:
            $ref: '#/components/schemas/TelemetryLogsGroupResource'
          title: telemetry_logs_groups
          description: Sorted and filtered list of telemetry_logs_groups.
        totalElements:
          type: integer
          title: total_elements
          format: int32
          description: Count of items in the entire list, regardless of pagination.
        hasNext:
          type: boolean
          title: has_next
          description: Inform if there are more elements
      title: ListTelemetryLogsGroupsResponse
      required:
        - telemetryLogsGroups
        - totalElements
        - hasNext
      additionalProperties: false
      description: Response message for the ListTelemetryLogsGroups method.
    ListTelemetryLogsProfilesRequest:
      type: object
      properties:
        pageSize:
          type: integer
          title: page_size
          maximum: 100
          minimum: 1
          description: |-
            (OPTIONAL) Defines the amount of items to be contained in a single page.
             Default of 20.
        offset:
          type: integer
          title: offset
          maximum: 10000
          description: (OPTIONAL) Index of the first item to return. This allows skipping items.
        orderBy:
          type: string
          title: order_by
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9., ]+$
          description: |-
            (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
        instanceId:
          type: string
          title: instance_id
          pattern: ^inst-[0-9a-f]{8}$
          description: (OPTIONAL) Returns only the telemetry profiles that are assigned with the given instance identifier.
        siteId:
          type: string
          title: site_id
          pattern: ^site-[0-9a-f]{8}$
          description: (OPTIONAL) Returns only the telemetry profiles that are assigned with the given siteID.
        regionId:
          type: string
          title: region_id
          pattern: ^region-[0-9a-f]{8}$
          description: (OPTIONAL) Returns only the telemetry profiles that are assigned with the given regionID.
        showInherited:
          type: boolean
          title: show_inherited
          description: |-
            (OPTIONAL) Indicates if listed telemetry profiles should be extended with telemetry
             profiles rendered from hierarchy. This flag is only used along with one
             of siteId, regionId or instanceId. If siteId, regionId or instanceId are
             not set, this flag is ignored.
      title: ListTelemetryLogsProfilesRequest
      additionalProperties: false
      description: Request message for the ListTelemetryLogsProfiles method.
    ListTelemetryLogsProfilesResponse:
      type: object
      properties:
        telemetryLogsProfiles:
          type: array
          items:
            $ref: '#/components/schemas/TelemetryLogsProfileResource'
          title: telemetry_logs_profiles
          description: Sorted and filtered list of telemetry_logs_profiles.
        totalElements:
          type: integer
          title: total_elements
          format: int32
          description: Count of items in the entire list, regardless of pagination.
        hasNext:
          type: boolean
          title: has_next
          description: Inform if there are more elements
      title: ListTelemetryLogsProfilesResponse
      required:
        - telemetryLogsProfiles
        - totalElements
        - hasNext
      additionalProperties: false
      description: Response message for the ListTelemetryLogsProfiles method.
    ListTelemetryMetricsGroupsRequest:
      type: object
      properties:
        pageSize:
          type: integer
          title: page_size
          maximum: 100
          minimum: 1
          description: |-
            (OPTIONAL) Defines the amount of items to be contained in a single page.
             Default of 20.
        offset:
          type: integer
          title: offset
          maximum: 10000
          description: (OPTIONAL) Index of the first item to return. This allows skipping items.
        orderBy:
          type: string
          title: order_by
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9., ]+$
          description: |-
            (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
      title: ListTelemetryMetricsGroupsRequest
      additionalProperties: false
      description: Request message for the ListTelemetryMetricsGroups method.
    ListTelemetryMetricsGroupsResponse:
      type: object
      properties:
        telemetryMetricsGroups:
          type: array
          items:
            $ref: '#/components/schemas/TelemetryMetricsGroupResource'
          title: telemetry_metrics_groups
          description: Sorted and filtered list of telemetry_metrics_groups.
        totalElements:
          type: integer
          title: total_elements
          format: int32
          description: Count of items in the entire list, regardless of pagination.
        hasNext:
          type: boolean
          title: has_next
          description: Inform if there are more elements
      title: ListTelemetryMetricsGroupsResponse
      required:
        - telemetryMetricsGroups
        - totalElements
        - hasNext
      additionalProperties: false
      description: Response message for the ListTelemetryMetricsGroups method.
    ListTelemetryMetricsProfilesRequest:
      type: object
      properties:
        pageSize:
          type: integer
          title: page_size
          maximum: 100
          minimum: 1
          description: |-
            (OPTIONAL) Defines the amount of items to be contained in a single page.
             Default of 20.
        offset:
          type: integer
          title: offset
          maximum: 10000
          description: (OPTIONAL) Index of the first item to return. This allows skipping items.
        orderBy:
          type: string
          title: order_by
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9., ]+$
          description: |-
            (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
        instanceId:
          type: string
          title: instance_id
          pattern: ^inst-[0-9a-f]{8}$
          description: (OPTIONAL) Returns only the telemetry profiles that are assigned with the given instance identifier.
        siteId:
          type: string
          title: site_id
          pattern: ^site-[0-9a-f]{8}$
          description: (OPTIONAL) Returns only the telemetry profiles that are assigned with the given siteID.
        regionId:
          type: string
          title: region_id
          pattern: ^region-[0-9a-f]{8}$
          description: (OPTIONAL) Returns only the telemetry profiles that are assigned with the given regionID.
        showInherited:
          type: boolean
          title: show_inherited
          description: |-
            (OPTIONAL) Indicates if listed telemetry profiles should be extended with telemetry
             profiles rendered from hierarchy. This flag is only used along with one
             of siteId, regionId or instanceId. If siteId, regionId or instanceId are
             not set, this flag is ignored.
      title: ListTelemetryMetricsProfilesRequest
      additionalProperties: false
      description: Request message for the ListTelemetryMetricsProfiles method.
    ListTelemetryMetricsProfilesResponse:
      type: object
      properties:
        telemetryMetricsProfiles:
          type: array
          items:
            $ref: '#/components/schemas/TelemetryMetricsProfileResource'
          title: telemetry_metrics_profiles
          description: Sorted and filtered list of telemetry_metrics_profiles.
        totalElements:
          type: integer
          title: total_elements
          format: int32
          description: Count of items in the entire list, regardless of pagination.
        hasNext:
          type: boolean
          title: has_next
          description: Inform if there are more elements
      title: ListTelemetryMetricsProfilesResponse
      required:
        - telemetryMetricsProfiles
        - totalElements
        - hasNext
      additionalProperties: false
      description: Response message for the ListTelemetryMetricsProfiles method.
    ListWorkloadMembersRequest:
      type: object
      properties:
        orderBy:
          type: string
          title: order_by
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9., ]+$
          description: |-
            (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
        filter:
          type: string
          title: filter
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
          description: |-
            (OPTIONAL) Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
        pageSize:
          type: integer
          title: page_size
          maximum: 100
          minimum: 1
          description: |-
            (OPTIONAL) Defines the amount of items to be contained in a single page.
             Default of 20.
        offset:
          type: integer
          title: offset
          maximum: 10000
          description: (OPTIONAL) Index of the first item to return. This allows skipping items.
      title: ListWorkloadMembersRequest
      additionalProperties: false
      description: Request message for the ListWorkloadMembers method.
    ListWorkloadMembersResponse:
      type: object
      properties:
        workloadMembers:
          type: array
          items:
            $ref: '#/components/schemas/WorkloadMember'
          title: workload_members
          description: Sorted and filtered list of workload_members.
        totalElements:
          type: integer
          title: total_elements
          format: int32
          description: Count of items in the entire list, regardless of pagination.
        hasNext:
          type: boolean
          title: has_next
          description: Inform if there are more elements
      title: ListWorkloadMembersResponse
      required:
        - workloadMembers
        - totalElements
        - hasNext
      additionalProperties: false
      description: Response message for the ListWorkloadMembers method.
    ListWorkloadsRequest:
      type: object
      properties:
        orderBy:
          type: string
          title: order_by
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9., ]+$
          description: |-
            (OPTIONAL) Optional comma separated list of fields to specify a sorting order.
             See https://google.aip.dev/132 for details.
        filter:
          type: string
          title: filter
          maxLength: 1000
          pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
          description: |-
            (OPTIONAL) Optional filter to return only item of interest.
             See https://google.aip.dev/160 for details.
        pageSize:
          type: integer
          title: page_size
          maximum: 100
          minimum: 1
          description: |-
            (OPTIONAL) Defines the amount of items to be contained in a single page.
             Default of 20.
        offset:
          type: integer
          title: offset
          maximum: 10000
          description: (OPTIONAL) Index of the first item to return. This allows skipping items.
      title: ListWorkloadsRequest
      additionalProperties: false
      description: Request message for the ListWorkloads method.
    ListWorkloadsResponse:
      type: object
      properties:
        workloads:
          type: array
          items:
            $ref: '#/components/schemas/WorkloadResource'
          title: workloads
          description: Sorted and filtered list of workloads.
        totalElements:
          type: integer
          title: total_elements
          format: int32
          description: Count of items in the entire list, regardless of pagination.
        hasNext:
          type: boolean
          title: has_next
          description: Inform if there are more elements
      title: ListWorkloadsResponse
      required:
        - workloads
        - totalElements
        - hasNext
      additionalProperties: false
      description: Response message for the ListWorkloads method.
    OnboardHostRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          pattern: ^host-[0-9a-f]{8}$
          description: Host resource ID
      title: OnboardHostRequest
      additionalProperties: false
      description: Request to onboard a Host.
    OnboardHostResponse:
      type: object
      title: OnboardHostResponse
      additionalProperties: false
      description: Response of a Host Register request.
    PatchHostRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: ID of the resource to be updated.
        host:
          title: host
          description: Updated values for the host.
          $ref: '#/components/schemas/HostResource'
        fieldMask:
          title: field_mask
          description: Field mask to be applied on the patch of host.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: PatchHostRequest
      required:
        - resourceId
        - host
      additionalProperties: false
      description: Request message for the PatchHost method.
    PatchInstanceRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: ID of the resource to be updated.
        instance:
          title: instance
          description: Updated values for the instance.
          $ref: '#/components/schemas/InstanceResource'
        fieldMask:
          title: field_mask
          description: Field mask to be applied on the patch of instance.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: PatchInstanceRequest
      required:
        - resourceId
        - instance
      additionalProperties: false
      description: Request message for the PatchInstance method.
    PatchOperatingSystemRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: ID of the resource to be updated.
        os:
          title: os
          description: Updated values for the os.
          $ref: '#/components/schemas/OperatingSystemResource'
        fieldMask:
          title: field_mask
          description: Field mask to be applied on the patch of os.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: PatchOperatingSystemRequest
      required:
        - resourceId
        - os
      additionalProperties: false
      description: Request message for the PatchOperatingSystem method.
    PatchRegionRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: ID of the resource to be updated.
        region:
          title: region
          description: Updated values for the region.
          $ref: '#/components/schemas/RegionResource'
        fieldMask:
          title: field_mask
          description: Field mask to be applied on the patch of region.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: PatchRegionRequest
      required:
        - resourceId
        - region
      additionalProperties: false
      description: Request message for the PatchRegion method.
    PatchRepeatedScheduleRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: ID of the resource to be updated.
        repeatedSchedule:
          title: repeated_schedule
          description: Updated values for the repeated_schedule.
          $ref: '#/components/schemas/RepeatedScheduleResource'
        fieldMask:
          title: field_mask
          description: Field mask to be applied on the patch of repeated_schedule.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: PatchRepeatedScheduleRequest
      required:
        - resourceId
        - repeatedSchedule
      additionalProperties: false
      description: Request message for the PatchRepeatedSchedule method.
    PatchSingleScheduleRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: ID of the resource to be updated.
        singleSchedule:
          title: single_schedule
          description: Updated values for the single_schedule.
          $ref: '#/components/schemas/SingleScheduleResource'
        fieldMask:
          title: field_mask
          description: Field mask to be applied on the patch of single_schedule.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: PatchSingleScheduleRequest
      required:
        - resourceId
        - singleSchedule
      additionalProperties: false
      description: Request message for the PatchSingleSchedule method.
    PatchSiteRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: ID of the resource to be updated.
        site:
          title: site
          description: Updated values for the site.
          $ref: '#/components/schemas/SiteResource'
        fieldMask:
          title: field_mask
          description: Field mask to be applied on the patch of site.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: PatchSiteRequest
      required:
        - resourceId
        - site
      additionalProperties: false
      description: Request message for the PatchSite method.
    PatchTelemetryLogsProfileRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: ID of the resource to be updated.
        telemetryLogsProfile:
          title: telemetry_logs_profile
          description: Updated values for the telemetry_logs_profile.
          $ref: '#/components/schemas/TelemetryLogsProfileResource'
        fieldMask:
          title: field_mask
          description: Field mask to be applied on the patch of telemetry_logs_profile.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: PatchTelemetryLogsProfileRequest
      required:
        - resourceId
        - telemetryLogsProfile
      additionalProperties: false
      description: Request message for the PatchTelemetryLogs method.
    PatchTelemetryMetricsProfileRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: ID of the resource to be updated.
        telemetryMetricsProfile:
          title: telemetry_metrics_profile
          description: Updated values for the telemetry_metrics_profile.
          $ref: '#/components/schemas/TelemetryMetricsProfileResource'
        fieldMask:
          title: field_mask
          description: Field mask to be applied on the patch of telemetry_metrics_profile.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: PatchTelemetryMetricsProfileRequest
      required:
        - resourceId
        - telemetryMetricsProfile
      additionalProperties: false
      description: Request message for the PatchTelemetryMetricsProfile method.
    PatchWorkloadRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: ID of the resource to be updated.
        workload:
          title: workload
          description: Updated values for the workload.
          $ref: '#/components/schemas/WorkloadResource'
        fieldMask:
          title: field_mask
          description: Field mask to be applied on the patch of workload.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: PatchWorkloadRequest
      required:
        - resourceId
        - workload
      additionalProperties: false
      description: Request message for the PatchWorkload method.
    RegisterHostRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          pattern: ^host-[0-9a-f]{8}$
        host:
          title: host
          $ref: '#/components/schemas/HostRegister'
      title: RegisterHostRequest
      required:
        - host
      additionalProperties: false
      description: Request to register a Host.
    UpdateHostRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the host host to be updated.
        host:
          title: host
          description: Updated values for the host.
          $ref: '#/components/schemas/HostResource'
      title: UpdateHostRequest
      required:
        - resourceId
        - host
      additionalProperties: false
      description: Request message for the UpdateHost method.
    UpdateInstanceRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: ID of the resource to be updated.
        instance:
          title: instance
          description: Updated values for the instance.
          $ref: '#/components/schemas/InstanceResource'
      title: UpdateInstanceRequest
      required:
        - resourceId
        - instance
      additionalProperties: false
      description: Request message for the UpdateInstance method.
    UpdateOperatingSystemRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the os os to be updated.
        os:
          title: os
          description: Updated values for the os.
          $ref: '#/components/schemas/OperatingSystemResource'
      title: UpdateOperatingSystemRequest
      required:
        - resourceId
        - os
      additionalProperties: false
      description: Request message for the UpdateOperatingSystem method.
    UpdateRegionRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the region region to be updated.
        region:
          title: region
          description: Updated values for the region.
          $ref: '#/components/schemas/RegionResource'
      title: UpdateRegionRequest
      required:
        - resourceId
        - region
      additionalProperties: false
      description: Request message for the UpdateRegion method.
    UpdateRepeatedScheduleRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the repeated_schedule repeated_schedule to be updated.
        repeatedSchedule:
          title: repeated_schedule
          description: Updated values for the repeated_schedule.
          $ref: '#/components/schemas/RepeatedScheduleResource'
      title: UpdateRepeatedScheduleRequest
      required:
        - resourceId
        - repeatedSchedule
      additionalProperties: false
      description: Request message for the UpdateRepeatedSchedule method.
    UpdateSingleScheduleRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the single_schedule single_schedule to be updated.
        singleSchedule:
          title: single_schedule
          description: Updated values for the single_schedule.
          $ref: '#/components/schemas/SingleScheduleResource'
      title: UpdateSingleScheduleRequest
      required:
        - resourceId
        - singleSchedule
      additionalProperties: false
      description: Request message for the UpdateSingleSchedule method.
    UpdateSiteRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the site site to be updated.
        site:
          title: site
          description: Updated values for the site.
          $ref: '#/components/schemas/SiteResource'
      title: UpdateSiteRequest
      required:
        - resourceId
        - site
      additionalProperties: false
      description: Request message for the UpdateSite method.
    UpdateTelemetryLogsProfileRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the telemetry_logs_profile telemetry_logs_profile to be updated.
        telemetryLogsProfile:
          title: telemetry_logs_profile
          description: Updated values for the telemetry_logs_profile.
          $ref: '#/components/schemas/TelemetryLogsProfileResource'
      title: UpdateTelemetryLogsProfileRequest
      required:
        - resourceId
        - telemetryLogsProfile
      additionalProperties: false
      description: Request message for the UpdateTelemetryLogsProfile method.
    UpdateTelemetryMetricsProfileRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the telemetry_metrics_profile telemetry_metrics_profile to be updated.
        telemetryMetricsProfile:
          title: telemetry_metrics_profile
          description: Updated values for the telemetry_metrics_profile.
          $ref: '#/components/schemas/TelemetryMetricsProfileResource'
      title: UpdateTelemetryMetricsProfileRequest
      required:
        - resourceId
        - telemetryMetricsProfile
      additionalProperties: false
      description: Request message for the UpdateTelemetryMetricsProfile method.
    UpdateWorkloadRequest:
      type: object
      properties:
        resourceId:
          type: string
          title: resourceId
          description: Name of the workload workload to be updated.
        workload:
          title: workload
          description: Updated values for the workload.
          $ref: '#/components/schemas/WorkloadResource'
      title: UpdateWorkloadRequest
      required:
        - resourceId
        - workload
      additionalProperties: false
      description: Request message for the UpdateWorkload method.
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        detail:
          $ref: '#/components/schemas/google.protobuf.Any'
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    google.protobuf.Any:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
          format: binary
        debug:
          type: object
          additionalProperties: true
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
security: []
tags:
  - name: RegionService
    description: Region.
  - name: SiteService
    description: Site.
  - name: LocationService
    description: Location.
  - name: HostService
    description: Host.
  - name: InstanceService
    description: Instance.
  - name: OperatingSystemService
    description: OperatingSystem.
  - name: ProviderService
    description: Provider.
  - name: WorkloadService
    description: Workload.
  - name: WorkloadMemberService
    description: WorkloadMember.
  - name: ScheduleService
    description: Schedules.
  - name: TelemetryLogsGroupService
    description: TelemetryLogsGroup.
  - name: TelemetryMetricsGroupService
    description: TelemetryMetricsGroup.
  - name: TelemetryLogsProfileService
    description: TelemetryLogsProfile.
  - name: TelemetryMetricsProfileService
    description: TelemetryMetricsProfile.
  - name: LocalAccountService
    description: LocalAccount.
  - name: CustomConfigService
    description: CustomConfig.
  - name: OSUpdatePolicy
    description: OS Update Policy.
  - name: OSUpdateRun
    description: OS Update Run.
