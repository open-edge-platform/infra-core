---
# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
# Generated file do not edit !!!
# Generated with protoc-gen-openapi
# https://github.com/kollalabs/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Edge Infrastructure Manager
    description: Edge Infrastructure Manager API - License Apache 2.0
    version: 0.2.0-dev
paths:
    /edge-infra.orchestrator.apis/v2/hosts:
        get:
            tags:
                - HostService
            summary: ListHosts
            description: Get a list of hosts.
            operationId: HostService_ListHosts
            parameters:
                - name: orderBy
                  in: query
                  description: Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9., ]+$
                    type: string
                - name: filter
                  in: query
                  description: Optional filter to return only item of interest. See https://google.aip.dev/160 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
                    type: string
                - name: pageSize
                  in: query
                  description: Defines the amount of items to be contained in a single page. Default of 20.
                  schema:
                    maximum: !!float 100
                    minimum: !!float 1
                    type: integer
                    format: int32
                - name: offset
                  in: query
                  description: Index of the first item to return. This allows skipping items.
                  schema:
                    maximum: !!float 10000
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListHostsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - HostService
            summary: CreateHost
            description: Create a host.
            operationId: HostService_CreateHost
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/HostResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HostResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/hosts/register:
        post:
            tags:
                - HostService
            summary: RegisterHost
            description: Register a host.
            operationId: HostService_RegisterHost
            parameters:
                - name: resourceId
                  in: query
                  schema:
                    pattern: ^host-[0-9a-f]{8}$
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/HostRegister'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HostResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/hosts/{resourceId}:
        get:
            tags:
                - HostService
            summary: GetHost
            description: Get a specific host.
            operationId: HostService_GetHost
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the requested host.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HostResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - HostService
            summary: UpdateHost
            description: Update a host.
            operationId: HostService_UpdateHost
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the host host to be updated.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/HostResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HostResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - HostService
            summary: DeleteHost
            description: Delete a host.
            operationId: HostService_DeleteHost
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the host host to be deleted.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteHostResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - HostService
            summary: PatchHost
            description: Patch a host.
            operationId: HostService_PatchHost
            parameters:
                - name: resourceId
                  in: path
                  description: ID of the resource to be updated.
                  required: true
                  schema:
                    type: string
                - name: fieldMask
                  in: query
                  description: Field mask to be applied on the patch of host.
                  schema:
                    type: string
                    format: field-mask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/HostResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HostResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/hosts/{resourceId}/invalidate:
        put:
            tags:
                - HostService
            summary: InvalidateHost
            description: Invalidate a host.
            operationId: HostService_InvalidateHost
            parameters:
                - name: resourceId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: note
                  in: query
                  schema:
                    maxLength: 512
                    minLength: 1
                    pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()" ]+$
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidateHostResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/hosts/{resourceId}/onboard:
        patch:
            tags:
                - HostService
            summary: OnboardHost
            description: Onboard a host.
            operationId: HostService_OnboardHost
            parameters:
                - name: resourceId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OnboardHostResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/hosts/{resourceId}/register:
        patch:
            tags:
                - HostService
            summary: RegisterUpdateHost
            description: Update a host register.
            operationId: HostService_RegisterUpdateHost
            parameters:
                - name: resourceId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/HostRegister'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HostResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/hosts_summary:
        get:
            tags:
                - HostService
            summary: GetHostsSummary
            description: Get a specific host.
            operationId: HostService_GetHostsSummary
            parameters:
                - name: filter
                  in: query
                  description: Optional filter to return only item of interest. See https://google.aip.dev/160 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetHostSummaryResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/instances:
        get:
            tags:
                - InstanceService
            summary: ListInstances
            description: Get a list of instances.
            operationId: InstanceService_ListInstances
            parameters:
                - name: orderBy
                  in: query
                  description: Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9., ]+$
                    type: string
                - name: filter
                  in: query
                  description: Optional filter to return only item of interest. See https://google.aip.dev/160 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
                    type: string
                - name: pageSize
                  in: query
                  description: Defines the amount of items to be contained in a single page. Default of 20.
                  schema:
                    maximum: !!float 100
                    minimum: !!float 1
                    type: integer
                    format: int32
                - name: offset
                  in: query
                  description: Index of the first item to return. This allows skipping items.
                  schema:
                    maximum: !!float 10000
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListInstancesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - InstanceService
            summary: CreateInstance
            description: Create a instance.
            operationId: InstanceService_CreateInstance
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/InstanceResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InstanceResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/instances/{resourceId}:
        get:
            tags:
                - InstanceService
            summary: GetInstance
            description: Get a specific instance.
            operationId: InstanceService_GetInstance
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the requested instance.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InstanceResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - InstanceService
            summary: UpdateInstance
            description: Update a instance.
            operationId: InstanceService_UpdateInstance
            parameters:
                - name: resourceId
                  in: path
                  description: ID of the resource to be updated.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/InstanceResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InstanceResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - InstanceService
            summary: DeleteInstance
            description: Delete a instance.
            operationId: InstanceService_DeleteInstance
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the instance instance to be deleted.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteInstanceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - InstanceService
            summary: PatchInstance
            description: Patch a instance.
            operationId: InstanceService_PatchInstance
            parameters:
                - name: resourceId
                  in: path
                  description: ID of the resource to be updated.
                  required: true
                  schema:
                    type: string
                - name: fieldMask
                  in: query
                  description: Field mask to be applied on the patch of instance.
                  schema:
                    type: string
                    format: field-mask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/InstanceResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InstanceResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/instances/{resourceId}/invalidate:
        put:
            tags:
                - InstanceService
            summary: InvalidateInstance
            description: Invalidate a instance.
            operationId: InstanceService_InvalidateInstance
            parameters:
                - name: resourceId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidateInstanceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/localAccounts:
        get:
            tags:
                - LocalAccountService
            summary: ListLocalAccounts
            description: Get a list of providers.
            operationId: LocalAccountService_ListLocalAccounts
            parameters:
                - name: orderBy
                  in: query
                  description: Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9., ]+$
                    type: string
                - name: filter
                  in: query
                  description: Optional filter to return only item of interest. See https://google.aip.dev/160 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
                    type: string
                - name: pageSize
                  in: query
                  description: Defines the amount of items to be contained in a single page. Default of 20.
                  schema:
                    maximum: !!float 100
                    minimum: !!float 1
                    type: integer
                    format: int32
                - name: offset
                  in: query
                  description: Index of the first item to return. This allows skipping items.
                  schema:
                    maximum: !!float 10000
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListLocalAccountsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - LocalAccountService
            summary: CreateLocalAccount
            description: Create a localAccount.
            operationId: LocalAccountService_CreateLocalAccount
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LocalAccountResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LocalAccountResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/localAccounts/{resourceId}:
        get:
            tags:
                - LocalAccountService
            summary: GetLocalAccount
            description: Get a specific provider.
            operationId: LocalAccountService_GetLocalAccount
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the requested localaccount.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LocalAccountResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - LocalAccountService
            summary: DeleteLocalAccount
            description: Delete a provider.
            operationId: LocalAccountService_DeleteLocalAccount
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the localaccount to be deleted.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteLocalAccountResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/locations:
        get:
            tags:
                - LocationService
            summary: ListLocations
            description: Get a list of locations.
            operationId: LocationService_ListLocations
            parameters:
                - name: name
                  in: query
                  description: Filter locations by name
                  schema:
                    type: string
                - name: showSites
                  in: query
                  description: Return site locations
                  schema:
                    type: boolean
                - name: showRegions
                  in: query
                  description: Return region locations
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListLocationsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/operating_systems:
        get:
            tags:
                - OperatingSystemService
            summary: ListOperatingSystems
            description: Get a list of OSs.
            operationId: OperatingSystemService_ListOperatingSystems
            parameters:
                - name: orderBy
                  in: query
                  description: Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9., ]+$
                    type: string
                - name: filter
                  in: query
                  description: Optional filter to return only item of interest. See https://google.aip.dev/160 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
                    type: string
                - name: pageSize
                  in: query
                  description: Defines the amount of items to be contained in a single page. Default of 20.
                  schema:
                    maximum: !!float 100
                    minimum: !!float 1
                    type: integer
                    format: int32
                - name: offset
                  in: query
                  description: Index of the first item to return. This allows skipping items.
                  schema:
                    maximum: !!float 10000
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListOperatingSystemsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - OperatingSystemService
            summary: CreateOperatingSystem
            description: Create an OS
            operationId: OperatingSystemService_CreateOperatingSystem
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OperatingSystemResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OperatingSystemResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/operating_systems/{resourceId}:
        get:
            tags:
                - OperatingSystemService
            summary: GetOperatingSystem
            description: Get a specific OS.
            operationId: OperatingSystemService_GetOperatingSystem
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the requested os.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OperatingSystemResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - OperatingSystemService
            summary: UpdateOperatingSystem
            description: Update an OS.
            operationId: OperatingSystemService_UpdateOperatingSystem
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the os os to be updated.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OperatingSystemResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OperatingSystemResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - OperatingSystemService
            summary: DeleteOperatingSystem
            description: Delete an OS.
            operationId: OperatingSystemService_DeleteOperatingSystem
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the os os to be deleted.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteOperatingSystemResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - OperatingSystemService
            summary: PatchOperatingSystem
            description: Patch an OS.
            operationId: OperatingSystemService_PatchOperatingSystem
            parameters:
                - name: resourceId
                  in: path
                  description: ID of the resource to be updated.
                  required: true
                  schema:
                    type: string
                - name: fieldMask
                  in: query
                  description: Field mask to be applied on the patch of os.
                  schema:
                    type: string
                    format: field-mask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OperatingSystemResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OperatingSystemResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/providers:
        get:
            tags:
                - ProviderService
            summary: ListProviders
            description: Get a list of providers.
            operationId: ProviderService_ListProviders
            parameters:
                - name: orderBy
                  in: query
                  description: Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9., ]+$
                    type: string
                - name: filter
                  in: query
                  description: Optional filter to return only item of interest. See https://google.aip.dev/160 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
                    type: string
                - name: pageSize
                  in: query
                  description: Defines the amount of items to be contained in a single page. Default of 20.
                  schema:
                    maximum: !!float 100
                    minimum: !!float 1
                    type: integer
                    format: int32
                - name: offset
                  in: query
                  description: Index of the first item to return. This allows skipping items.
                  schema:
                    maximum: !!float 10000
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListProvidersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - ProviderService
            summary: CreateProvider
            description: Create a provider.
            operationId: ProviderService_CreateProvider
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProviderResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProviderResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/providers/{resourceId}:
        get:
            tags:
                - ProviderService
            summary: GetProvider
            description: Get a specific provider.
            operationId: ProviderService_GetProvider
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the requested provider.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProviderResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - ProviderService
            summary: UpdateProvider
            description: Update a provider.
            operationId: ProviderService_UpdateProvider
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the provider provider to be updated.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProviderResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProviderResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ProviderService
            summary: DeleteProvider
            description: Delete a provider.
            operationId: ProviderService_DeleteProvider
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the provider provider to be deleted.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - ProviderService
            summary: PatchProvider
            description: Patch a provider.
            operationId: ProviderService_PatchProvider
            parameters:
                - name: resourceId
                  in: path
                  description: ID of the resource to be updated.
                  required: true
                  schema:
                    type: string
                - name: fieldMask
                  in: query
                  description: Field mask to be applied on the patch of provider.
                  schema:
                    type: string
                    format: field-mask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProviderResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProviderResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/regions:
        get:
            tags:
                - RegionService
            summary: ListRegions
            description: Get a list of regions.
            operationId: RegionService_ListRegions
            parameters:
                - name: orderBy
                  in: query
                  description: Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9., ]+$
                    type: string
                - name: filter
                  in: query
                  description: Optional filter to return only item of interest. See https://google.aip.dev/160 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
                    type: string
                - name: pageSize
                  in: query
                  description: Defines the amount of items to be contained in a single page. Default of 20.
                  schema:
                    maximum: !!float 100
                    minimum: !!float 1
                    type: integer
                    format: int32
                - name: offset
                  in: query
                  description: Index of the first item to return. This allows skipping items.
                  schema:
                    maximum: !!float 10000
                    type: integer
                    format: int32
                - name: showTotalSites
                  in: query
                  description: Flag to signal if the total amount of site in a region should be returned.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRegionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - RegionService
            summary: CreateRegion
            description: Create a region.
            operationId: RegionService_CreateRegion
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegionResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegionResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/regions/{resourceId}:
        get:
            tags:
                - RegionService
            summary: GetRegion
            description: Get a specific region.
            operationId: RegionService_GetRegion
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the requested region.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegionResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - RegionService
            summary: UpdateRegion
            description: Update a region.
            operationId: RegionService_UpdateRegion
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the region region to be updated.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegionResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegionResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - RegionService
            summary: DeleteRegion
            description: Delete a region.
            operationId: RegionService_DeleteRegion
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the region region to be deleted.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteRegionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - RegionService
            summary: PatchRegion
            description: Patch a region.
            operationId: RegionService_PatchRegion
            parameters:
                - name: resourceId
                  in: path
                  description: ID of the resource to be updated.
                  required: true
                  schema:
                    type: string
                - name: fieldMask
                  in: query
                  description: Field mask to be applied on the patch of region.
                  schema:
                    type: string
                    format: field-mask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegionResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegionResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/schedules:
        get:
            tags:
                - ScheduleService
            summary: ListSchedules
            description: Get a list of schedules (single/repeated).
            operationId: ScheduleService_ListSchedules
            parameters:
                - name: pageSize
                  in: query
                  description: Defines the amount of items to be contained in a single page. Default of 20.
                  schema:
                    maximum: !!float 100
                    minimum: !!float 1
                    type: integer
                    format: int32
                - name: offset
                  in: query
                  description: Index of the first item to return. This allows skipping items.
                  schema:
                    maximum: !!float 10000
                    type: integer
                    format: int32
                - name: hostId
                  in: query
                  description: The host ID target of the schedules. If not specified, returns all schedules (given the other query params). If specified, returns the schedules that have the specified host ID applied to them, i.e., target including the inherited ones (parent site if not null). If null, returns all the schedules without a host ID as target.
                  schema:
                    pattern: ^host-[0-9a-f]{8}$
                    type: string
                - name: siteId
                  in: query
                  description: The site ID target of the schedules. If not specified, returns all schedules (given the other query params). If specified, returns the schedules that have the specified site ID applied to them, i.e., target including the inherited ones. If null, returns all the schedules without a site ID as target
                  schema:
                    pattern: ^site-[0-9a-f]{8}$
                    type: string
                - name: regionId
                  in: query
                  description: The region ID target of the schedules. If not specified, returns all schedules (given the other query params). If specified, returns the schedules that have the specified region ID applied to them, i.e., target including the inherited ones (parent region if not null). If null, returns all the schedules without a region ID as target.
                  schema:
                    pattern: ^region-[0-9a-f]{8}$
                    type: string
                - name: unixEpoch
                  in: query
                  description: Filter based on the timestamp, expected to be UNIX epoch UTC timestamp in seconds.
                  schema:
                    pattern: ^[0-9]+$
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSchedulesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/schedules/repeated:
        get:
            tags:
                - ScheduleService
            summary: ListRepeatedSchedules
            description: Get a list of repeatedSchedules.
            operationId: ScheduleService_ListRepeatedSchedules
            parameters:
                - name: pageSize
                  in: query
                  description: Defines the amount of items to be contained in a single page. Default of 20.
                  schema:
                    maximum: !!float 100
                    minimum: !!float 1
                    type: integer
                    format: int32
                - name: offset
                  in: query
                  description: Index of the first item to return. This allows skipping items.
                  schema:
                    maximum: !!float 10000
                    type: integer
                    format: int32
                - name: hostId
                  in: query
                  description: The host ID target of the schedules. If not specified, returns all schedules (given the other query params). If specified, returns the schedules that have the specified host ID applied to them, i.e., target including the inherited ones (parent site if not null). If null, returns all the schedules without a host ID as target.
                  schema:
                    pattern: ^host-[0-9a-f]{8}$
                    type: string
                - name: siteId
                  in: query
                  description: The site ID target of the schedules. If not specified, returns all schedules (given the other query params). If specified, returns the schedules that have the specified site ID applied to them, i.e., target including the inherited ones. If null, returns all the schedules without a site ID as target
                  schema:
                    pattern: ^site-[0-9a-f]{8}$
                    type: string
                - name: regionId
                  in: query
                  description: The region ID target of the schedules. If not specified, returns all schedules (given the other query params). If specified, returns the schedules that have the specified region ID applied to them, i.e., target including the inherited ones (parent region if not null). If null, returns all the schedules without a region ID as target.
                  schema:
                    pattern: ^region-[0-9a-f]{8}$
                    type: string
                - name: unixEpoch
                  in: query
                  description: Filter based on the timestamp, expected to be UNIX epoch UTC timestamp in seconds.
                  schema:
                    pattern: ^[0-9]+$
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRepeatedSchedulesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - ScheduleService
            summary: CreateRepeatedSchedule
            description: Create a repeated_schedule.
            operationId: ScheduleService_CreateRepeatedSchedule
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RepeatedScheduleResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RepeatedScheduleResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/schedules/repeated/{resourceId}:
        get:
            tags:
                - ScheduleService
            summary: GetRepeatedSchedule
            description: Get a specific repeated_schedule.
            operationId: ScheduleService_GetRepeatedSchedule
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the requested repeated_schedule.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RepeatedScheduleResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - ScheduleService
            summary: UpdateRepeatedSchedule
            description: Update a repeated_schedule.
            operationId: ScheduleService_UpdateRepeatedSchedule
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the repeated_schedule repeated_schedule to be updated.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RepeatedScheduleResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RepeatedScheduleResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ScheduleService
            summary: DeleteRepeatedSchedule
            description: Delete a repeated_schedule.
            operationId: ScheduleService_DeleteRepeatedSchedule
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the repeated_schedule repeated_schedule to be deleted.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteRepeatedScheduleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - ScheduleService
            summary: PatchRepeatedSchedule
            description: Patch a repeated_schedule.
            operationId: ScheduleService_PatchRepeatedSchedule
            parameters:
                - name: resourceId
                  in: path
                  description: ID of the resource to be updated.
                  required: true
                  schema:
                    type: string
                - name: fieldMask
                  in: query
                  description: Field mask to be applied on the patch of repeated_schedule.
                  schema:
                    type: string
                    format: field-mask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RepeatedScheduleResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RepeatedScheduleResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/schedules/single:
        get:
            tags:
                - ScheduleService
            summary: ListSingleSchedules
            description: Get a list of singleSchedules.
            operationId: ScheduleService_ListSingleSchedules
            parameters:
                - name: pageSize
                  in: query
                  description: Defines the amount of items to be contained in a single page. Default of 20.
                  schema:
                    maximum: !!float 100
                    minimum: !!float 1
                    type: integer
                    format: int32
                - name: offset
                  in: query
                  description: Index of the first item to return. This allows skipping items.
                  schema:
                    maximum: !!float 10000
                    type: integer
                    format: int32
                - name: hostId
                  in: query
                  description: The host ID target of the schedules. If not specified, returns all schedules (given the other query params). If specified, returns the schedules that have the specified host ID applied to them, i.e., target including the inherited ones (parent site if not null). If null, returns all the schedules without a host ID as target.
                  schema:
                    pattern: ^host-[0-9a-f]{8}$
                    type: string
                - name: siteId
                  in: query
                  description: The site ID target of the schedules. If not specified, returns all schedules (given the other query params). If specified, returns the schedules that have the specified site ID applied to them, i.e., target including the inherited ones. If null, returns all the schedules without a site ID as target
                  schema:
                    pattern: ^site-[0-9a-f]{8}$
                    type: string
                - name: regionId
                  in: query
                  description: The region ID target of the schedules. If not specified, returns all schedules (given the other query params). If specified, returns the schedules that have the specified region ID applied to them, i.e., target including the inherited ones (parent region if not null). If null, returns all the schedules without a region ID as target.
                  schema:
                    pattern: ^region-[0-9a-f]{8}$
                    type: string
                - name: unixEpoch
                  in: query
                  description: Filter based on the timestamp, expected to be UNIX epoch UTC timestamp in seconds.
                  schema:
                    pattern: ^[0-9]+$
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSingleSchedulesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - ScheduleService
            summary: CreateSingleSchedule
            description: Create a single_schedule.
            operationId: ScheduleService_CreateSingleSchedule
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SingleScheduleResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SingleScheduleResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/schedules/single/{resourceId}:
        get:
            tags:
                - ScheduleService
            summary: GetSingleSchedule
            description: Get a specific single_schedule.
            operationId: ScheduleService_GetSingleSchedule
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the requested single_schedule.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SingleScheduleResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - ScheduleService
            summary: UpdateSingleSchedule
            description: Update a single_schedule.
            operationId: ScheduleService_UpdateSingleSchedule
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the single_schedule single_schedule to be updated.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SingleScheduleResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SingleScheduleResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ScheduleService
            summary: DeleteSingleSchedule
            description: Delete a single_schedule.
            operationId: ScheduleService_DeleteSingleSchedule
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the single_schedule single_schedule to be deleted.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSingleScheduleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - ScheduleService
            summary: PatchSingleSchedule
            description: Patch a single_schedule.
            operationId: ScheduleService_PatchSingleSchedule
            parameters:
                - name: resourceId
                  in: path
                  description: ID of the resource to be updated.
                  required: true
                  schema:
                    type: string
                - name: fieldMask
                  in: query
                  description: Field mask to be applied on the patch of single_schedule.
                  schema:
                    type: string
                    format: field-mask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SingleScheduleResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SingleScheduleResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/sites:
        get:
            tags:
                - SiteService
            summary: ListSites
            description: Get a list of sites.
            operationId: SiteService_ListSites
            parameters:
                - name: orderBy
                  in: query
                  description: Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9., ]+$
                    type: string
                - name: filter
                  in: query
                  description: Optional filter to return only item of interest. See https://google.aip.dev/160 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
                    type: string
                - name: pageSize
                  in: query
                  description: Defines the amount of items to be contained in a single page. Default of 20.
                  schema:
                    maximum: !!float 100
                    minimum: !!float 1
                    type: integer
                    format: int32
                - name: offset
                  in: query
                  description: Index of the first item to return. This allows skipping items.
                  schema:
                    maximum: !!float 10000
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSitesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - SiteService
            summary: CreateSite
            description: Create a site.
            operationId: SiteService_CreateSite
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SiteResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SiteResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/sites/{resourceId}:
        get:
            tags:
                - SiteService
            summary: GetSite
            description: Get a specific site.
            operationId: SiteService_GetSite
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the requested site.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SiteResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - SiteService
            summary: UpdateSite
            description: Update a site.
            operationId: SiteService_UpdateSite
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the site site to be updated.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SiteResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SiteResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - SiteService
            summary: DeleteSite
            description: Delete a site.
            operationId: SiteService_DeleteSite
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the site site to be deleted.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSiteResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - SiteService
            summary: PatchSite
            description: Patch a site.
            operationId: SiteService_PatchSite
            parameters:
                - name: resourceId
                  in: path
                  description: ID of the resource to be updated.
                  required: true
                  schema:
                    type: string
                - name: fieldMask
                  in: query
                  description: Field mask to be applied on the patch of site.
                  schema:
                    type: string
                    format: field-mask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SiteResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SiteResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/telemetry/groups/logs:
        get:
            tags:
                - TelemetryLogsGroupService
            summary: ListTelemetryLogsGroups
            description: Get a list of telemetry_logs_groups.
            operationId: TelemetryLogsGroupService_ListTelemetryLogsGroups
            parameters:
                - name: pageSize
                  in: query
                  description: Defines the amount of items to be contained in a single page. Default of 20.
                  schema:
                    maximum: !!float 100
                    minimum: !!float 1
                    type: integer
                    format: int32
                - name: offset
                  in: query
                  description: Index of the first item to return. This allows skipping items.
                  schema:
                    maximum: !!float 10000
                    type: integer
                    format: int32
                - name: orderBy
                  in: query
                  description: Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9., ]+$
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListTelemetryLogsGroupsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - TelemetryLogsGroupService
            summary: CreateTelemetryLogsGroup
            description: Create a telemetry_logs_group.
            operationId: TelemetryLogsGroupService_CreateTelemetryLogsGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TelemetryLogsGroupResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TelemetryLogsGroupResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/telemetry/groups/logs/{resourceId}:
        get:
            tags:
                - TelemetryLogsGroupService
            summary: GetTelemetryLogsGroup
            description: Get a specific telemetry_logs_group.
            operationId: TelemetryLogsGroupService_GetTelemetryLogsGroup
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the requested telemetry_logs_group.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TelemetryLogsGroupResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - TelemetryLogsGroupService
            summary: DeleteTelemetryLogsGroup
            description: Delete a telemetry_logs_group.
            operationId: TelemetryLogsGroupService_DeleteTelemetryLogsGroup
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the telemetry_logs_group telemetry_logs_group to be deleted.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteTelemetryLogsGroupResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/telemetry/groups/metrics:
        get:
            tags:
                - TelemetryMetricsGroupService
            summary: ListTelemetryMetricsGroups
            description: Get a list of telemetryMetricsGroups.
            operationId: TelemetryMetricsGroupService_ListTelemetryMetricsGroups
            parameters:
                - name: pageSize
                  in: query
                  description: Defines the amount of items to be contained in a single page. Default of 20.
                  schema:
                    maximum: !!float 100
                    minimum: !!float 1
                    type: integer
                    format: int32
                - name: offset
                  in: query
                  description: Index of the first item to return. This allows skipping items.
                  schema:
                    maximum: !!float 10000
                    type: integer
                    format: int32
                - name: orderBy
                  in: query
                  description: Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9., ]+$
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListTelemetryMetricsGroupsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - TelemetryMetricsGroupService
            summary: CreateTelemetryMetricsGroup
            description: Create a telemetry_metrics_group.
            operationId: TelemetryMetricsGroupService_CreateTelemetryMetricsGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TelemetryMetricsGroupResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TelemetryMetricsGroupResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/telemetry/groups/metrics/{resourceId}:
        get:
            tags:
                - TelemetryMetricsGroupService
            summary: GetTelemetryMetricsGroup
            description: Get a specific telemetry_metrics_group.
            operationId: TelemetryMetricsGroupService_GetTelemetryMetricsGroup
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the requested telemetry_metrics_group.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TelemetryMetricsGroupResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - TelemetryMetricsGroupService
            summary: DeleteTelemetryMetricsGroup
            description: Delete a telemetry_metrics_group.
            operationId: TelemetryMetricsGroupService_DeleteTelemetryMetricsGroup
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the telemetry_metrics_group telemetry_metrics_group to be deleted.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteTelemetryMetricsGroupResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/telemetry/profiles/logs:
        get:
            tags:
                - TelemetryLogsProfileService
            summary: ListTelemetryLogsProfiles
            description: Get a list of telemetryLogsProfiles.
            operationId: TelemetryLogsProfileService_ListTelemetryLogsProfiles
            parameters:
                - name: pageSize
                  in: query
                  description: Defines the amount of items to be contained in a single page. Default of 20.
                  schema:
                    maximum: !!float 100
                    minimum: !!float 1
                    type: integer
                    format: int32
                - name: offset
                  in: query
                  description: Index of the first item to return. This allows skipping items.
                  schema:
                    maximum: !!float 10000
                    type: integer
                    format: int32
                - name: orderBy
                  in: query
                  description: Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9., ]+$
                    type: string
                - name: instanceId
                  in: query
                  description: Returns only the telemetry profiles that are assigned with the given instance identifier.
                  schema:
                    pattern: ^inst-[0-9a-f]{8}$
                    type: string
                - name: siteId
                  in: query
                  description: Returns only the telemetry profiles that are assigned with the given siteID.
                  schema:
                    pattern: ^site-[0-9a-f]{8}$
                    type: string
                - name: regionId
                  in: query
                  description: Returns only the telemetry profiles that are assigned with the given regionID.
                  schema:
                    pattern: ^region-[0-9a-f]{8}$
                    type: string
                - name: showInherited
                  in: query
                  description: Indicates if listed telemetry profiles should be extended with telemetry profiles rendered from hierarchy. This flag is only used along with one of siteId, regionId or instanceId. If siteId, regionId or instanceId are not set, this flag is ignored.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListTelemetryLogsProfilesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - TelemetryLogsProfileService
            summary: CreateTelemetryLogsProfile
            description: Create a telemetry_logs_profile.
            operationId: TelemetryLogsProfileService_CreateTelemetryLogsProfile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TelemetryLogsProfileResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TelemetryLogsProfileResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/telemetry/profiles/logs/{resourceId}:
        get:
            tags:
                - TelemetryLogsProfileService
            summary: GetTelemetryLogsProfile
            description: Get a specific telemetry_logs_profile.
            operationId: TelemetryLogsProfileService_GetTelemetryLogsProfile
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the requested telemetry_logs_profile.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TelemetryLogsProfileResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - TelemetryLogsProfileService
            summary: UpdateTelemetryLogsProfile
            description: Update a telemetry_logs_profile.
            operationId: TelemetryLogsProfileService_UpdateTelemetryLogsProfile
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the telemetry_logs_profile telemetry_logs_profile to be updated.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TelemetryLogsProfileResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TelemetryLogsProfileResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - TelemetryLogsProfileService
            summary: DeleteTelemetryLogsProfile
            description: Delete a telemetry_logs_profile.
            operationId: TelemetryLogsProfileService_DeleteTelemetryLogsProfile
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the telemetry_logs_profile telemetry_logs_profile to be deleted.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteTelemetryLogsProfileResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - TelemetryLogsProfileService
            summary: PatchTelemetryLogsProfile
            description: Patch a telemetry_logs_profile.
            operationId: TelemetryLogsProfileService_PatchTelemetryLogsProfile
            parameters:
                - name: resourceId
                  in: path
                  description: ID of the resource to be updated.
                  required: true
                  schema:
                    type: string
                - name: fieldMask
                  in: query
                  description: Field mask to be applied on the patch of telemetry_logs_profile.
                  schema:
                    type: string
                    format: field-mask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TelemetryLogsProfileResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TelemetryLogsProfileResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/telemetry/profiles/metrics:
        get:
            tags:
                - TelemetryMetricsProfileService
            summary: ListTelemetryMetricsProfiles
            description: Get a list of telemetryMetricsProfiles.
            operationId: TelemetryMetricsProfileService_ListTelemetryMetricsProfiles
            parameters:
                - name: pageSize
                  in: query
                  description: Defines the amount of items to be contained in a single page. Default of 20.
                  schema:
                    maximum: !!float 100
                    minimum: !!float 1
                    type: integer
                    format: int32
                - name: offset
                  in: query
                  description: Index of the first item to return. This allows skipping items.
                  schema:
                    maximum: !!float 10000
                    type: integer
                    format: int32
                - name: orderBy
                  in: query
                  description: Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9., ]+$
                    type: string
                - name: instanceId
                  in: query
                  description: Returns only the telemetry profiles that are assigned with the given instance identifier.
                  schema:
                    pattern: ^inst-[0-9a-f]{8}$
                    type: string
                - name: siteId
                  in: query
                  description: Returns only the telemetry profiles that are assigned with the given siteID.
                  schema:
                    pattern: ^site-[0-9a-f]{8}$
                    type: string
                - name: regionId
                  in: query
                  description: Returns only the telemetry profiles that are assigned with the given regionID.
                  schema:
                    pattern: ^region-[0-9a-f]{8}$
                    type: string
                - name: showInherited
                  in: query
                  description: Indicates if listed telemetry profiles should be extended with telemetry profiles rendered from hierarchy. This flag is only used along with one of siteId, regionId or instanceId. If siteId, regionId or instanceId are not set, this flag is ignored.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListTelemetryMetricsProfilesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - TelemetryMetricsProfileService
            summary: CreateTelemetryMetricsProfile
            description: Create a telemetry_metrics_profile.
            operationId: TelemetryMetricsProfileService_CreateTelemetryMetricsProfile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TelemetryMetricsProfileResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TelemetryMetricsProfileResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/telemetry/profiles/metrics/{resourceId}:
        get:
            tags:
                - TelemetryMetricsProfileService
            summary: GetTelemetryMetricsProfile
            description: Get a specific telemetry_metrics_profile.
            operationId: TelemetryMetricsProfileService_GetTelemetryMetricsProfile
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the requested telemetry_metrics_profile.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TelemetryMetricsProfileResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - TelemetryMetricsProfileService
            summary: UpdateTelemetryMetricsProfile
            description: Update a telemetry_metrics_profile.
            operationId: TelemetryMetricsProfileService_UpdateTelemetryMetricsProfile
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the telemetry_metrics_profile telemetry_metrics_profile to be updated.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TelemetryMetricsProfileResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TelemetryMetricsProfileResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - TelemetryMetricsProfileService
            summary: DeleteTelemetryMetricsProfile
            description: Delete a telemetry_metrics_profile.
            operationId: TelemetryMetricsProfileService_DeleteTelemetryMetricsProfile
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the telemetry_metrics_profile telemetry_metrics_profile to be deleted.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteTelemetryMetricsProfileResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - TelemetryMetricsProfileService
            summary: PatchTelemetryMetricsProfile
            description: Patch a telemetry_metrics_profile.
            operationId: TelemetryMetricsProfileService_PatchTelemetryMetricsProfile
            parameters:
                - name: resourceId
                  in: path
                  description: ID of the resource to be updated.
                  required: true
                  schema:
                    type: string
                - name: fieldMask
                  in: query
                  description: Field mask to be applied on the patch of telemetry_metrics_profile.
                  schema:
                    type: string
                    format: field-mask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TelemetryMetricsProfileResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TelemetryMetricsProfileResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/workload_members:
        get:
            tags:
                - WorkloadMemberService
            summary: ListWorkloadMembers
            description: Get a list of workload_members.
            operationId: WorkloadMemberService_ListWorkloadMembers
            parameters:
                - name: orderBy
                  in: query
                  description: Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9., ]+$
                    type: string
                - name: filter
                  in: query
                  description: Optional filter to return only item of interest. See https://google.aip.dev/160 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
                    type: string
                - name: pageSize
                  in: query
                  description: Defines the amount of items to be contained in a single page. Default of 20.
                  schema:
                    maximum: !!float 100
                    minimum: !!float 1
                    type: integer
                    format: int32
                - name: offset
                  in: query
                  description: Index of the first item to return. This allows skipping items.
                  schema:
                    maximum: !!float 10000
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListWorkloadMembersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - WorkloadMemberService
            summary: CreateWorkloadMember
            description: Create a workload_member.
            operationId: WorkloadMemberService_CreateWorkloadMember
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/WorkloadMember'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WorkloadMember'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/workload_members/{resourceId}:
        get:
            tags:
                - WorkloadMemberService
            summary: GetWorkloadMember
            description: Get a specific workload_member.
            operationId: WorkloadMemberService_GetWorkloadMember
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the requested workload_member.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WorkloadMember'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - WorkloadMemberService
            summary: UpdateWorkloadMember
            description: Update a workload_member.
            operationId: WorkloadMemberService_UpdateWorkloadMember
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the workload_member workload_member to be updated.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/WorkloadMember'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WorkloadMember'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - WorkloadMemberService
            summary: DeleteWorkloadMember
            description: Delete a workload_member.
            operationId: WorkloadMemberService_DeleteWorkloadMember
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the workload_member workload_member to be deleted.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteWorkloadMemberResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - WorkloadMemberService
            summary: PatchWorkloadMember
            description: Patch a workload_member.
            operationId: WorkloadMemberService_PatchWorkloadMember
            parameters:
                - name: resourceId
                  in: path
                  description: ID of the resource to be updated.
                  required: true
                  schema:
                    type: string
                - name: fieldMask
                  in: query
                  description: Field mask to be applied on the patch of workload_member.
                  schema:
                    type: string
                    format: field-mask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/WorkloadMember'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WorkloadMember'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/workloads:
        get:
            tags:
                - WorkloadService
            summary: ListWorkloads
            description: Get a list of workloads.
            operationId: WorkloadService_ListWorkloads
            parameters:
                - name: orderBy
                  in: query
                  description: Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9., ]+$
                    type: string
                - name: filter
                  in: query
                  description: Optional filter to return only item of interest. See https://google.aip.dev/160 for details.
                  schema:
                    maxLength: 1000
                    pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}"' ]+$
                    type: string
                - name: pageSize
                  in: query
                  description: Defines the amount of items to be contained in a single page. Default of 20.
                  schema:
                    maximum: !!float 100
                    minimum: !!float 1
                    type: integer
                    format: int32
                - name: offset
                  in: query
                  description: Index of the first item to return. This allows skipping items.
                  schema:
                    maximum: !!float 10000
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListWorkloadsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - WorkloadService
            summary: CreateWorkload
            description: Create a workload.
            operationId: WorkloadService_CreateWorkload
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/WorkloadResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WorkloadResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /edge-infra.orchestrator.apis/v2/workloads/{resourceId}:
        get:
            tags:
                - WorkloadService
            summary: GetWorkload
            description: Get a specific workload.
            operationId: WorkloadService_GetWorkload
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the requested workload.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WorkloadResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - WorkloadService
            summary: UpdateWorkload
            description: Update a workload.
            operationId: WorkloadService_UpdateWorkload
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the workload workload to be updated.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/WorkloadResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WorkloadResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - WorkloadService
            summary: DeleteWorkload
            description: Delete a workload.
            operationId: WorkloadService_DeleteWorkload
            parameters:
                - name: resourceId
                  in: path
                  description: Name of the workload workload to be deleted.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteWorkloadResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - WorkloadService
            summary: PatchWorkload
            description: Patch a workload.
            operationId: WorkloadService_PatchWorkload
            parameters:
                - name: resourceId
                  in: path
                  description: ID of the resource to be updated.
                  required: true
                  schema:
                    type: string
                - name: fieldMask
                  in: query
                  description: Field mask to be applied on the patch of workload.
                  schema:
                    type: string
                    format: field-mask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/WorkloadResource'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WorkloadResource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        DeleteHostResponse:
            type: object
            properties: {}
            description: Reponse message for DeleteHost.
        DeleteInstanceResponse:
            type: object
            properties: {}
            description: Response message for DeleteInstance.
        DeleteLocalAccountResponse:
            type: object
            properties: {}
            description: Response message for DeleteLocalAccount.
        DeleteOperatingSystemResponse:
            type: object
            properties: {}
            description: Response message for DeleteOperatingSystem.
        DeleteProviderResponse:
            type: object
            properties: {}
            description: Response message for DeleteProvider.
        DeleteRegionResponse:
            type: object
            properties: {}
            description: Response message for DeleteRegion.
        DeleteRepeatedScheduleResponse:
            type: object
            properties: {}
            description: Response message for DeleteRepeatedSchedule.
        DeleteSingleScheduleResponse:
            type: object
            properties: {}
            description: Response message for DeleteSingleSchedule.
        DeleteSiteResponse:
            type: object
            properties: {}
            description: Response message for DeleteSite.
        DeleteTelemetryLogsGroupResponse:
            type: object
            properties: {}
            description: Response message for DeleteTelemetryLogsGroup.
        DeleteTelemetryLogsProfileResponse:
            type: object
            properties: {}
            description: Response message for DeleteTelemetryLogsProfile.
        DeleteTelemetryMetricsGroupResponse:
            type: object
            properties: {}
            description: Response message for DeleteTelemetryMetricsGroup.
        DeleteTelemetryMetricsProfileResponse:
            type: object
            properties: {}
            description: Response message for DeleteTelemetryMetricsProfile.
        DeleteWorkloadMemberResponse:
            type: object
            properties: {}
            description: Response message for DeleteWorkloadMember.
        DeleteWorkloadResponse:
            type: object
            properties: {}
            description: Response message for DeleteWorkload.
        GetHostSummaryResponse:
            type: object
            properties:
                total:
                    readOnly: true
                    type: integer
                    description: The total number of hosts.
                    format: uint32
                error:
                    readOnly: true
                    type: integer
                    description: The total number of hosts presenting an Error.
                    format: uint32
                running:
                    readOnly: true
                    type: integer
                    description: The total number of hosts in Running state.
                    format: uint32
                unallocated:
                    readOnly: true
                    type: integer
                    description: The total number of hosts without a site.
                    format: uint32
            description: Summary of the hosts status.
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        HostRegister:
            type: object
            properties:
                name:
                    maxLength: 20
                    pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
                    type: string
                    description: The host name.
                serialNumber:
                    pattern: ^([A-Za-z0-9]{5,20})?$
                    type: string
                    description: The host serial number.
                uuid:
                    type: string
                    description: The host UUID.
                autoOnboard:
                    type: boolean
                    description: Flag ot signal to automatically onboard the host.
            description: Message to register a Host.
        HostResource:
            required:
                - name
            type: object
            properties:
                resourceId:
                    readOnly: true
                    pattern: ^host-[0-9a-f]{8}$
                    type: string
                    description: Resource ID, generated on Create.
                name:
                    maxLength: 20
                    pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
                    type: string
                    description: The host name.
                desiredState:
                    readOnly: true
                    enum:
                        - HOST_STATE_DELETING
                        - HOST_STATE_DELETED
                        - HOST_STATE_ONBOARDED
                        - HOST_STATE_UNTRUSTED
                        - HOST_STATE_REGISTERED
                    type: string
                    description: The desired state of the Host.
                    format: enum
                currentState:
                    readOnly: true
                    enum:
                        - HOST_STATE_DELETING
                        - HOST_STATE_DELETED
                        - HOST_STATE_ONBOARDED
                        - HOST_STATE_UNTRUSTED
                        - HOST_STATE_REGISTERED
                    type: string
                    description: The current state of the Host.
                    format: enum
                site:
                    $ref: '#/components/schemas/SiteResource'
                note:
                    readOnly: true
                    maxLength: 512
                    minLength: 1
                    pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()" ]+$
                    type: string
                    description: The note associated with the host.
                serialNumber:
                    readOnly: true
                    type: string
                    description: SMBIOS device serial number.
                uuid:
                    type: string
                    description: The host UUID identifier; UUID is unique and immutable.
                memoryBytes:
                    readOnly: true
                    type: string
                    description: Quantity of memory (RAM) in the system in bytes.
                cpuModel:
                    readOnly: true
                    type: string
                    description: CPU model of the Host.
                cpuSockets:
                    readOnly: true
                    type: integer
                    description: Number of physical CPU sockets.
                    format: uint32
                cpuCores:
                    readOnly: true
                    type: integer
                    description: Number of CPU cores.
                    format: uint32
                cpuCapabilities:
                    readOnly: true
                    type: string
                    description: String list of all CPU capabilities (possibly JSON).
                cpuArchitecture:
                    readOnly: true
                    type: string
                    description: Architecture of the CPU model, e.g. x86_64.
                cpuThreads:
                    readOnly: true
                    type: integer
                    description: Total Number of threads supported by the CPU.
                    format: uint32
                cpuTopology:
                    readOnly: true
                    type: string
                    description: JSON field storing the CPU topology, refer to HDA/HRM docs for the JSON schema.
                bmcKind:
                    readOnly: true
                    enum:
                        - BAREMETAL_CONTROLLER_KIND_NONE
                        - BAREMETAL_CONTROLLER_KIND_IPMI
                        - BAREMETAL_CONTROLLER_KIND_VPRO
                        - BAREMETAL_CONTROLLER_KIND_PDU
                    type: string
                    description: Kind of BMC.
                    format: enum
                bmcIp:
                    readOnly: true
                    type: string
                    description: BMC IP address, such as "192.0.0.1".
                hostname:
                    readOnly: true
                    type: string
                    description: Hostname.
                productName:
                    readOnly: true
                    type: string
                    description: System Product Name.
                biosVersion:
                    readOnly: true
                    type: string
                    description: BIOS Version.
                biosReleaseDate:
                    readOnly: true
                    type: string
                    description: BIOS Release Date.
                biosVendor:
                    readOnly: true
                    type: string
                    description: BIOS Vendor.
                hostStatus:
                    type: string
                    description: textual message that describes the runtime status of Host. Set by RMs only.
                hostStatusIndicator:
                    enum:
                        - STATUS_INDICATION_ERROR
                        - STATUS_INDICATION_IN_PROGRESS
                        - STATUS_INDICATION_IDLE
                    type: string
                    description: Indicates interpretation of host_status. Set by RMs only.
                    format: enum
                hostStatusTimestamp:
                    type: string
                    description: UTC timestamp when host_status was last changed. Set by RMs only.
                onboardingStatus:
                    type: string
                    description: textual message that describes the onboarding status of Host. Set by RMs only.
                onboardingStatusIndicator:
                    enum:
                        - STATUS_INDICATION_ERROR
                        - STATUS_INDICATION_IN_PROGRESS
                        - STATUS_INDICATION_IDLE
                    type: string
                    description: Indicates interpretation of onboarding_status. Set by RMs only.
                    format: enum
                onboardingStatusTimestamp:
                    type: string
                    description: UTC timestamp when onboarding_status was last changed. Set by RMs only.
                registrationStatus:
                    type: string
                    description: textual message that describes the onboarding status of Host. Set by RMs only.
                registrationStatusIndicator:
                    enum:
                        - STATUS_INDICATION_ERROR
                        - STATUS_INDICATION_IN_PROGRESS
                        - STATUS_INDICATION_IDLE
                    type: string
                    description: Indicates interpretation of registration_status. Set by RMs only.
                    format: enum
                registrationStatusTimestamp:
                    type: string
                    description: UTC timestamp when registration_status was last changed. Set by RMs only.
                hostStorages:
                    readOnly: true
                    type: array
                    items:
                        $ref: '#/components/schemas/HoststorageResource'
                    description: Back-reference to attached host storage resources.
                hostNics:
                    readOnly: true
                    type: array
                    items:
                        $ref: '#/components/schemas/HostnicResource'
                    description: Back-reference to attached host NIC resources.
                hostUsbs:
                    readOnly: true
                    type: array
                    items:
                        $ref: '#/components/schemas/HostusbResource'
                    description: Back-reference to attached host USB resources.
                hostGpus:
                    readOnly: true
                    type: array
                    items:
                        $ref: '#/components/schemas/HostgpuResource'
                    description: Back-reference to attached host GPU resources.
                instance:
                    $ref: '#/components/schemas/InstanceResource'
                hostId:
                    readOnly: true
                    pattern: ^host-[0-9a-f]{8}$
                    type: string
                    description: Resource ID, generated on Create.
                siteId:
                    writeOnly: true
                    pattern: ^$|^site-[0-9a-f]{8}$
                    type: string
                    description: The site where the host is located.
                metadata:
                    type: array
                    items:
                        $ref: '#/components/schemas/MetadataItem'
                    description: The metadata associated with the host, represented by a list of key:value pairs.
                inheritedMetadata:
                    readOnly: true
                    type: array
                    items:
                        $ref: '#/components/schemas/MetadataItem'
                    description: The metadata inherited by the host, represented by a list of key:value pairs, rendered by location and logical structures.
                createdAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the creation of the resource.
                updatedAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the last update of the resource.
            description: A Host resource.
        HostgpuResource:
            type: object
            properties:
                resourceId:
                    readOnly: true
                    pattern: ^hostgpu-[0-9a-f]{8}$
                    type: string
                pciId:
                    readOnly: true
                    type: string
                    description: The GPU device PCI identifier.
                product:
                    readOnly: true
                    type: string
                    description: The GPU device model.
                vendor:
                    readOnly: true
                    type: string
                    description: The GPU device vendor.
                description:
                    readOnly: true
                    type: string
                    description: The human-readable GPU device description.
                deviceName:
                    readOnly: true
                    type: string
                    description: GPU name as reported by OS.
                features:
                    readOnly: true
                    type: string
                    description: The features of this GPU device, comma separated.
                createdAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the creation of the resource.
                updatedAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the last update of the resource.
            description: The set of available host GPU cards.
        HostnicResource:
            type: object
            properties:
                resourceId:
                    readOnly: true
                    pattern: ^hostnic-[0-9a-f]{8}$
                    type: string
                deviceName:
                    readOnly: true
                    type: string
                    description: The device name (OS provided, like eth0, enp1s0, etc.).
                pciIdentifier:
                    readOnly: true
                    type: string
                    description: PCI identifier string for this network interface.
                macAddr:
                    readOnly: true
                    type: string
                    description: The interface MAC address.
                sriovEnabled:
                    readOnly: true
                    type: boolean
                    description: If the interface has SRIOV enabled.
                sriovVfsNum:
                    readOnly: true
                    type: integer
                    description: The number of VFs currently provisioned on the interface, if SR-IOV is supported.
                    format: uint32
                sriovVfsTotal:
                    readOnly: true
                    type: integer
                    description: The maximum number of VFs the interface supports, if SR-IOV is supported.
                    format: uint32
                features:
                    readOnly: true
                    type: string
                    description: The features of this interface, comma separated.
                mtu:
                    readOnly: true
                    type: integer
                    description: Maximum transmission unit of the interface.
                    format: uint32
                linkState:
                    readOnly: true
                    enum:
                        - NETWORK_INTERFACE_LINK_STATE_UP
                        - NETWORK_INTERFACE_LINK_STATE_DOWN
                    type: string
                    description: Link state of this interface.
                    format: enum
                bmcInterface:
                    readOnly: true
                    type: boolean
                    description: Whether this is a bmc interface or not.
                createdAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the creation of the resource.
                updatedAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the last update of the resource.
            description: The set of available host interfaces.
        HoststorageResource:
            type: object
            properties:
                resourceId:
                    readOnly: true
                    pattern: ^hoststorage-[0-9a-f]{8}$
                    type: string
                wwid:
                    readOnly: true
                    type: string
                    description: The storage device unique identifier.
                serial:
                    readOnly: true
                    type: string
                    description: The storage device unique serial number.
                vendor:
                    readOnly: true
                    type: string
                    description: The Storage device vendor.
                model:
                    readOnly: true
                    type: string
                    description: The storage device model.
                capacityBytes:
                    readOnly: true
                    type: string
                    description: The storage device Capacity (size) in bytes.
                deviceName:
                    readOnly: true
                    type: string
                    description: The storage device device name (OS provided, like sda, sdb, etc.)
                createdAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the creation of the resource.
                updatedAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the last update of the resource.
            description: The set of available host storage capabilities.
        HostusbResource:
            type: object
            properties:
                resourceId:
                    readOnly: true
                    pattern: ^hostusb-[0-9a-f]{8}$
                    type: string
                idvendor:
                    readOnly: true
                    type: string
                    description: Hexadecimal number representing ID of the USB device vendor.
                idproduct:
                    readOnly: true
                    type: string
                    description: Hexadecimal number representing ID of the USB device product.
                bus:
                    readOnly: true
                    type: integer
                    description: Bus number of device connected with.
                    format: uint32
                addr:
                    readOnly: true
                    type: integer
                    description: USB Device number assigned by OS.
                    format: uint32
                class:
                    readOnly: true
                    type: string
                    description: class defined by USB-IF.
                serial:
                    readOnly: true
                    type: string
                    description: Serial number of device.
                deviceName:
                    readOnly: true
                    type: string
                    description: the OS-provided device name.
                createdAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the creation of the resource.
                updatedAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the last update of the resource.
            description: The set of host USB resources.
        InstanceResource:
            type: object
            properties:
                resourceId:
                    readOnly: true
                    pattern: ^inst-[0-9a-f]{8}$
                    type: string
                    description: Resource ID, generated on Create.
                kind:
                    enum:
                        - INSTANCE_KIND_METAL
                    type: string
                    description: Kind of resource. Frequently tied to Provider.
                    format: enum
                name:
                    maxLength: 20
                    pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
                    type: string
                    description: The instance's human-readable name.
                desiredState:
                    readOnly: true
                    enum:
                        - INSTANCE_STATE_RUNNING
                        - INSTANCE_STATE_DELETED
                        - INSTANCE_STATE_UNTRUSTED
                    type: string
                    description: The Instance desired state.
                    format: enum
                currentState:
                    readOnly: true
                    enum:
                        - INSTANCE_STATE_RUNNING
                        - INSTANCE_STATE_DELETED
                        - INSTANCE_STATE_UNTRUSTED
                    type: string
                    description: The Instance current state.
                    format: enum
                host:
                    $ref: '#/components/schemas/HostResource'
                desiredOs:
                    $ref: '#/components/schemas/OperatingSystemResource'
                currentOs:
                    $ref: '#/components/schemas/OperatingSystemResource'
                securityFeature:
                    enum:
                        - SECURITY_FEATURE_NONE
                        - SECURITY_FEATURE_SECURE_BOOT_AND_FULL_DISK_ENCRYPTION
                    type: string
                    description: Select to enable security features such as Secure Boot (SB) and Full Disk Encryption (FDE).
                    format: enum
                instanceStatus:
                    readOnly: true
                    type: string
                    description: textual message that describes the current instance status. Set by RMs only.
                instanceStatusIndicator:
                    readOnly: true
                    enum:
                        - STATUS_INDICATION_ERROR
                        - STATUS_INDICATION_IN_PROGRESS
                        - STATUS_INDICATION_IDLE
                    type: string
                    description: Indicates interpretation of instance_status. Set by RMs only.
                    format: enum
                instanceStatusTimestamp:
                    readOnly: true
                    type: string
                    description: UTC timestamp when instance_status was last changed. Set by RMs only.
                provisioningStatus:
                    readOnly: true
                    type: string
                    description: textual message that describes the provisioning status of Instance. Set by RMs only.
                provisioningStatusIndicator:
                    readOnly: true
                    enum:
                        - STATUS_INDICATION_ERROR
                        - STATUS_INDICATION_IN_PROGRESS
                        - STATUS_INDICATION_IDLE
                    type: string
                    description: Indicates interpretation of provisioning_status. Set by RMs only.
                    format: enum
                provisioningStatusTimestamp:
                    readOnly: true
                    type: string
                    description: UTC timestamp when provisioning_status was last changed. Set by RMs only.
                updateStatus:
                    readOnly: true
                    type: string
                    description: textual message that describes the update status of Instance. Set by RMs only.
                updateStatusIndicator:
                    readOnly: true
                    enum:
                        - STATUS_INDICATION_ERROR
                        - STATUS_INDICATION_IN_PROGRESS
                        - STATUS_INDICATION_IDLE
                    type: string
                    description: Indicates interpretation of update_status. Set by RMs only.
                    format: enum
                updateStatusTimestamp:
                    readOnly: true
                    type: string
                    description: UTC timestamp when update_status was last changed. Set by RMs only.
                updateStatusDetail:
                    readOnly: true
                    type: string
                    description: JSON field storing details of Instance update status. Set by RMs only. Beta, subject to change.
                trustedAttestationStatus:
                    readOnly: true
                    type: string
                    description: textual message that describes the trusted_attestation status of Instance. Set by RMs only.
                trustedAttestationStatusIndicator:
                    readOnly: true
                    enum:
                        - STATUS_INDICATION_ERROR
                        - STATUS_INDICATION_IN_PROGRESS
                        - STATUS_INDICATION_IDLE
                    type: string
                    description: Indicates interpretation of trusted_attestation_status. Set by RMs only.
                    format: enum
                trustedAttestationStatusTimestamp:
                    readOnly: true
                    type: string
                    description: UTC timestamp when trusted_attestation_status was last changed. Set by RMs only.
                workloadMembers:
                    readOnly: true
                    type: array
                    items:
                        $ref: '#/components/schemas/WorkloadMember'
                    description: The workload members associated with the instance.
                localaccount:
                    $ref: '#/components/schemas/LocalAccountResource'
                instanceId:
                    readOnly: true
                    pattern: ^inst-[0-9a-f]{8}$
                    type: string
                    description: The instance's unique identifier. Alias of resourceID.
                hostId:
                    writeOnly: true
                    pattern: ^host-[0-9a-f]{8}$
                    type: string
                    description: The host's unique identifier associated with the instance.
                osId:
                    writeOnly: true
                    pattern: ^os-[0-9a-f]{8}$
                    type: string
                    description: The unique identifier of OS resource that must be installed on the instance.
                localAccountId:
                    writeOnly: true
                    pattern: ^localaccount-[0-9a-f]{8}$
                    type: string
                    description: The unique identifier of local account will be associated with the instance.
                createdAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the creation of the resource.
                updatedAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the last update of the resource.
            description: InstanceResource describes an instantiated OS install, running on either a host or hypervisor.
        InvalidateHostResponse:
            type: object
            properties: {}
            description: Response message for InvalidateHost.
        InvalidateInstanceResponse:
            type: object
            properties: {}
            description: Response message for Invalidate Instance.
        ListHostsResponse:
            required:
                - hosts
                - totalElements
                - hasNext
            type: object
            properties:
                hosts:
                    type: array
                    items:
                        $ref: '#/components/schemas/HostResource'
                    description: Sorted and filtered list of hosts.
                totalElements:
                    type: integer
                    description: Count of items in the entire list, regardless of pagination.
                    format: int32
                hasNext:
                    type: boolean
                    description: Inform if there are more elements
            description: Response message for the ListHosts method.
        ListInstancesResponse:
            required:
                - instances
                - totalElements
                - hasNext
            type: object
            properties:
                instances:
                    type: array
                    items:
                        $ref: '#/components/schemas/InstanceResource'
                    description: Sorted and filtered list of instances.
                totalElements:
                    type: integer
                    description: Count of items in the entire list, regardless of pagination.
                    format: int32
                hasNext:
                    type: boolean
                    description: Inform if there are more elements
            description: Response message for the ListInstances method.
        ListLocalAccountsResponse:
            required:
                - localAccounts
                - totalElements
                - hasNext
            type: object
            properties:
                localAccounts:
                    type: array
                    items:
                        $ref: '#/components/schemas/LocalAccountResource'
                    description: Sorted and filtered list of localaccounts.
                totalElements:
                    type: integer
                    description: Count of items in the entire list, regardless of pagination.
                    format: int32
                hasNext:
                    type: boolean
                    description: Inform if there are more elements
            description: Response message for the ListLocalAccounts method.
        ListLocationsResponse:
            required:
                - nodes
            type: object
            properties:
                nodes:
                    type: array
                    items:
                        $ref: '#/components/schemas/ListLocationsResponse_LocationNode'
                    description: Sorted and filtered list of regions.
                totalElements:
                    type: integer
                    description: Count of items in the entire list, regardless of pagination.
                    format: int32
                outputElements:
                    type: integer
                    description: Amount of items in the returned list.
                    format: int32
            description: Response message for the ListLocations method.
        ListLocationsResponse_LocationNode:
            required:
                - resourceId
                - parentId
                - name
                - type
            type: object
            properties:
                resourceId:
                    type: string
                    description: The associated node resource ID, generated by inventory on Create.
                parentId:
                    type: string
                    description: The associated resource ID, of the parent resource of this Location node. In the case of a region, it could be empty or a regionId. In the case of a site, it could be empty or a regionId.
                name:
                    type: string
                    description: The node human readable name.
                type:
                    enum:
                        - RESOURCE_KIND_REGION
                        - RESOURCE_KIND_SITE
                    type: string
                    description: The node type
                    format: enum
            description: A node in the location tree.
        ListOperatingSystemsResponse:
            required:
                - operatingSystems
                - totalElements
                - hasNext
            type: object
            properties:
                operatingSystems:
                    type: array
                    items:
                        $ref: '#/components/schemas/OperatingSystemResource'
                    description: Sorted and filtered list of oss.
                totalElements:
                    type: integer
                    description: Count of items in the entire list, regardless of pagination.
                    format: int32
                hasNext:
                    type: boolean
                    description: Inform if there are more elements
            description: Response message for the ListOperatingSystems method.
        ListProvidersResponse:
            required:
                - providers
                - totalElements
                - hasNext
            type: object
            properties:
                providers:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProviderResource'
                    description: Sorted and filtered list of providers.
                totalElements:
                    type: integer
                    description: Count of items in the entire list, regardless of pagination.
                    format: int32
                hasNext:
                    type: boolean
                    description: Inform if there are more elements
            description: Response message for the ListProviders method.
        ListRegionsResponse:
            required:
                - regions
                - totalElements
                - hasNext
            type: object
            properties:
                regions:
                    type: array
                    items:
                        $ref: '#/components/schemas/RegionResource'
                    description: Sorted and filtered list of regions.
                totalElements:
                    type: integer
                    description: Count of items in the entire list, regardless of pagination.
                    format: int32
                hasNext:
                    type: boolean
                    description: Inform if there are more elements
            description: Response message for the ListRegions method.
        ListRepeatedSchedulesResponse:
            required:
                - repeatedSchedules
                - totalElements
                - hasNext
            type: object
            properties:
                repeatedSchedules:
                    type: array
                    items:
                        $ref: '#/components/schemas/RepeatedScheduleResource'
                    description: Sorted and filtered list of repeated_schedules.
                totalElements:
                    type: integer
                    description: Count of items in the entire list, regardless of pagination.
                    format: int32
                hasNext:
                    type: boolean
                    description: Inform if there are more elements
            description: Response message for the ListRepeatedSchedules method.
        ListSchedulesResponse:
            required:
                - singleSchedules
                - repeatedSchedules
                - totalElements
                - hasNext
            type: object
            properties:
                singleSchedules:
                    type: array
                    items:
                        $ref: '#/components/schemas/SingleScheduleResource'
                    description: Sorted and filtered list of single_schedules.
                repeatedSchedules:
                    type: array
                    items:
                        $ref: '#/components/schemas/RepeatedScheduleResource'
                    description: Sorted and filtered list of repeated_schedules.
                totalElements:
                    type: integer
                    description: Count of items in the entire list, regardless of pagination.
                    format: int32
                hasNext:
                    type: boolean
                    description: Inform if there are more elements
            description: Response message for the ListSchedulesResponse method.
        ListSingleSchedulesResponse:
            required:
                - singleSchedules
                - totalElements
                - hasNext
            type: object
            properties:
                singleSchedules:
                    type: array
                    items:
                        $ref: '#/components/schemas/SingleScheduleResource'
                    description: Sorted and filtered list of single_schedules.
                totalElements:
                    type: integer
                    description: Count of items in the entire list, regardless of pagination.
                    format: int32
                hasNext:
                    type: boolean
                    description: Inform if there are more elements
            description: Response message for the ListSingleSchedules method.
        ListSitesResponse:
            required:
                - sites
                - totalElements
                - hasNext
            type: object
            properties:
                sites:
                    type: array
                    items:
                        $ref: '#/components/schemas/SiteResource'
                    description: Sorted and filtered list of sites.
                totalElements:
                    type: integer
                    description: Count of items in the entire list, regardless of pagination.
                    format: int32
                hasNext:
                    type: boolean
                    description: Inform if there are more elements
            description: Response message for the ListSites method.
        ListTelemetryLogsGroupsResponse:
            required:
                - telemetryLogsGroups
                - totalElements
                - hasNext
            type: object
            properties:
                telemetryLogsGroups:
                    type: array
                    items:
                        $ref: '#/components/schemas/TelemetryLogsGroupResource'
                    description: Sorted and filtered list of telemetry_logs_groups.
                totalElements:
                    type: integer
                    description: Count of items in the entire list, regardless of pagination.
                    format: int32
                hasNext:
                    type: boolean
                    description: Inform if there are more elements
            description: Response message for the ListTelemetryLogsGroups method.
        ListTelemetryLogsProfilesResponse:
            required:
                - telemetryLogsProfiles
                - totalElements
                - hasNext
            type: object
            properties:
                telemetryLogsProfiles:
                    type: array
                    items:
                        $ref: '#/components/schemas/TelemetryLogsProfileResource'
                    description: Sorted and filtered list of telemetry_logs_profiles.
                totalElements:
                    type: integer
                    description: Count of items in the entire list, regardless of pagination.
                    format: int32
                hasNext:
                    type: boolean
                    description: Inform if there are more elements
            description: Response message for the ListTelemetryLogsProfiles method.
        ListTelemetryMetricsGroupsResponse:
            required:
                - telemetryMetricsGroups
                - totalElements
                - hasNext
            type: object
            properties:
                telemetryMetricsGroups:
                    type: array
                    items:
                        $ref: '#/components/schemas/TelemetryMetricsGroupResource'
                    description: Sorted and filtered list of telemetry_metrics_groups.
                totalElements:
                    type: integer
                    description: Count of items in the entire list, regardless of pagination.
                    format: int32
                hasNext:
                    type: boolean
                    description: Inform if there are more elements
            description: Response message for the ListTelemetryMetricsGroups method.
        ListTelemetryMetricsProfilesResponse:
            required:
                - telemetryMetricsProfiles
                - totalElements
                - hasNext
            type: object
            properties:
                telemetryMetricsProfiles:
                    type: array
                    items:
                        $ref: '#/components/schemas/TelemetryMetricsProfileResource'
                    description: Sorted and filtered list of telemetry_metrics_profiles.
                totalElements:
                    type: integer
                    description: Count of items in the entire list, regardless of pagination.
                    format: int32
                hasNext:
                    type: boolean
                    description: Inform if there are more elements
            description: Response message for the ListTelemetryMetricsProfiles method.
        ListWorkloadMembersResponse:
            required:
                - workloadMembers
                - totalElements
                - hasNext
            type: object
            properties:
                workloadMembers:
                    type: array
                    items:
                        $ref: '#/components/schemas/WorkloadMember'
                    description: Sorted and filtered list of workload_members.
                totalElements:
                    type: integer
                    description: Count of items in the entire list, regardless of pagination.
                    format: int32
                hasNext:
                    type: boolean
                    description: Inform if there are more elements
            description: Response message for the ListWorkloadMembers method.
        ListWorkloadsResponse:
            required:
                - workloads
                - totalElements
                - hasNext
            type: object
            properties:
                workloads:
                    type: array
                    items:
                        $ref: '#/components/schemas/WorkloadResource'
                    description: Sorted and filtered list of workloads.
                totalElements:
                    type: integer
                    description: Count of items in the entire list, regardless of pagination.
                    format: int32
                hasNext:
                    type: boolean
                    description: Inform if there are more elements
            description: Response message for the ListWorkloads method.
        LocalAccountResource:
            required:
                - username
                - sshKey
            type: object
            properties:
                resourceId:
                    readOnly: true
                    pattern: ^localaccount-[0-9a-f]{8}$
                    type: string
                    description: resource identifier
                username:
                    pattern: ^[a-z][a-z0-9-]{0,31}$
                    type: string
                    description: Username provided by admin
                sshKey:
                    pattern: ^(ssh-ed25519|ecdsa-sha2-nistp521) ([A-Za-z0-9+/=]+) ?(.*)?$
                    type: string
                    description: SSH Public Key of EN
                createdAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the creation of the resource.
                updatedAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the last update of the resource.
        MetadataItem:
            required:
                - key
                - value
            type: object
            properties:
                key:
                    maxLength: 316
                    pattern: ^$|^[a-z.]+/$|^[a-z.]+/[a-z0-9][a-z0-9-_.]*[a-z0-9]$|^[a-z.]+/[a-z0-9]$|^[a-z]$|^[a-z0-9][a-z0-9-_.]*[a-z0-9]$
                    type: string
                    description: The metadata key.
                value:
                    maxLength: 63
                    pattern: ^$|^[a-z0-9]$|^[a-z0-9][a-z0-9._-]*[a-z0-9]$
                    type: string
                    description: The metadata value.
            description: A metadata item, represented by a key:value pair.
        OnboardHostResponse:
            type: object
            properties: {}
            description: Response of a Host Register request.
        OperatingSystemResource:
            required:
                - updateSources
                - sha256
            type: object
            properties:
                resourceId:
                    readOnly: true
                    pattern: ^os-[0-9a-f]{8}$
                    type: string
                    description: Resource ID, generated by inventory on Create.
                name:
                    maxLength: 20
                    pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
                    type: string
                    description: The OS resource's name.
                architecture:
                    maxLength: 20
                    pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()" ]+$
                    type: string
                    description: The OS resource's CPU architecture.
                kernelCommand:
                    maxLength: 500
                    pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()" ]+$
                    type: string
                    description: The OS resource's kernel Command Line Options.
                updateSources:
                    type: array
                    items:
                        pattern: |-
                            ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*+()" \
                            ]+$
                        type: string
                    description: The list of OS resource update sources. Should be in 'DEB822 Source Format' for Debian style OSs
                imageUrl:
                    maxLength: 500
                    pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()" ]+$
                    type: string
                    description: The URL repository of the OS image.
                imageId:
                    maxLength: 500
                    pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()" ]+$
                    type: string
                    description: A unique identifier of the OS image that can be retrieved from the running OS.
                sha256:
                    maxLength: 64
                    minLength: 64
                    pattern: ^[a-f0-9]+$
                    type: string
                    description: SHA256 checksum of the OS resource in hexadecimal representation.
                profileName:
                    maxLength: 128
                    pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()" ]+$
                    type: string
                    description: Name of an OS profile that the OS resource belongs to. Uniquely identifies a family of OS resources.
                profileVersion:
                    readOnly: true
                    type: string
                    description: Version of OS profile that the OS resource belongs to.
                installedPackages:
                    maxLength: 500000
                    pattern: |-
                        ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()" \
                        ]+$
                    type: string
                    description: Freeform text, OS-dependent. A list of package names, one per line (newline separated). Must not contain version information.
                securityFeature:
                    enum:
                        - SECURITY_FEATURE_NONE
                        - SECURITY_FEATURE_SECURE_BOOT_AND_FULL_DISK_ENCRYPTION
                    type: string
                    description: Indicating if this OS is capable of supporting features like Secure Boot (SB) and Full Disk Encryption (FDE). Immutable after creation.
                    format: enum
                osType:
                    enum:
                        - OS_TYPE_MUTABLE
                        - OS_TYPE_IMMUTABLE
                    type: string
                    description: Indicating the type of OS (for example, mutable or immutable).
                    format: enum
                osProvider:
                    enum:
                        - OS_PROVIDER_KIND_INFRA
                        - OS_PROVIDER_KIND_LENOVO
                    type: string
                    description: Indicating the provider of OS (e.g., Infra or Lenovo).
                    format: enum
                platformBundle:
                    readOnly: true
                    type: string
                    description: Opaque JSON field storing references to custom installation script(s) that supplements the base OS with additional OS-level dependencies/configurations.  If empty, the default OS installation will be used.
                osResourceId:
                    readOnly: true
                    pattern: ^os-[0-9a-f]{8}$
                    type: string
                    description: The OS resource's unique identifier. Alias of resourceId.
                repoUrl:
                    maxLength: 500
                    pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()" ]+$
                    type: string
                    description: // OS image URL. URL of the original installation source.
                createdAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the creation of the resource.
                updatedAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the last update of the resource.
            description: An OS resource.
        ProviderResource:
            required:
                - providerKind
                - name
                - apiEndpoint
            type: object
            properties:
                resourceId:
                    readOnly: true
                    pattern: ^provider-[0-9a-f]{8}$
                    type: string
                    description: Resource ID, generated by the inventory on Create.
                providerKind:
                    enum:
                        - PROVIDER_KIND_BAREMETAL
                    type: string
                    description: The provider kind.
                    format: enum
                providerVendor:
                    enum:
                        - PROVIDER_VENDOR_LENOVO_LXCA
                        - PROVIDER_VENDOR_LENOVO_LOCA
                    type: string
                    description: The provider vendor.
                    format: enum
                name:
                    pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
                    type: string
                    description: The provider resource's name.
                apiEndpoint:
                    pattern: ^$|^[a-zA-Z-_0-9./:;=?@!#,<>*() ]+$
                    type: string
                    description: The provider resource's API endpoint.
                apiCredentials:
                    type: array
                    items:
                        maxLength: 500
                        pattern: ^[^|]*$
                        type: string
                    description: The provider resource's list of credentials.
                config:
                    pattern: ^$|^[a-zA-Z-_0-9./:;=?@!#,<>*() ]+$
                    type: string
                    description: Opaque provider configuration.
                providerId:
                    readOnly: true
                    pattern: ^provider-[0-9a-f]{8}$
                    type: string
                    description: The provider resource's unique identifier. Alias of resourceId.
                createdAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the creation of the resource.
                updatedAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the last update of the resource.
            description: A provider resource.
        RegionResource:
            type: object
            properties:
                resourceId:
                    readOnly: true
                    pattern: ^region-[0-9a-f]{8}$
                    type: string
                    description: resource ID, generated by the inventory on Create.
                name:
                    maxLength: 20
                    pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
                    type: string
                    description: The user-provided, human-readable name of region
                parentRegion:
                    $ref: '#/components/schemas/RegionResource'
                regionId:
                    readOnly: true
                    pattern: ^region-[0-9a-f]{8}$
                    type: string
                    description: The Region unique identifier. Alias of resourceId.
                metadata:
                    type: array
                    items:
                        $ref: '#/components/schemas/MetadataItem'
                    description: The metadata associated to the Region, represented by a list of key:value pairs.
                inheritedMetadata:
                    readOnly: true
                    type: array
                    items:
                        $ref: '#/components/schemas/MetadataItem'
                    description: The rendered metadata from the Region parent(s) that can be inherited by the Region, represented by a list of key:value pairs. This field can not be used in filter.
                totalSites:
                    readOnly: true
                    type: integer
                    description: The total number of sites in the region.
                    format: int32
                parentId:
                    writeOnly: true
                    pattern: ^$|^region-[0-9a-f]{8}$
                    type: string
                    description: The parent Region unique identifier that the region is associated to, when existent. This field can not be used in filter.
                createdAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the creation of the resource.
                updatedAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the last update of the resource.
            description: A region resource.
        RepeatedScheduleResource:
            required:
                - scheduleStatus
                - durationSeconds
                - cronMinutes
                - cronHours
                - cronDayMonth
                - cronMonth
                - cronDayWeek
            type: object
            properties:
                resourceId:
                    readOnly: true
                    pattern: ^repeatedsche-[0-9a-f]{8}$
                    type: string
                    description: Resource ID, generated by the inventory on Create.
                scheduleStatus:
                    enum:
                        - SCHEDULE_STATUS_MAINTENANCE
                        - SCHEDULE_STATUS_OS_UPDATE
                    type: string
                    description: The schedule status.
                    format: enum
                name:
                    maxLength: 20
                    pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
                    type: string
                    description: The schedule's name.
                targetSite:
                    $ref: '#/components/schemas/SiteResource'
                targetHost:
                    $ref: '#/components/schemas/HostResource'
                targetRegion:
                    $ref: '#/components/schemas/RegionResource'
                durationSeconds:
                    type: integer
                    description: The duration in seconds of the repeated schedule, per schedule.
                    format: uint32
                cronMinutes:
                    pattern: ^([*]|([0-9]|([1-5][0-9]))((,([0-9]|([1-5][0-9])))*))$
                    type: string
                    description: cron style minutes (0-59), it can be empty only when used in a Filter.
                cronHours:
                    pattern: ^([*]|([0-9]|1[0-9]|2[0-3])((,([0-9]|1[0-9]|2[0-3]))*))$
                    type: string
                    description: cron style hours (0-23), it can be empty only when used in a Filter
                cronDayMonth:
                    pattern: ^([*]|([1-9]|([12][0-9])|3[01])((,([1-9]|([12][0-9])|3[01]))*))$
                    type: string
                    description: cron style day of month (1-31), it can be empty only when used in a Filter
                cronMonth:
                    pattern: ^([*]|([1-9]|1[012])((,([1-9]|1[012]))*))$
                    type: string
                    description: cron style month (1-12), it can be empty only when used in a Filter
                cronDayWeek:
                    pattern: ^([*]|([0-6])((,([0-6]))*))$
                    type: string
                    description: cron style day of week (0-6), it can be empty only when used in a Filter
                repeatedScheduleId:
                    readOnly: true
                    pattern: ^repeatedsche-[0-9a-f]{8}$
                    type: string
                    description: The repeated schedule's unique identifier. Alias of resourceId.
                targetHostId:
                    writeOnly: true
                    pattern: ^$|^host-[0-9a-f]{8}$
                    type: string
                    description: The target region ID of the schedule. Only one target can be provided per schedule. This field cannot be used as filter.
                targetSiteId:
                    writeOnly: true
                    pattern: ^$|^site-[0-9a-f]{8}$
                    type: string
                    description: The target site ID of the schedule. Only one target can be provided per schedule. This field cannot be used as filter.
                targetRegionId:
                    writeOnly: true
                    pattern: ^$|^region-[0-9a-f]{8}$
                    type: string
                    description: The target region ID of the schedule. Only one target can be provided per schedule. This field cannot be used as filter.
                createdAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the creation of the resource.
                updatedAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the last update of the resource.
            description: A repeated-schedule resource.
        SingleScheduleResource:
            required:
                - scheduleStatus
                - startSeconds
            type: object
            properties:
                resourceId:
                    readOnly: true
                    pattern: ^singlesche-[0-9a-f]{8}$
                    type: string
                    description: Resource ID, generated by the inventory on Create.
                scheduleStatus:
                    enum:
                        - SCHEDULE_STATUS_MAINTENANCE
                        - SCHEDULE_STATUS_OS_UPDATE
                    type: string
                    description: The schedule status.
                    format: enum
                name:
                    maxLength: 20
                    pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
                    type: string
                    description: The schedule's name.
                targetSite:
                    $ref: '#/components/schemas/SiteResource'
                targetHost:
                    $ref: '#/components/schemas/HostResource'
                targetRegion:
                    $ref: '#/components/schemas/RegionResource'
                startSeconds:
                    type: integer
                    description: The start time in seconds, of the single schedule.
                    format: uint32
                endSeconds:
                    type: integer
                    description: The end time in seconds, of the single schedule. The value of endSeconds must be equal to or bigger than the value of startSeconds.
                    format: uint32
                singleScheduleId:
                    readOnly: true
                    pattern: ^singlesche-[0-9a-f]{8}$
                    type: string
                    description: The single schedule resource's unique identifier. Alias of resourceId.
                targetHostId:
                    writeOnly: true
                    pattern: ^$|^host-[0-9a-f]{8}$
                    type: string
                    description: The target host ID of the schedule. Only one target can be provided per schedule. This field cannot be used as filter.
                targetSiteId:
                    writeOnly: true
                    pattern: ^$|^site-[0-9a-f]{8}$
                    type: string
                    description: The target site ID of the schedule. Only one target can be provided per schedule. This field cannot be used as filter.
                targetRegionId:
                    writeOnly: true
                    pattern: ^$|^region-[0-9a-f]{8}$
                    type: string
                    description: The target region ID of the schedule. Only one target can be provided per schedule. This field cannot be used as filter.
                createdAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the creation of the resource.
                updatedAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the last update of the resource.
            description: A single schedule resource.
        SiteResource:
            type: object
            properties:
                resourceId:
                    readOnly: true
                    pattern: ^site-[0-9a-f]{8}$
                    type: string
                    description: resource ID, generated by the inventory on Create.
                name:
                    maxLength: 20
                    pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
                    type: string
                    description: The site's human-readable name.
                region:
                    $ref: '#/components/schemas/RegionResource'
                siteLat:
                    maximum: 9e+08
                    type: integer
                    description: The geolocation latitude of the site. Points are represented as latitude-longitude pairs in the E7 representation (degrees are multiplied by 10**7 and rounded to the nearest integer). siteLat must be in the range of +/- 90 degrees.
                    format: int32
                siteLng:
                    maximum: 1.8e+09
                    type: integer
                    description: The geolocation longitude of the site. Points are represented as latitude-longitude pairs in the E7 representation (degrees are multiplied by 10**7 and rounded to the nearest integer). siteLng must be in the range of +/- 180 degrees (inclusive).
                    format: int32
                provider:
                    $ref: '#/components/schemas/ProviderResource'
                siteId:
                    pattern: ^site-[0-9a-f]{8}$
                    type: string
                    description: The site unique identifier. Alias of resourceId.
                metadata:
                    type: array
                    items:
                        $ref: '#/components/schemas/MetadataItem'
                    description: The metadata associated to the Region, represented by a list of key:value pairs.
                inheritedMetadata:
                    readOnly: true
                    type: array
                    items:
                        $ref: '#/components/schemas/MetadataItem'
                    description: The rendered metadata from the Region parent(s) that can be inherited by the Region, represented by a list of key:value pairs. This field can not be used in filter.
                regionId:
                    writeOnly: true
                    pattern: ^$|^region-[0-9a-f]{8}$
                    type: string
                    description: The region's unique identifier that the site is associated to. This field cannot be used in filter.
                createdAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the creation of the resource.
                updatedAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the last update of the resource.
            description: A site resource.
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        TelemetryLogsGroupResource:
            required:
                - name
                - collectorKind
                - groups
            type: object
            properties:
                resourceId:
                    readOnly: true
                    pattern: ^telemetrygroup-[0-9a-f]{8}$
                    type: string
                    description: Unique ID of the telemetry group.
                telemetryLogsGroupId:
                    readOnly: true
                    pattern: ^telemetrygroup-[0-9a-f]{8}$
                    type: string
                    description: Unique ID of the telemetry group. Alias of resource_id.
                name:
                    maxLength: 20
                    pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
                    type: string
                    description: Human-readable name for the log group.
                collectorKind:
                    enum:
                        - COLLECTOR_KIND_HOST
                        - COLLECTOR_KIND_CLUSTER
                    type: string
                    description: The collector kind.
                    format: enum
                groups:
                    type: array
                    items:
                        pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()" ]+$
                        type: string
                    description: A list of log groups to collect.
                createdAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the creation of the resource.
                updatedAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the last update of the resource.
            description: TelemetryLogsGroupResource.
        TelemetryLogsProfileResource:
            required:
                - logLevel
                - logsGroupId
            type: object
            properties:
                resourceId:
                    readOnly: true
                    pattern: ^telemetryprofile-[0-9a-f]{8}$
                    type: string
                    description: The ID of the telemetry profile.
                profileId:
                    readOnly: true
                    pattern: ^telemetryprofile-[0-9a-f]{8}$
                    type: string
                    description: The ID of the telemetry profile.
                targetInstance:
                    pattern: ^inst-[0-9a-f]{8}$
                    type: string
                    description: The ID of the instance that the telemetry profile is assigned to. Can only be one of targetInstance, targetSite, or targetRegion.
                targetSite:
                    pattern: ^site-[0-9a-f]{8}$
                    type: string
                    description: The ID of the site where the telemetry profile is assigned to. Can only be one of targetInstance, targetSite, or targetRegion.
                targetRegion:
                    pattern: ^region-[0-9a-f]{8}$
                    type: string
                    description: The ID of the region where the telemetry profile is assigned to. Can only be one of targetInstance, targetSite, or targetRegion.
                logLevel:
                    enum:
                        - SEVERITY_LEVEL_CRITICAL
                        - SEVERITY_LEVEL_ERROR
                        - SEVERITY_LEVEL_WARN
                        - SEVERITY_LEVEL_INFO
                        - SEVERITY_LEVEL_DEBUG
                    type: string
                    description: The log level og the telemetry profile.
                    format: enum
                logsGroupId:
                    pattern: ^telemetrygroup-[0-9a-f]{8}$
                    type: string
                    description: The unique identifier of the telemetry log group.
                logsGroup:
                    $ref: '#/components/schemas/TelemetryLogsGroupResource'
                createdAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the creation of the resource.
                updatedAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the last update of the resource.
            description: A telemetry log profile for a hierarchy object.
        TelemetryMetricsGroupResource:
            required:
                - name
                - collectorKind
                - groups
            type: object
            properties:
                resourceId:
                    readOnly: true
                    pattern: ^telemetrygroup-[0-9a-f]{8}$
                    type: string
                    description: Unique ID of the telemetry group.
                telemetryMetricsGroupId:
                    readOnly: true
                    pattern: ^telemetrygroup-[0-9a-f]{8}$
                    type: string
                    description: Unique ID of the telemetry group. Alias of resource_id.
                name:
                    maxLength: 20
                    pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
                    type: string
                    description: Human-readable name for the log group.
                collectorKind:
                    enum:
                        - COLLECTOR_KIND_HOST
                        - COLLECTOR_KIND_CLUSTER
                    type: string
                    description: The collector kind.
                    format: enum
                groups:
                    type: array
                    items:
                        pattern: ^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()" ]+$
                        type: string
                    description: A list of log groups to collect.
                createdAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the creation of the resource.
                updatedAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the last update of the resource.
            description: TelemetryMetricsGroupResource.
        TelemetryMetricsProfileResource:
            required:
                - metricsInterval
                - metricsGroupId
            type: object
            properties:
                resourceId:
                    readOnly: true
                    pattern: ^telemetryprofile-[0-9a-f]{8}$
                    type: string
                    description: The ID of the telemetry profile.
                profileId:
                    readOnly: true
                    pattern: ^telemetryprofile-[0-9a-f]{8}$
                    type: string
                    description: The ID of the telemetry profile.
                targetInstance:
                    pattern: ^inst-[0-9a-f]{8}$
                    type: string
                    description: The ID of the instance that the telemetry profile is assigned to. Can only be one of targetInstance, targetSite, or targetRegion.
                targetSite:
                    pattern: ^site-[0-9a-f]{8}$
                    type: string
                    description: The ID of the site where the telemetry profile is assigned to. Can only be one of targetInstance, targetSite, or targetRegion.
                targetRegion:
                    pattern: ^region-[0-9a-f]{8}$
                    type: string
                    description: The ID of the region where the telemetry profile is assigned to. Can only be one of targetInstance, targetSite, or targetRegion.
                metricsInterval:
                    type: integer
                    description: Metric interval (in seconds) for the telemetry profile. This field must only be defined if the type equals to TELEMETRY_CONFIG_KIND_METRICS.
                    format: uint32
                metricsGroupId:
                    pattern: ^telemetrygroup-[0-9a-f]{8}$
                    type: string
                    description: The unique identifier of the telemetry metric group.
                metricsGroup:
                    $ref: '#/components/schemas/TelemetryMetricsGroupResource'
                createdAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the creation of the resource.
                updatedAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the last update of the resource.
            description: A telemetry metric profile for a hierarchy object.
        WorkloadMember:
            required:
                - kind
                - workloadId
                - instanceId
            type: object
            properties:
                resourceId:
                    readOnly: true
                    pattern: ^workloadmember-[0-9a-f]{8}$
                    type: string
                    description: Resource ID, generated by the inventory on Create.
                kind:
                    enum:
                        - WORKLOAD_MEMBER_KIND_CLUSTER_NODE
                    type: string
                    description: The kind of the workload member.
                    format: enum
                workload:
                    $ref: '#/components/schemas/WorkloadResource'
                instance:
                    $ref: '#/components/schemas/InstanceResource'
                workloadMemberId:
                    readOnly: true
                    pattern: ^workloadmember-[0-9a-f]{8}$
                    type: string
                    description: The workload unique identifier. Alias of resourceId.
                member:
                    $ref: '#/components/schemas/InstanceResource'
                workloadId:
                    writeOnly: true
                    pattern: ^workload-[0-9a-f]{8}$
                    type: string
                    description: The workload unique identifier.
                instanceId:
                    writeOnly: true
                    pattern: ^inst-[0-9a-f]{8}$
                    type: string
                    description: The unique identifier of the instance.
                createdAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the creation of the resource.
                updatedAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the last update of the resource.
            description: Intermediate resource to represent a relation between a workload and a compute resource (i.e., instance).
        WorkloadResource:
            required:
                - kind
                - members
            type: object
            properties:
                resourceId:
                    readOnly: true
                    pattern: ^workload-[0-9a-f]{8}$
                    type: string
                    description: resource ID, generated by the inventory on Create.
                kind:
                    enum:
                        - WORKLOAD_KIND_CLUSTER
                        - WORKLOAD_KIND_DHCP
                    type: string
                    description: Type of workload.
                    format: enum
                name:
                    maxLength: 20
                    pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
                    type: string
                    description: Human-readable name for the workload.
                externalId:
                    pattern: '^$|^[a-zA-Z-_0-9./: ]+$'
                    type: string
                    description: The ID of the external resource, used to link to resources outside the realm of Edge Infrastructure Manager.
                status:
                    pattern: ^$|^[a-zA-Z-_0-9./:;=?@!#,<>*() ]+$
                    type: string
                    description: Human-readable status of the workload.
                members:
                    readOnly: true
                    type: array
                    items:
                        $ref: '#/components/schemas/WorkloadMember'
                    description: The members of the workload.
                workloadId:
                    readOnly: true
                    pattern: ^workload-[0-9a-f]{8}$
                    type: string
                    description: The workload unique identifier. Alias of resourceId.
                createdAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the creation of the resource.
                updatedAt:
                    readOnly: true
                    type: string
                    description: Timestamp for the last update of the resource.
            description: A generic way to group compute resources to obtain a workload.
tags:
    - name: HostService
      description: Host.
    - name: InstanceService
      description: Instance.
    - name: LocalAccountService
      description: LocalAccount.
    - name: LocationService
      description: Location.
    - name: OperatingSystemService
      description: OperatingSystem.
    - name: ProviderService
      description: Provider.
    - name: RegionService
      description: Region.
    - name: ScheduleService
      description: Schedules.
    - name: SiteService
      description: Site.
    - name: TelemetryLogsGroupService
      description: TelemetryLogsGroup.
    - name: TelemetryLogsProfileService
      description: TelemetryLogsProfile.
    - name: TelemetryMetricsGroupService
      description: TelemetryMetricsGroup.
    - name: TelemetryMetricsProfileService
      description: TelemetryMetricsProfile.
    - name: WorkloadMemberService
      description: WorkloadMember.
    - name: WorkloadService
      description: Workload.
