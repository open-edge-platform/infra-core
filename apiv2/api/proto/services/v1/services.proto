// SPDX-FileCopyrightText: (C) 2025 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package services.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/field_mask.proto";
import "resources/compute/v1/compute.proto";
import "resources/location/v1/location.proto";
import "resources/os/v1/os.proto";
import "resources/provider/v1/provider.proto";
import "resources/schedule/v1/schedule.proto";
import "resources/telemetry/v1/telemetry.proto";
import "resources/localaccount/v1/localaccount.proto";
import "buf/validate/validate.proto";
import "gnostic/openapi/v3/annotations.proto";
import "resources/customconfig/v1/customconfig.proto";

option go_package = "github.com/open-edge-platform/infra-core/apiv2/v2/internal/pbapi/services/v1;servicesv1";

option (gnostic.openapi.v3.document) = {
  info: {
    title: "Edge Infrastructure Manager";
    version: "0.2.0";
    description: "Edge Infrastructure Manager API";
    contact: {
      name: "Open Edge Platform GitHub Organization";
      url: "https://github.com/open-edge-platform";
    }
    license: {
      name: "Apache 2.0";
      url: "https://www.apache.org/licenses/LICENSE-2.0.html";
    }
  }
};

// Region.
service RegionService {
  // Create a region.
  rpc CreateRegion(CreateRegionRequest) returns (resources.location.v1.RegionResource) {
    option (google.api.http) = {
      post: "/edge-infra.orchestrator.apis/v2/regions"
      body: "region"
    };
  }
  // Get a list of regions.
  rpc ListRegions(ListRegionsRequest) returns (ListRegionsResponse) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/regions"};
  }
  // Get a specific region.
  rpc GetRegion(GetRegionRequest) returns (resources.location.v1.RegionResource) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/regions/{resourceId}"};
  }
  // Update a region.
  rpc UpdateRegion(UpdateRegionRequest) returns (resources.location.v1.RegionResource) {
    option (google.api.http) = {
      put: "/edge-infra.orchestrator.apis/v2/regions/{resourceId}"
      body: "region"
    };
  }
  // Patch a region.
  rpc PatchRegion(PatchRegionRequest) returns (resources.location.v1.RegionResource) {
    option (google.api.http) = {
      patch: "/edge-infra.orchestrator.apis/v2/regions/{resourceId}"
      body: "region"
    };
  }  
  // Delete a region.
  rpc DeleteRegion(DeleteRegionRequest) returns (DeleteRegionResponse) {
    option (google.api.http) = {delete: "/edge-infra.orchestrator.apis/v2/regions/{resourceId}"};
  }
}

// Site.
service SiteService {
  // Create a site.
  rpc CreateSite(CreateSiteRequest) returns (resources.location.v1.SiteResource) {
    option (google.api.http) = {
      post: "/edge-infra.orchestrator.apis/v2/sites"
      body: "site"
    };
  }
  // Get a list of sites.
  rpc ListSites(ListSitesRequest) returns (ListSitesResponse) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/sites"};
  }
  // Get a specific site.
  rpc GetSite(GetSiteRequest) returns (resources.location.v1.SiteResource) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/sites/{resourceId}"};
  }
  // Update a site.
  rpc UpdateSite(UpdateSiteRequest) returns (resources.location.v1.SiteResource) {
    option (google.api.http) = {
      put: "/edge-infra.orchestrator.apis/v2/sites/{resourceId}"
      body: "site"
    };
  }
  // Patch a site.
  rpc PatchSite(PatchSiteRequest) returns (resources.location.v1.SiteResource) {
    option (google.api.http) = {
      patch: "/edge-infra.orchestrator.apis/v2/sites/{resourceId}"
      body: "site"
    };
  }  
  // Delete a site.
  rpc DeleteSite(DeleteSiteRequest) returns (DeleteSiteResponse) {
    option (google.api.http) = {delete: "/edge-infra.orchestrator.apis/v2/sites/{resourceId}"};
  }
}

// Location.
service LocationService {
  // Get a list of locations.
  rpc ListLocations(ListLocationsRequest) returns (ListLocationsResponse) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/locations"};
  }
}

// Host.
service HostService {
  // Get a summary of the hosts status.
  rpc GetHostsSummary(GetHostSummaryRequest) returns (GetHostSummaryResponse) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/hosts_summary"};
  }
  // Create a host.
  rpc CreateHost(CreateHostRequest) returns (resources.compute.v1.HostResource) {
    option (google.api.http) = {
      post: "/edge-infra.orchestrator.apis/v2/hosts"
      body: "host"
    };
  }
  // Get a list of hosts.
  rpc ListHosts(ListHostsRequest) returns (ListHostsResponse) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/hosts"};
  }
  // Get a specific host.
  rpc GetHost(GetHostRequest) returns (resources.compute.v1.HostResource) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/hosts/{resourceId}"};
  }
  // Update a host.
  rpc UpdateHost(UpdateHostRequest) returns (resources.compute.v1.HostResource) {
    option (google.api.http) = {
      put: "/edge-infra.orchestrator.apis/v2/hosts/{resourceId}"
      body: "host"
    };
  }
  // Patch a host.
  rpc PatchHost(PatchHostRequest) returns (resources.compute.v1.HostResource) {
    option (google.api.http) = {
      patch: "/edge-infra.orchestrator.apis/v2/hosts/{resourceId}"
      body: "host"
    };
  }  
  // Delete a host.
  rpc DeleteHost(DeleteHostRequest) returns (DeleteHostResponse) {
    option (google.api.http) = {delete: "/edge-infra.orchestrator.apis/v2/hosts/{resourceId}"};
  }
  // Invalidate a host.
  rpc InvalidateHost(InvalidateHostRequest) returns (InvalidateHostResponse) {
    option (google.api.http) = {put: "/edge-infra.orchestrator.apis/v2/hosts/{resourceId}/invalidate"};
  }
  // Register a host.
  rpc RegisterHost(RegisterHostRequest) returns (resources.compute.v1.HostResource) {
    option (google.api.http) = {
      post: "/edge-infra.orchestrator.apis/v2/hosts/register"
      body: "host"
    };
  }
  // Update a host registration.
  rpc PatchRegisterHost(RegisterHostRequest) returns (resources.compute.v1.HostResource) {
    option (google.api.http) = {
      patch: "/edge-infra.orchestrator.apis/v2/hosts/{resourceId}/register"
      body: "host"
    };
  }
  // Onboard a host.
  rpc OnboardHost(OnboardHostRequest) returns (OnboardHostResponse) {
    option (google.api.http) = {patch: "/edge-infra.orchestrator.apis/v2/hosts/{resourceId}/onboard"};
  }
}

// Instance.
service InstanceService {
  // Create a instance.
  rpc CreateInstance(CreateInstanceRequest) returns (resources.compute.v1.InstanceResource) {
    option (google.api.http) = {
      post: "/edge-infra.orchestrator.apis/v2/instances"
      body: "instance"
    };
  }
  // Get a list of instances.
  rpc ListInstances(ListInstancesRequest) returns (ListInstancesResponse) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/instances"};
  }
  // Get a specific instance.
  rpc GetInstance(GetInstanceRequest) returns (resources.compute.v1.InstanceResource) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/instances/{resourceId}"};
  }
  // Update a instance.
  rpc UpdateInstance(UpdateInstanceRequest) returns (resources.compute.v1.InstanceResource) {
    option (google.api.http) = {
      put: "/edge-infra.orchestrator.apis/v2/instances/{resourceId}"
      body: "instance"
    };
  }
  // Patch a instance.
  rpc PatchInstance(PatchInstanceRequest) returns (resources.compute.v1.InstanceResource) {
    option (google.api.http) = {
      patch: "/edge-infra.orchestrator.apis/v2/instances/{resourceId}"
      body: "instance"
    };
  }
  // Delete a instance.
  rpc DeleteInstance(DeleteInstanceRequest) returns (DeleteInstanceResponse) {
    option (google.api.http) = {delete: "/edge-infra.orchestrator.apis/v2/instances/{resourceId}"};
  }
  // Invalidate a instance.
  rpc InvalidateInstance(InvalidateInstanceRequest) returns (InvalidateInstanceResponse) {
    option (google.api.http) = {put: "/edge-infra.orchestrator.apis/v2/instances/{resourceId}/invalidate"};
  }
}

// OperatingSystem.
service OperatingSystemService {
  // Create an OS
  rpc CreateOperatingSystem(CreateOperatingSystemRequest) returns (resources.os.v1.OperatingSystemResource) {
    option (google.api.http) = {
      post: "/edge-infra.orchestrator.apis/v2/operating_systems"
      body: "os"
    };
  }
  // Get a list of OSs.
  rpc ListOperatingSystems(ListOperatingSystemsRequest) returns (ListOperatingSystemsResponse) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/operating_systems"};
  }
  // Get a specific OS.
  rpc GetOperatingSystem(GetOperatingSystemRequest) returns (resources.os.v1.OperatingSystemResource) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/operating_systems/{resourceId}"};
  }
  // Update an OS.
  rpc UpdateOperatingSystem(UpdateOperatingSystemRequest) returns (resources.os.v1.OperatingSystemResource) {
    option (google.api.http) = {
      put: "/edge-infra.orchestrator.apis/v2/operating_systems/{resourceId}"
      body: "os"
    };
  }
  // Patch an OS.
  rpc PatchOperatingSystem(PatchOperatingSystemRequest) returns (resources.os.v1.OperatingSystemResource) {
    option (google.api.http) = {
      patch: "/edge-infra.orchestrator.apis/v2/operating_systems/{resourceId}"
      body: "os"
    };
  }
  // Delete an OS.
  rpc DeleteOperatingSystem(DeleteOperatingSystemRequest) returns (DeleteOperatingSystemResponse) {
    option (google.api.http) = {delete: "/edge-infra.orchestrator.apis/v2/operating_systems/{resourceId}"};
  }
}

// Provider.
service ProviderService {
  // Create a provider.
  rpc CreateProvider(CreateProviderRequest) returns (resources.provider.v1.ProviderResource) {
    option (google.api.http) = {
      post: "/edge-infra.orchestrator.apis/v2/providers"
      body: "provider"
    };
  }
  // Get a list of providers.
  rpc ListProviders(ListProvidersRequest) returns (ListProvidersResponse) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/providers"};
  }
  // Get a specific provider.
  rpc GetProvider(GetProviderRequest) returns (resources.provider.v1.ProviderResource) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/providers/{resourceId}"};
  }
  // Delete a provider.
  rpc DeleteProvider(DeleteProviderRequest) returns (DeleteProviderResponse) {
    option (google.api.http) = {delete: "/edge-infra.orchestrator.apis/v2/providers/{resourceId}"};
  }
}

// Workload.
service WorkloadService {
  // Create a workload.
  rpc CreateWorkload(CreateWorkloadRequest) returns (resources.compute.v1.WorkloadResource) {
    option (google.api.http) = {
      post: "/edge-infra.orchestrator.apis/v2/workloads"
      body: "workload"
    };
  }
  // Get a list of workloads.
  rpc ListWorkloads(ListWorkloadsRequest) returns (ListWorkloadsResponse) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/workloads"};
  }
  // Get a specific workload.
  rpc GetWorkload(GetWorkloadRequest) returns (resources.compute.v1.WorkloadResource) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/workloads/{resourceId}"};
  }
  // Update a workload.
  rpc UpdateWorkload(UpdateWorkloadRequest) returns (resources.compute.v1.WorkloadResource) {
    option (google.api.http) = {
      put: "/edge-infra.orchestrator.apis/v2/workloads/{resourceId}"
      body: "workload"
    };
  }
  // Patch a workload.
  rpc PatchWorkload(PatchWorkloadRequest) returns (resources.compute.v1.WorkloadResource) {
    option (google.api.http) = {
      patch: "/edge-infra.orchestrator.apis/v2/workloads/{resourceId}"
      body: "workload"
    };
  }  
  // Delete a workload.
  rpc DeleteWorkload(DeleteWorkloadRequest) returns (DeleteWorkloadResponse) {
    option (google.api.http) = {delete: "/edge-infra.orchestrator.apis/v2/workloads/{resourceId}"};
  }
}

// WorkloadMember.
service WorkloadMemberService {
  // Create a workload_member.
  rpc CreateWorkloadMember(CreateWorkloadMemberRequest) returns (resources.compute.v1.WorkloadMember) {
    option (google.api.http) = {
      post: "/edge-infra.orchestrator.apis/v2/workload_members"
      body: "workload_member"
    };
  }
  // Get a list of workload_members.
  rpc ListWorkloadMembers(ListWorkloadMembersRequest) returns (ListWorkloadMembersResponse) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/workload_members"};
  }
  // Get a specific workload_member.
  rpc GetWorkloadMember(GetWorkloadMemberRequest) returns (resources.compute.v1.WorkloadMember) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/workload_members/{resourceId}"};
  }
  // Delete a workload_member.
  rpc DeleteWorkloadMember(DeleteWorkloadMemberRequest) returns (DeleteWorkloadMemberResponse) {
    option (google.api.http) = {delete: "/edge-infra.orchestrator.apis/v2/workload_members/{resourceId}"};
  }
}

// Schedules.
service ScheduleService {
  // Get a list of schedules (single/repeated).
  rpc ListSchedules(ListSchedulesRequest) returns (ListSchedulesResponse) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/schedules"};
  }

  // Create a single_schedule.
  rpc CreateSingleSchedule(CreateSingleScheduleRequest) returns (resources.schedule.v1.SingleScheduleResource) {
    option (google.api.http) = {
      post: "/edge-infra.orchestrator.apis/v2/schedules/single"
      body: "single_schedule"
    };
  }
  // Get a list of singleSchedules.
  rpc ListSingleSchedules(ListSingleSchedulesRequest) returns (ListSingleSchedulesResponse) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/schedules/single"};
  }
  // Get a specific single_schedule.
  rpc GetSingleSchedule(GetSingleScheduleRequest) returns (resources.schedule.v1.SingleScheduleResource) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/schedules/single/{resourceId}"};
  }
  // Update a single_schedule.
  rpc UpdateSingleSchedule(UpdateSingleScheduleRequest) returns (resources.schedule.v1.SingleScheduleResource) {
    option (google.api.http) = {
      put: "/edge-infra.orchestrator.apis/v2/schedules/single/{resourceId}"
      body: "single_schedule"
    };
  }
  // Patch a single_schedule.
  rpc PatchSingleSchedule(PatchSingleScheduleRequest) returns (resources.schedule.v1.SingleScheduleResource) {
    option (google.api.http) = {
      patch: "/edge-infra.orchestrator.apis/v2/schedules/single/{resourceId}"
      body: "single_schedule"
    };
  }
  // Delete a single_schedule.
  rpc DeleteSingleSchedule(DeleteSingleScheduleRequest) returns (DeleteSingleScheduleResponse) {
    option (google.api.http) = {delete: "/edge-infra.orchestrator.apis/v2/schedules/single/{resourceId}"};
  }

  // Create a repeated_schedule.
  rpc CreateRepeatedSchedule(CreateRepeatedScheduleRequest) returns (resources.schedule.v1.RepeatedScheduleResource) {
    option (google.api.http) = {
      post: "/edge-infra.orchestrator.apis/v2/schedules/repeated"
      body: "repeated_schedule"
    };
  }
  // Get a list of repeatedSchedules.
  rpc ListRepeatedSchedules(ListRepeatedSchedulesRequest) returns (ListRepeatedSchedulesResponse) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/schedules/repeated"};
  }
  // Get a specific repeated_schedule.
  rpc GetRepeatedSchedule(GetRepeatedScheduleRequest) returns (resources.schedule.v1.RepeatedScheduleResource) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/schedules/repeated/{resourceId}"};
  }
  // Update a repeated_schedule.
  rpc UpdateRepeatedSchedule(UpdateRepeatedScheduleRequest) returns (resources.schedule.v1.RepeatedScheduleResource) {
    option (google.api.http) = {
      put: "/edge-infra.orchestrator.apis/v2/schedules/repeated/{resourceId}"
      body: "repeated_schedule"
    };
  }
  // Patch a repeated_schedule.
  rpc PatchRepeatedSchedule(PatchRepeatedScheduleRequest) returns (resources.schedule.v1.RepeatedScheduleResource) {
    option (google.api.http) = {
      patch: "/edge-infra.orchestrator.apis/v2/schedules/repeated/{resourceId}"
      body: "repeated_schedule"
    };
  }
  // Delete a repeated_schedule.
  rpc DeleteRepeatedSchedule(DeleteRepeatedScheduleRequest) returns (DeleteRepeatedScheduleResponse) {
    option (google.api.http) = {delete: "/edge-infra.orchestrator.apis/v2/schedules/repeated/{resourceId}"};
  }
}

// TelemetryLogsGroup.
service TelemetryLogsGroupService {
  // Create a telemetry_logs_group.
  rpc CreateTelemetryLogsGroup(CreateTelemetryLogsGroupRequest) returns (resources.telemetry.v1.TelemetryLogsGroupResource) {
    option (google.api.http) = {
      post: "/edge-infra.orchestrator.apis/v2/telemetry/groups/logs"
      body: "telemetry_logs_group"
    };
  }
  // Get a list of telemetry_logs_groups.
  rpc ListTelemetryLogsGroups(ListTelemetryLogsGroupsRequest) returns (ListTelemetryLogsGroupsResponse) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/telemetry/groups/logs"};
  }
  // Get a specific telemetry_logs_group.
  rpc GetTelemetryLogsGroup(GetTelemetryLogsGroupRequest) returns (resources.telemetry.v1.TelemetryLogsGroupResource) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/telemetry/groups/logs/{resourceId}"};
  }

  // Delete a telemetry_logs_group.
  rpc DeleteTelemetryLogsGroup(DeleteTelemetryLogsGroupRequest) returns (DeleteTelemetryLogsGroupResponse) {
    option (google.api.http) = {delete: "/edge-infra.orchestrator.apis/v2/telemetry/groups/logs/{resourceId}"};
  }
}

// TelemetryMetricsGroup.
service TelemetryMetricsGroupService {
  // Create a telemetry_metrics_group.
  rpc CreateTelemetryMetricsGroup(CreateTelemetryMetricsGroupRequest) returns (resources.telemetry.v1.TelemetryMetricsGroupResource) {
    option (google.api.http) = {
      post: "/edge-infra.orchestrator.apis/v2/telemetry/groups/metrics"
      body: "telemetry_metrics_group"
    };
  }
  // Get a list of telemetryMetricsGroups.
  rpc ListTelemetryMetricsGroups(ListTelemetryMetricsGroupsRequest) returns (ListTelemetryMetricsGroupsResponse) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/telemetry/groups/metrics"};
  }
  // Get a specific telemetry_metrics_group.
  rpc GetTelemetryMetricsGroup(GetTelemetryMetricsGroupRequest) returns (resources.telemetry.v1.TelemetryMetricsGroupResource) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/telemetry/groups/metrics/{resourceId}"};
  }

  // Delete a telemetry_metrics_group.
  rpc DeleteTelemetryMetricsGroup(DeleteTelemetryMetricsGroupRequest) returns (DeleteTelemetryMetricsGroupResponse) {
    option (google.api.http) = {delete: "/edge-infra.orchestrator.apis/v2/telemetry/groups/metrics/{resourceId}"};
  }
}

// TelemetryLogsProfile.
service TelemetryLogsProfileService {
  // Create a telemetry_logs_profile.
  rpc CreateTelemetryLogsProfile(CreateTelemetryLogsProfileRequest) returns (resources.telemetry.v1.TelemetryLogsProfileResource) {
    option (google.api.http) = {
      post: "/edge-infra.orchestrator.apis/v2/telemetry/profiles/logs"
      body: "telemetry_logs_profile"
    };
  }
  // Get a list of telemetryLogsProfiles.
  rpc ListTelemetryLogsProfiles(ListTelemetryLogsProfilesRequest) returns (ListTelemetryLogsProfilesResponse) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/telemetry/profiles/logs"};
  }
  // Get a specific telemetry_logs_profile.
  rpc GetTelemetryLogsProfile(GetTelemetryLogsProfileRequest) returns (resources.telemetry.v1.TelemetryLogsProfileResource) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/telemetry/profiles/logs/{resourceId}"};
  }
  // Update a telemetry_logs_profile.
  rpc UpdateTelemetryLogsProfile(UpdateTelemetryLogsProfileRequest) returns (resources.telemetry.v1.TelemetryLogsProfileResource) {
    option (google.api.http) = {
      put: "/edge-infra.orchestrator.apis/v2/telemetry/profiles/logs/{resourceId}"
      body: "telemetry_logs_profile"
    };
  }
  // Patch a telemetry_logs_profile.
  rpc PatchTelemetryLogsProfile(PatchTelemetryLogsProfileRequest) returns (resources.telemetry.v1.TelemetryLogsProfileResource) {
    option (google.api.http) = {
      patch: "/edge-infra.orchestrator.apis/v2/telemetry/profiles/logs/{resourceId}"
      body: "telemetry_logs_profile"
    };
  }
  // Delete a telemetry_logs_profile.
  rpc DeleteTelemetryLogsProfile(DeleteTelemetryLogsProfileRequest) returns (DeleteTelemetryLogsProfileResponse) {
    option (google.api.http) = {delete: "/edge-infra.orchestrator.apis/v2/telemetry/profiles/logs/{resourceId}"};
  }
}

// TelemetryMetricsProfile.
service TelemetryMetricsProfileService {
  // Create a telemetry_metrics_profile.
  rpc CreateTelemetryMetricsProfile(CreateTelemetryMetricsProfileRequest) returns (resources.telemetry.v1.TelemetryMetricsProfileResource) {
    option (google.api.http) = {
      post: "/edge-infra.orchestrator.apis/v2/telemetry/profiles/metrics"
      body: "telemetry_metrics_profile"
    };
  }
  // Get a list of telemetryMetricsProfiles.
  rpc ListTelemetryMetricsProfiles(ListTelemetryMetricsProfilesRequest) returns (ListTelemetryMetricsProfilesResponse) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/telemetry/profiles/metrics"};
  }
  // Get a specific telemetry_metrics_profile.
  rpc GetTelemetryMetricsProfile(GetTelemetryMetricsProfileRequest) returns (resources.telemetry.v1.TelemetryMetricsProfileResource) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/telemetry/profiles/metrics/{resourceId}"};
  }
  // Update a telemetry_metrics_profile.
  rpc UpdateTelemetryMetricsProfile(UpdateTelemetryMetricsProfileRequest) returns (resources.telemetry.v1.TelemetryMetricsProfileResource) {
    option (google.api.http) = {
      put: "/edge-infra.orchestrator.apis/v2/telemetry/profiles/metrics/{resourceId}"
      body: "telemetry_metrics_profile"
    };
  }
  // Patch a telemetry_metrics_profile.
  rpc PatchTelemetryMetricsProfile(PatchTelemetryMetricsProfileRequest) returns (resources.telemetry.v1.TelemetryMetricsProfileResource) {
    option (google.api.http) = {
      patch: "/edge-infra.orchestrator.apis/v2/telemetry/profiles/metrics/{resourceId}"
      body: "telemetry_metrics_profile"
    };
  }
  // Delete a telemetry_metrics_profile.
  rpc DeleteTelemetryMetricsProfile(DeleteTelemetryMetricsProfileRequest) returns (DeleteTelemetryMetricsProfileResponse) {
    option (google.api.http) = {delete: "/edge-infra.orchestrator.apis/v2/telemetry/profiles/metrics/{resourceId}"};
  }
}

// LocalAccount.
service LocalAccountService {
  // Create a localAccount.
  rpc CreateLocalAccount(CreateLocalAccountRequest) returns (resources.localaccount.v1.LocalAccountResource) {
    option (google.api.http) = {
      post: "/edge-infra.orchestrator.apis/v2/localAccounts"
      body: "local_account"
    };
  }
  // Get a list of providers.
  rpc ListLocalAccounts(ListLocalAccountsRequest) returns (ListLocalAccountsResponse) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/localAccounts"};
  }
  // Get a specific provider.
  rpc GetLocalAccount(GetLocalAccountRequest) returns (resources.localaccount.v1.LocalAccountResource) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/localAccounts/{resourceId}"};
  }
  // Delete a provider.
  rpc DeleteLocalAccount(DeleteLocalAccountRequest) returns (DeleteLocalAccountResponse) {
    option (google.api.http) = {delete: "/edge-infra.orchestrator.apis/v2/localAccounts/{resourceId}"};
  }
}

// CustomConfig.
service CustomConfigService {
  // Create a custom configuration.
  rpc CreateCustomConfig(CreateCustomConfigRequest) returns (resources.customconfig.v1.CustomConfigResource) {
    option (google.api.http) = {
      post: "/edge-infra.orchestrator.apis/v2/customConfigs"
      body: "custom_config"
    };
  }
  // Get a list of custom configurations.
  rpc ListCustomConfigs(ListCustomConfigsRequest) returns (ListCustomConfigsResponse) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/customConfigs"};
  }
  // Get a specific custom configuration.
  rpc GetCustomConfig(GetCustomConfigRequest) returns (resources.customconfig.v1.CustomConfigResource) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/customConfigs/{resourceId}"};
  }
  // Delete a custom configuration.
  rpc DeleteCustomConfig(DeleteCustomConfigRequest) returns (DeleteCustomConfigResponse) {
    option (google.api.http) = {delete: "/edge-infra.orchestrator.apis/v2/customConfigs/{resourceId}"};
  }
}
/*
   ###################
   Region
   ###################
*/

// Request message for the CreateRegion method.
message CreateRegionRequest {
  // The region to create.
  resources.location.v1.RegionResource region = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the CreateRegion method.
message CreateRegionResponse {
  // The created region.
  resources.location.v1.RegionResource region = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the GetRegion method.
message GetRegionRequest {
  // Name of the requested region.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the GetRegion method.
message GetRegionResponse {
  // The requested region.
  resources.location.v1.RegionResource region = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the ListRegions method.
message ListRegionsRequest {
  // Optional comma separated list of fields to specify a sorting order.
  // See https://google.aip.dev/132 for details.
  string order_by = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9., ]+$"
    }
  ];
  // Optional filter to return only item of interest.
  // See https://google.aip.dev/160 for details.
  string filter = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9.,:/=*(){}\"' ]+$"
    }
  ];
  // Defines the amount of items to be contained in a single page.
  // Default of 20.
  uint32 page_size = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 1
      lte: 100
    }
  ];
  // Index of the first item to return. This allows skipping items.
  uint32 offset = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 0
      lte: 10000
    }
  ];

  // Flag to signal if the total amount of site in a region should be returned.
  bool show_total_sites = 5 [(google.api.field_behavior) = OPTIONAL];
}

// Response message for the ListRegions method.
message ListRegionsResponse {
  // Sorted and filtered list of regions.
  repeated resources.location.v1.RegionResource regions = 1 [(google.api.field_behavior) = REQUIRED];
  // Count of items in the entire list, regardless of pagination.
  int32 total_elements = 2 [(google.api.field_behavior) = REQUIRED];
  // Inform if there are more elements
  bool has_next = 3 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the UpdateRegion method.
message UpdateRegionRequest {
  // Name of the region region to be updated.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
  // Updated values for the region.
  resources.location.v1.RegionResource region = 2 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the PatchRegion method.
message PatchRegionRequest {
  // ID of the resource to be updated.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
  // Updated values for the region.
  resources.location.v1.RegionResource region = 2 [(google.api.field_behavior) = REQUIRED];
  // Field mask to be applied on the patch of region.
  google.protobuf.FieldMask field_mask = 3;
}

// Request message for DeleteRegion.
message DeleteRegionRequest {
  // Name of the region region to be deleted.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for DeleteRegion.
message DeleteRegionResponse {}

/*
   ###################
   Site
   ###################
*/

// Request message for the CreateSite method.
message CreateSiteRequest {
  // The site to create.
  resources.location.v1.SiteResource site = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the CreateSite method.
message CreateSiteResponse {
  // The created site.
  resources.location.v1.SiteResource site = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the GetSite method.
message GetSiteRequest {
  // Name of the requested site.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the GetSite method.
message GetSiteResponse {
  // The requested site.
  resources.location.v1.SiteResource site = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the ListSites method.
message ListSitesRequest {
  // Optional comma separated list of fields to specify a sorting order.
  // See https://google.aip.dev/132 for details.
  string order_by = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9., ]+$"
    }
  ];
  // Optional filter to return only item of interest.
  // See https://google.aip.dev/160 for details.
  string filter = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9.,:/=*(){}\"' ]+$"
    }
  ];
  // Defines the amount of items to be contained in a single page.
  // Default of 20.
  uint32 page_size = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 1
      lte: 100
    }
  ];
  // Index of the first item to return. This allows skipping items.
  uint32 offset = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 0
      lte: 10000
    }
  ];
}

// Response message for the ListSites method.
message ListSitesResponse {
  // Sorted and filtered list of sites.
  repeated resources.location.v1.SiteResource sites = 1 [(google.api.field_behavior) = REQUIRED];
  // Count of items in the entire list, regardless of pagination.
  int32 total_elements = 2 [(google.api.field_behavior) = REQUIRED];
  // Inform if there are more elements
  bool has_next = 3 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the UpdateSite method.
message UpdateSiteRequest {
  // Name of the site site to be updated.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
  // Updated values for the site.
  resources.location.v1.SiteResource site = 2 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the PatchSite method.
message PatchSiteRequest {
  // ID of the resource to be updated.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
  // Updated values for the site.
  resources.location.v1.SiteResource site = 2 [(google.api.field_behavior) = REQUIRED];
  // Field mask to be applied on the patch of site.
  google.protobuf.FieldMask field_mask = 3;
}

// Request message for DeleteSite.
message DeleteSiteRequest {
  // Name of the site site to be deleted.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for DeleteSite.
message DeleteSiteResponse {}

/*
   ###################
   Locations
   ###################
*/

// Request message for the ListLocations method.
message ListLocationsRequest {
  // Filter locations by name
  string name = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      pattern: "^$|^[a-zA-Z-_0-9./: ]+$"
      max_len: 50
    }
  ];
  // Return site locations
  bool show_sites = 2 [(google.api.field_behavior) = OPTIONAL];
  // Return region locations
  bool show_regions = 3 [(google.api.field_behavior) = OPTIONAL];
}

// Response message for the ListLocations method.
message ListLocationsResponse {
  enum ResourceKind {
    RESOURCE_KIND_UNSPECIFIED = 0;
    RESOURCE_KIND_REGION = 1;
    RESOURCE_KIND_SITE = 2;
  }

  // A node in the location tree.
  message LocationNode {
    // The associated node resource ID, generated by inventory on Create.
    string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
    // The associated resource ID, of the parent resource of this Location node.
    // In the case of a region, it could be empty or a regionId.
    // In the case of a site, it could be empty or a regionId.
    string parent_id = 2 [(google.api.field_behavior) = REQUIRED];
    // The node human readable name.
    string name = 3 [(google.api.field_behavior) = REQUIRED];
    // The node type
    ResourceKind type = 4 [(google.api.field_behavior) = REQUIRED];
  }

  // Sorted and filtered list of regions.
  repeated LocationNode nodes = 1 [(google.api.field_behavior) = REQUIRED];
  // Count of items in the entire list, regardless of pagination.
  int32 total_elements = 2 [(google.api.field_behavior) = OPTIONAL];
  // Amount of items in the returned list.
  int32 output_elements = 3 [(google.api.field_behavior) = OPTIONAL];
}

/*
   ###################
   Host
   ###################
*/

// Request the summary of Hosts resources.
message GetHostSummaryRequest {
  // Optional filter to return only item of interest.
  // See https://google.aip.dev/160 for details.
  string filter = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9.,:/=*(){}\"' ]+$"
    }
  ];
}

// Summary of the hosts status.
message GetHostSummaryResponse {
  // The total number of hosts.
  uint32 total = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The total number of hosts presenting an Error.
  uint32 error = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The total number of hosts in Running state.
  uint32 running = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The total number of hosts without a site.
  uint32 unallocated = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// Request message for the CreateHost method.
message CreateHostRequest {
  // The host to create.
  resources.compute.v1.HostResource host = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the CreateHost method.
message CreateHostResponse {
  // The created host.
  resources.compute.v1.HostResource host = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the GetHost method.
message GetHostRequest {
  // Name of the requested host.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the GetHost method.
message GetHostResponse {
  // The requested host.
  resources.compute.v1.HostResource host = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the ListHosts method.
message ListHostsRequest {
  // Optional comma separated list of fields to specify a sorting order.
  // See https://google.aip.dev/132 for details.
  string order_by = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9., ]+$"
    }
  ];
  // Optional filter to return only item of interest.
  // See https://google.aip.dev/160 for details.
  string filter = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9.,:/=*(){}\"' ]+$"
    }
  ];
  // Defines the amount of items to be contained in a single page.
  // Default of 20.
  uint32 page_size = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 1
      lte: 100
    }
  ];
  // Index of the first item to return. This allows skipping items.
  uint32 offset = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 0
      lte: 10000
    }
  ];
}

// Response message for the ListHosts method.
message ListHostsResponse {
  // Sorted and filtered list of hosts.
  repeated resources.compute.v1.HostResource hosts = 1 [(google.api.field_behavior) = REQUIRED];
  // Count of items in the entire list, regardless of pagination.
  int32 total_elements = 2 [(google.api.field_behavior) = REQUIRED];
  // Inform if there are more elements
  bool has_next = 3 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the UpdateHost method.
message UpdateHostRequest {
  // Name of the host host to be updated.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
  // Updated values for the host.
  resources.compute.v1.HostResource host = 2 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the PatchHost method.
message PatchHostRequest {
  // ID of the resource to be updated.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
  // Updated values for the host.
  resources.compute.v1.HostResource host = 2 [(google.api.field_behavior) = REQUIRED];
  // Field mask to be applied on the patch of host.
  google.protobuf.FieldMask field_mask = 3;
}

// Request message for DeleteHost.
message DeleteHostRequest {
  // Name of the host host to be deleted.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Reponse message for DeleteHost.
message DeleteHostResponse {}

// Request to invalidate/untrust a Host.
message InvalidateHostRequest {
  string resourceId = 1 [(buf.validate.field).string = {
    pattern: "^host-[0-9a-f]{8}$"
    max_bytes: 13
  }]; // Host resource ID

  string note = 2 [(buf.validate.field).string = {
    min_len: 1
    max_len: 512
    pattern: "^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()\" ]+$"
  }]; // user-provided reason for change or a freeform field
}

// Response message for InvalidateHost.
message InvalidateHostResponse {}

// Message to register a Host.
message HostRegister {
  // The host name.
  string name = 3 [(buf.validate.field).string = {
    pattern: "^$|^[a-zA-Z-_0-9./: ]+$"
    max_len: 20
  }];

  // The host serial number.
  string serial_number = 16 [(buf.validate.field).string = {pattern: "^([A-Za-z0-9]{5,20})?$"}];
  // The host UUID.
  string uuid = 17 [
    (buf.validate.field).string = {
      min_len: 0
      max_len: 36
      pattern: "^$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
    }
  ];

  // Flag to signal to automatically onboard the host.
  bool auto_onboard = 18;
  // Flag to signal to enable vPRO on the host.
  bool enable_vpro = 19;
}

// Request to register a Host.
message RegisterHostRequest {
  string resourceId = 1 [(buf.validate.field).string = {
    pattern: "^host-[0-9a-f]{8}$"
    max_bytes: 13
  }];

  HostRegister host = 2 [(google.api.field_behavior) = REQUIRED];
}

// Request to onboard a Host.
message OnboardHostRequest {
  string resourceId = 1 [(buf.validate.field).string = {
    pattern: "^host-[0-9a-f]{8}$"
    max_bytes: 13
  }]; // Host resource ID
}

// Response of a Host Register request.
message OnboardHostResponse {}

/*
   ###################
   Instance
   ###################
*/

// Request message for the CreateInstance method.
message CreateInstanceRequest {
  // The instance to create.
  resources.compute.v1.InstanceResource instance = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the CreateInstance method.
message CreateInstanceResponse {
  // The created instance.
  resources.compute.v1.InstanceResource instance = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the GetInstance method.
message GetInstanceRequest {
  // Name of the requested instance.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the GetInstance method.
message GetInstanceResponse {
  // The requested instance.
  resources.compute.v1.InstanceResource instance = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the ListInstances method.
message ListInstancesRequest {
  // Optional comma separated list of fields to specify a sorting order.
  // See https://google.aip.dev/132 for details.
  string order_by = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9., ]+$"
    }
  ];
  // Optional filter to return only item of interest.
  // See https://google.aip.dev/160 for details.
  string filter = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9.,:/=*(){}\"' ]+$"
    }
  ];
  // Defines the amount of items to be contained in a single page.
  // Default of 20.
  uint32 page_size = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 1
      lte: 100
    }
  ];
  // Index of the first item to return. This allows skipping items.
  uint32 offset = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 0
      lte: 10000
    }
  ];
}

// Response message for the ListInstances method.
message ListInstancesResponse {
  // Sorted and filtered list of instances.
  repeated resources.compute.v1.InstanceResource instances = 1 [(google.api.field_behavior) = REQUIRED];
  // Count of items in the entire list, regardless of pagination.
  int32 total_elements = 2 [(google.api.field_behavior) = REQUIRED];
  // Inform if there are more elements
  bool has_next = 3 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the UpdateInstance method.
message UpdateInstanceRequest {
  // ID of the resource to be updated.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
  // Updated values for the instance.
  resources.compute.v1.InstanceResource instance = 2 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the PatchInstance method.
message PatchInstanceRequest {
  // ID of the resource to be updated.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
  // Updated values for the instance.
  resources.compute.v1.InstanceResource instance = 2 [(google.api.field_behavior) = REQUIRED];
  // Field mask to be applied on the patch of instance.
  google.protobuf.FieldMask field_mask = 3;
}

// Request message for DeleteInstance.
message DeleteInstanceRequest {
  // Name of the instance instance to be deleted.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for DeleteInstance.
message DeleteInstanceResponse {}

// Request message for Invalidate Instance.
message InvalidateInstanceRequest {
  string resourceId = 1 [(buf.validate.field).string = {
    pattern: "^inst-[0-9a-f]{8}$"
    max_bytes: 13
  }]; // Instance resource ID
}

// Response message for Invalidate Instance.
message InvalidateInstanceResponse {}

/*
   ###################
   OperatingSystem
   ###################
*/

// Request message for the CreateOperatingSystem method.
message CreateOperatingSystemRequest {
  // The os to create.
  resources.os.v1.OperatingSystemResource os = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the CreateOperatingSystem method.
message CreateOperatingSystemResponse {
  // The created os.
  resources.os.v1.OperatingSystemResource os = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the GetOperatingSystem method.
message GetOperatingSystemRequest {
  // Name of the requested os.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the GetOperatingSystem method.
message GetOperatingSystemResponse {
  // The requested os.
  resources.os.v1.OperatingSystemResource os = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the ListOperatingSystems method.
message ListOperatingSystemsRequest {
  // Optional comma separated list of fields to specify a sorting order.
  // See https://google.aip.dev/132 for details.
  string order_by = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9., ]+$"
    }
  ];
  // Optional filter to return only item of interest.
  // See https://google.aip.dev/160 for details.
  string filter = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9.,:/=*(){}\"' ]+$"
    }
  ];
  // Defines the amount of items to be contained in a single page.
  // Default of 20.
  uint32 page_size = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 1
      lte: 100
    }
  ];
  // Index of the first item to return. This allows skipping items.
  uint32 offset = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 0
      lte: 10000
    }
  ];
}

// Response message for the ListOperatingSystems method.
message ListOperatingSystemsResponse {
  // Sorted and filtered list of oss.
  repeated resources.os.v1.OperatingSystemResource Operating_system_resources = 1 [(google.api.field_behavior) = REQUIRED];
  // Count of items in the entire list, regardless of pagination.
  int32 total_elements = 2 [(google.api.field_behavior) = REQUIRED];
  // Inform if there are more elements
  bool has_next = 3 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the UpdateOperatingSystem method.
message UpdateOperatingSystemRequest {
  // Name of the os os to be updated.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
  // Updated values for the os.
  resources.os.v1.OperatingSystemResource os = 2 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the PatchOperatingSystem method.
message PatchOperatingSystemRequest {
  // ID of the resource to be updated.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
  // Updated values for the os.
  resources.os.v1.OperatingSystemResource os = 2 [(google.api.field_behavior) = REQUIRED];
  // Field mask to be applied on the patch of os.
  google.protobuf.FieldMask field_mask = 3;
}

// Request message for DeleteOperatingSystem.
message DeleteOperatingSystemRequest {
  // Name of the os os to be deleted.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for DeleteOperatingSystem.
message DeleteOperatingSystemResponse {}

/*
   ###################
   Provider
   ###################
*/

// Request message for the CreateProvider method.
message CreateProviderRequest {
  // The provider to create.
  resources.provider.v1.ProviderResource provider = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the CreateProvider method.
message CreateProviderResponse {
  // The created provider.
  resources.provider.v1.ProviderResource provider = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the GetProvider method.
message GetProviderRequest {
  // Name of the requested provider.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the GetProvider method.
message GetProviderResponse {
  // The requested provider.
  resources.provider.v1.ProviderResource provider = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the ListProviders method.
message ListProvidersRequest {
  // Optional comma separated list of fields to specify a sorting order.
  // See https://google.aip.dev/132 for details.
  string order_by = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9., ]+$"
    }
  ];
  // Optional filter to return only item of interest.
  // See https://google.aip.dev/160 for details.
  string filter = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9.,:/=*(){}\"' ]+$"
    }
  ];
  // Defines the amount of items to be contained in a single page.
  // Default of 20.
  uint32 page_size = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 1
      lte: 100
    }
  ];
  // Index of the first item to return. This allows skipping items.
  uint32 offset = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 0
      lte: 10000
    }
  ];
}

// Response message for the ListProviders method.
message ListProvidersResponse {
  // Sorted and filtered list of providers.
  repeated resources.provider.v1.ProviderResource providers = 1 [(google.api.field_behavior) = REQUIRED];
  // Count of items in the entire list, regardless of pagination.
  int32 total_elements = 2 [(google.api.field_behavior) = REQUIRED];
  // Inform if there are more elements
  bool has_next = 3 [(google.api.field_behavior) = REQUIRED];
}

// Request message for DeleteProvider.
message DeleteProviderRequest {
  // Name of the provider provider to be deleted.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for DeleteProvider.
message DeleteProviderResponse {}

/*
   ###################
   Workload
   ###################
*/

// Request message for the CreateWorkload method.
message CreateWorkloadRequest {
  // The workload to create.
  resources.compute.v1.WorkloadResource workload = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the CreateWorkload method.
message CreateWorkloadResponse {
  // The created workload.
  resources.compute.v1.WorkloadResource workload = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the GetWorkload method.
message GetWorkloadRequest {
  // Name of the requested workload.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the GetWorkload method.
message GetWorkloadResponse {
  // The requested workload.
  resources.compute.v1.WorkloadResource workload = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the ListWorkloads method.
message ListWorkloadsRequest {
  // Optional comma separated list of fields to specify a sorting order.
  // See https://google.aip.dev/132 for details.
  string order_by = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9., ]+$"
    }
  ];
  // Optional filter to return only item of interest.
  // See https://google.aip.dev/160 for details.
  string filter = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9.,:/=*(){}\"' ]+$"
    }
  ];
  // Defines the amount of items to be contained in a single page.
  // Default of 20.
  uint32 page_size = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 1
      lte: 100
    }
  ];
  // Index of the first item to return. This allows skipping items.
  uint32 offset = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 0
      lte: 10000
    }
  ];
}

// Response message for the ListWorkloads method.
message ListWorkloadsResponse {
  // Sorted and filtered list of workloads.
  repeated resources.compute.v1.WorkloadResource workloads = 1 [(google.api.field_behavior) = REQUIRED];
  // Count of items in the entire list, regardless of pagination.
  int32 total_elements = 2 [(google.api.field_behavior) = REQUIRED];
  // Inform if there are more elements
  bool has_next = 3 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the UpdateWorkload method.
message UpdateWorkloadRequest {
  // Name of the workload workload to be updated.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
  // Updated values for the workload.
  resources.compute.v1.WorkloadResource workload = 2 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the PatchWorkload method.
message PatchWorkloadRequest {
  // ID of the resource to be updated.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
  // Updated values for the workload.
  resources.compute.v1.WorkloadResource workload = 2 [(google.api.field_behavior) = REQUIRED];
  // Field mask to be applied on the patch of workload.
  google.protobuf.FieldMask field_mask = 3;
}

// Request message for DeleteWorkload.
message DeleteWorkloadRequest {
  // Name of the workload workload to be deleted.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for DeleteWorkload.
message DeleteWorkloadResponse {}

/*
   ###################
   WorkloadMember
   ###################
*/

// Request message for the CreateWorkloadMember method.
message CreateWorkloadMemberRequest {
  // The workload_member to create.
  resources.compute.v1.WorkloadMember workload_member = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the CreateWorkloadMember method.
message CreateWorkloadMemberResponse {
  // The created workload_member.
  resources.compute.v1.WorkloadMember workload_member = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the GetWorkloadMember method.
message GetWorkloadMemberRequest {
  // Name of the requested workload_member.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the GetWorkloadMember method.
message GetWorkloadMemberResponse {
  // The requested workload_member.
  resources.compute.v1.WorkloadMember workload_member = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the ListWorkloadMembers method.
message ListWorkloadMembersRequest {
  // Optional comma separated list of fields to specify a sorting order.
  // See https://google.aip.dev/132 for details.
  string order_by = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9., ]+$"
    }
  ];
  // Optional filter to return only item of interest.
  // See https://google.aip.dev/160 for details.
  string filter = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9.,:/=*(){}\"' ]+$"
    }
  ];
  // Defines the amount of items to be contained in a single page.
  // Default of 20.
  uint32 page_size = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 1
      lte: 100
    }
  ];
  // Index of the first item to return. This allows skipping items.
  uint32 offset = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 0
      lte: 10000
    }
  ];
}

// Response message for the ListWorkloadMembers method.
message ListWorkloadMembersResponse {
  // Sorted and filtered list of workload_members.
  repeated resources.compute.v1.WorkloadMember workload_members = 1 [(google.api.field_behavior) = REQUIRED];
  // Count of items in the entire list, regardless of pagination.
  int32 total_elements = 2 [(google.api.field_behavior) = REQUIRED];
  // Inform if there are more elements
  bool has_next = 3 [(google.api.field_behavior) = REQUIRED];
}

// Request message for DeleteWorkloadMember.
message DeleteWorkloadMemberRequest {
  // Name of the workload_member workload_member to be deleted.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for DeleteWorkloadMember.
message DeleteWorkloadMemberResponse {}

/*
   ###################
   Schedules
   ###################
*/

// Request message for the ListSchedules method.
message ListSchedulesRequest {
  // Defines the amount of items to be contained in a single page.
  // Default of 20.
  uint32 page_size = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 1
      lte: 100
    }
  ];
  // Index of the first item to return. This allows skipping items.
  uint32 offset = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 0
      lte: 10000
    }
  ];
  // The host ID target of the schedules. If not specified, returns all schedules
  // (given the other query params). If specified, returns the schedules that have
  // the specified host ID applied to them, i.e., target including the inherited ones
  // (parent site if not null). If null, returns all the schedules without a host ID as target.
  string host_id = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      pattern: "^host-[0-9a-f]{8}$"
      max_bytes: 13
    }
  ];
  // The site ID target of the schedules. If not specified, returns all schedules
  // (given the other query params). If specified, returns the schedules that have
  // the specified site ID applied to them, i.e., target including the inherited ones.
  // If null, returns all the schedules without a site ID as target
  string site_id = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      pattern: "^site-[0-9a-f]{8}$"
      max_bytes: 13
    }
  ];
  // The region ID target of the schedules. If not specified,
  // returns all schedules (given the other query params).
  // If specified, returns the schedules that have the specified region ID applied to them,
  // i.e., target including the inherited ones (parent region if not null).
  // If null, returns all the schedules without a region ID as target.
  string region_id = 5 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      pattern: "^region-[0-9a-f]{8}$"
      max_bytes: 15
    }
  ];
  // Filter based on the timestamp, expected to be UNIX epoch UTC timestamp in seconds.
  string unix_epoch = 6 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {pattern: "^[0-9]+$"}
  ];
}

// Response message for the ListSchedulesResponse method.
message ListSchedulesResponse {
  // Sorted and filtered list of single_schedules.
  repeated resources.schedule.v1.SingleScheduleResource single_schedules = 1 [(google.api.field_behavior) = REQUIRED];
  // Sorted and filtered list of repeated_schedules.
  repeated resources.schedule.v1.RepeatedScheduleResource repeated_schedules = 2 [(google.api.field_behavior) = REQUIRED];
  // Count of items in the entire list, regardless of pagination.
  int32 total_elements = 3 [(google.api.field_behavior) = REQUIRED];
  // Inform if there are more elements
  bool has_next = 4 [(google.api.field_behavior) = REQUIRED];
}

/*
   ###################
   SingleSchedule
   ###################
*/

// Request message for the CreateSingleSchedule method.
message CreateSingleScheduleRequest {
  // The single_schedule to create.
  resources.schedule.v1.SingleScheduleResource single_schedule = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the CreateSingleSchedule method.
message CreateSingleScheduleResponse {
  // The created single_schedule.
  resources.schedule.v1.SingleScheduleResource single_schedule = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the GetSingleSchedule method.
message GetSingleScheduleRequest {
  // Name of the requested single_schedule.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the GetSingleSchedule method.
message GetSingleScheduleResponse {
  // The requested single_schedule.
  resources.schedule.v1.SingleScheduleResource single_schedule = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the ListSingleSchedules method.
message ListSingleSchedulesRequest {
  // Defines the amount of items to be contained in a single page.
  // Default of 20.
  uint32 page_size = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 1
      lte: 100
    }
  ];
  // Index of the first item to return. This allows skipping items.
  uint32 offset = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 0
      lte: 10000
    }
  ];
  // The host ID target of the schedules. If not specified, returns all schedules
  // (given the other query params). If specified, returns the schedules that have
  // the specified host ID applied to them, i.e., target including the inherited ones
  // (parent site if not null). If null, returns all the schedules without a host ID as target.
  string host_id = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      pattern: "^host-[0-9a-f]{8}$"
      max_bytes: 13
    }
  ];
  // The site ID target of the schedules. If not specified, returns all schedules
  // (given the other query params). If specified, returns the schedules that have
  // the specified site ID applied to them, i.e., target including the inherited ones.
  // If null, returns all the schedules without a site ID as target
  string site_id = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      pattern: "^site-[0-9a-f]{8}$"
      max_bytes: 13
    }
  ];
  // The region ID target of the schedules. If not specified,
  // returns all schedules (given the other query params).
  // If specified, returns the schedules that have the specified region ID applied to them,
  // i.e., target including the inherited ones (parent region if not null).
  // If null, returns all the schedules without a region ID as target.
  string region_id = 5 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      pattern: "^region-[0-9a-f]{8}$"
      max_bytes: 15
    }
  ];
  // Filter based on the timestamp, expected to be UNIX epoch UTC timestamp in seconds.
  string unix_epoch = 6 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {pattern: "^[0-9]+$"}
  ];
}

// Response message for the ListSingleSchedules method.
message ListSingleSchedulesResponse {
  // Sorted and filtered list of single_schedules.
  repeated resources.schedule.v1.SingleScheduleResource single_schedules = 1 [(google.api.field_behavior) = REQUIRED];
  // Count of items in the entire list, regardless of pagination.
  int32 total_elements = 2 [(google.api.field_behavior) = REQUIRED];
  // Inform if there are more elements
  bool has_next = 3 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the UpdateSingleSchedule method.
message UpdateSingleScheduleRequest {
  // Name of the single_schedule single_schedule to be updated.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
  // Updated values for the single_schedule.
  resources.schedule.v1.SingleScheduleResource single_schedule = 2 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the PatchSingleSchedule method.
message PatchSingleScheduleRequest {
  // ID of the resource to be updated.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
  // Updated values for the single_schedule.
  resources.schedule.v1.SingleScheduleResource single_schedule = 2 [(google.api.field_behavior) = REQUIRED];
  // Field mask to be applied on the patch of single_schedule.
  google.protobuf.FieldMask field_mask = 3;
}

// Request message for DeleteSingleSchedule.
message DeleteSingleScheduleRequest {
  // Name of the single_schedule single_schedule to be deleted.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for DeleteSingleSchedule.
message DeleteSingleScheduleResponse {}

/*
   ###################
   RepeatedSchedule
   ###################
*/

// Request message for the CreateRepeatedSchedule method.
message CreateRepeatedScheduleRequest {
  // The repeated_schedule to create.
  resources.schedule.v1.RepeatedScheduleResource repeated_schedule = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the CreateRepeatedSchedule method.
message CreateRepeatedScheduleResponse {
  // The created repeated_schedule.
  resources.schedule.v1.RepeatedScheduleResource repeated_schedule = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the GetRepeatedSchedule method.
message GetRepeatedScheduleRequest {
  // Name of the requested repeated_schedule.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the GetRepeatedSchedule method.
message GetRepeatedScheduleResponse {
  // The requested repeated_schedule.
  resources.schedule.v1.RepeatedScheduleResource repeated_schedule = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the ListRepeatedSchedules method.
message ListRepeatedSchedulesRequest {
  // Defines the amount of items to be contained in a single page.
  // Default of 20.
  uint32 page_size = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 1
      lte: 100
    }
  ];
  // Index of the first item to return. This allows skipping items.
  uint32 offset = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 0
      lte: 10000
    }
  ];
  // The host ID target of the schedules. If not specified, returns all schedules
  // (given the other query params). If specified, returns the schedules that have
  // the specified host ID applied to them, i.e., target including the inherited ones
  // (parent site if not null). If null, returns all the schedules without a host ID as target.
  string host_id = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      pattern: "^host-[0-9a-f]{8}$"
      max_bytes: 13
    }
  ];
  // The site ID target of the schedules. If not specified, returns all schedules
  // (given the other query params). If specified, returns the schedules that have
  // the specified site ID applied to them, i.e., target including the inherited ones.
  // If null, returns all the schedules without a site ID as target
  string site_id = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      pattern: "^site-[0-9a-f]{8}$"
      max_bytes: 13
    }
  ];
  // The region ID target of the schedules. If not specified,
  // returns all schedules (given the other query params).
  // If specified, returns the schedules that have the specified region ID applied to them,
  // i.e., target including the inherited ones (parent region if not null).
  // If null, returns all the schedules without a region ID as target.
  string region_id = 5 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      pattern: "^region-[0-9a-f]{8}$"
      max_bytes: 15
    }
  ];
  // Filter based on the timestamp, expected to be UNIX epoch UTC timestamp in seconds.
  string unix_epoch = 6 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {pattern: "^[0-9]+$"}
  ];
}

// Response message for the ListRepeatedSchedules method.
message ListRepeatedSchedulesResponse {
  // Sorted and filtered list of repeated_schedules.
  repeated resources.schedule.v1.RepeatedScheduleResource repeated_schedules = 1 [(google.api.field_behavior) = REQUIRED];
  // Count of items in the entire list, regardless of pagination.
  int32 total_elements = 2 [(google.api.field_behavior) = REQUIRED];
  // Inform if there are more elements
  bool has_next = 3 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the UpdateRepeatedSchedule method.
message UpdateRepeatedScheduleRequest {
  // Name of the repeated_schedule repeated_schedule to be updated.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
  // Updated values for the repeated_schedule.
  resources.schedule.v1.RepeatedScheduleResource repeated_schedule = 2 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the PatchRepeatedSchedule method.
message PatchRepeatedScheduleRequest {
  // ID of the resource to be updated.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
  // Updated values for the repeated_schedule.
  resources.schedule.v1.RepeatedScheduleResource repeated_schedule = 2 [(google.api.field_behavior) = REQUIRED];
  // Field mask to be applied on the patch of repeated_schedule.
  google.protobuf.FieldMask field_mask = 3;
}

// Request message for DeleteRepeatedSchedule.
message DeleteRepeatedScheduleRequest {
  // Name of the repeated_schedule repeated_schedule to be deleted.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for DeleteRepeatedSchedule.
message DeleteRepeatedScheduleResponse {}

/*
   ###################
   TelemetryLogsGroup
   ###################
*/

// Request message for the CreateTelemetryLogsGroup method.
message CreateTelemetryLogsGroupRequest {
  // The telemetry_logs_group to create.
  resources.telemetry.v1.TelemetryLogsGroupResource telemetry_logs_group = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the CreateTelemetryLogsGroup method.
message CreateTelemetryLogsGroupResponse {
  // The created telemetry_logs_group.
  resources.telemetry.v1.TelemetryLogsGroupResource telemetry_logs_group = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the GetTelemetryLogsGroup method.
message GetTelemetryLogsGroupRequest {
  // Name of the requested telemetry_logs_group.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the GetTelemetryLogsGroup method.
message GetTelemetryLogsGroupResponse {
  // The requested telemetry_logs_group.
  resources.telemetry.v1.TelemetryLogsGroupResource telemetry_logs_group = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the ListTelemetryLogsGroups method.
message ListTelemetryLogsGroupsRequest {
  // Defines the amount of items to be contained in a single page.
  // Default of 20.
  uint32 page_size = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 1
      lte: 100
    }
  ];
  // Index of the first item to return. This allows skipping items.
  uint32 offset = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 0
      lte: 10000
    }
  ];
  // Optional comma separated list of fields to specify a sorting order.
  // See https://google.aip.dev/132 for details.
  string order_by = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9., ]+$"
    }
  ];
}

// Response message for the ListTelemetryLogsGroups method.
message ListTelemetryLogsGroupsResponse {
  // Sorted and filtered list of telemetry_logs_groups.
  repeated resources.telemetry.v1.TelemetryLogsGroupResource telemetry_logs_groups = 1 [(google.api.field_behavior) = REQUIRED];
  // Count of items in the entire list, regardless of pagination.
  int32 total_elements = 2 [(google.api.field_behavior) = REQUIRED];
  // Inform if there are more elements
  bool has_next = 3 [(google.api.field_behavior) = REQUIRED];
}

// Request message for DeleteTelemetryLogsGroup.
message DeleteTelemetryLogsGroupRequest {
  // Name of the telemetry_logs_group telemetry_logs_group to be deleted.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for DeleteTelemetryLogsGroup.
message DeleteTelemetryLogsGroupResponse {}

/*
   ###################
   TelemetryMetricsGroup
   ###################
*/

// Request message for the CreateTelemetryMetricsGroup method.
message CreateTelemetryMetricsGroupRequest {
  // The telemetry_metrics_group to create.
  resources.telemetry.v1.TelemetryMetricsGroupResource telemetry_metrics_group = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the CreateTelemetryMetricsGroup method.
message CreateTelemetryMetricsGroupResponse {
  // The created telemetry_metrics_group.
  resources.telemetry.v1.TelemetryMetricsGroupResource telemetry_metrics_group = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the GetTelemetryMetricsGroup method.
message GetTelemetryMetricsGroupRequest {
  // Name of the requested telemetry_metrics_group.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the GetTelemetryMetricsGroup method.
message GetTelemetryMetricsGroupResponse {
  // The requested telemetry_metrics_group.
  resources.telemetry.v1.TelemetryMetricsGroupResource telemetry_metrics_group = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the ListTelemetryMetricsGroups method.
message ListTelemetryMetricsGroupsRequest {
  // Defines the amount of items to be contained in a single page.
  // Default of 20.
  uint32 page_size = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 1
      lte: 100
    }
  ];
  // Index of the first item to return. This allows skipping items.
  uint32 offset = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 0
      lte: 10000
    }
  ];
  // Optional comma separated list of fields to specify a sorting order.
  // See https://google.aip.dev/132 for details.
  string order_by = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9., ]+$"
    }
  ];
}

// Response message for the ListTelemetryMetricsGroups method.
message ListTelemetryMetricsGroupsResponse {
  // Sorted and filtered list of telemetry_metrics_groups.
  repeated resources.telemetry.v1.TelemetryMetricsGroupResource telemetry_metrics_groups = 1 [(google.api.field_behavior) = REQUIRED];
  // Count of items in the entire list, regardless of pagination.
  int32 total_elements = 2 [(google.api.field_behavior) = REQUIRED];
  // Inform if there are more elements
  bool has_next = 3 [(google.api.field_behavior) = REQUIRED];
}

// Request message for DeleteTelemetryMetricsGroup.
message DeleteTelemetryMetricsGroupRequest {
  // Name of the telemetry_metrics_group telemetry_metrics_group to be deleted.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for DeleteTelemetryMetricsGroup.
message DeleteTelemetryMetricsGroupResponse {}

/*
   ###################
   TelemetryLogsProfile
   ###################
*/

// Request message for the CreateTelemetryLogsProfile method.
message CreateTelemetryLogsProfileRequest {
  // The telemetry_logs_profile to create.
  resources.telemetry.v1.TelemetryLogsProfileResource telemetry_logs_profile = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the CreateTelemetryLogsProfile method.
message CreateTelemetryLogsProfileResponse {
  // The created telemetry_logs_profile.
  resources.telemetry.v1.TelemetryLogsProfileResource telemetry_logs_profile = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the GetTelemetryLogsProfile method.
message GetTelemetryLogsProfileRequest {
  // Name of the requested telemetry_logs_profile.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the GetTelemetryLogsProfile method.
message GetTelemetryLogsProfileResponse {
  // The requested telemetry_logs_profile.
  resources.telemetry.v1.TelemetryLogsProfileResource telemetry_logs_profile = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the ListTelemetryLogsProfiles method.
message ListTelemetryLogsProfilesRequest {
  // Defines the amount of items to be contained in a single page.
  // Default of 20.
  uint32 page_size = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 1
      lte: 100
    }
  ];
  // Index of the first item to return. This allows skipping items.
  uint32 offset = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 0
      lte: 10000
    }
  ];
  // Optional comma separated list of fields to specify a sorting order.
  // See https://google.aip.dev/132 for details.
  string order_by = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9., ]+$"
    }
  ];
  // Returns only the telemetry profiles that are assigned with the given instance identifier.
  string instance_id = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      pattern: "^inst-[0-9a-f]{8}$"
      max_bytes: 13
    }
  ];
  // Returns only the telemetry profiles that are assigned with the given siteID.
  string site_id = 5 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      pattern: "^site-[0-9a-f]{8}$"
      max_bytes: 13
    }
  ];
  // Returns only the telemetry profiles that are assigned with the given regionID.
  string region_id = 6 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      pattern: "^region-[0-9a-f]{8}$"
      max_bytes: 15
    }
  ];
  // Indicates if listed telemetry profiles should be extended with telemetry
  // profiles rendered from hierarchy. This flag is only used along with one
  // of siteId, regionId or instanceId. If siteId, regionId or instanceId are
  // not set, this flag is ignored.
  bool show_inherited = 7 [(google.api.field_behavior) = OPTIONAL];
}

// Response message for the ListTelemetryLogsProfiles method.
message ListTelemetryLogsProfilesResponse {
  // Sorted and filtered list of telemetry_logs_profiles.
  repeated resources.telemetry.v1.TelemetryLogsProfileResource telemetry_logs_profiles = 1 [(google.api.field_behavior) = REQUIRED];
  // Count of items in the entire list, regardless of pagination.
  int32 total_elements = 2 [(google.api.field_behavior) = REQUIRED];
  // Inform if there are more elements
  bool has_next = 3 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the UpdateTelemetryLogsProfile method.
message UpdateTelemetryLogsProfileRequest {
  // Name of the telemetry_logs_profile telemetry_logs_profile to be updated.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
  // Updated values for the telemetry_logs_profile.
  resources.telemetry.v1.TelemetryLogsProfileResource telemetry_logs_profile = 2 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the PatchTelemetryLogs method.
message PatchTelemetryLogsProfileRequest {
  // ID of the resource to be updated.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
  // Updated values for the telemetry_logs_profile.
  resources.telemetry.v1.TelemetryLogsProfileResource telemetry_logs_profile = 2 [(google.api.field_behavior) = REQUIRED];
  // Field mask to be applied on the patch of telemetry_logs_profile.
  google.protobuf.FieldMask field_mask = 3;
}

// Request message for DeleteTelemetryLogsProfile.
message DeleteTelemetryLogsProfileRequest {
  // Name of the telemetry_logs_profile telemetry_logs_profile to be deleted.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for DeleteTelemetryLogsProfile.
message DeleteTelemetryLogsProfileResponse {}

/*
   ###################
   TelemetryMetricsProfile
   ###################
*/

// Request message for the CreateTelemetryMetricsProfile method.
message CreateTelemetryMetricsProfileRequest {
  // The telemetry_metrics_profile to create.
  resources.telemetry.v1.TelemetryMetricsProfileResource telemetry_metrics_profile = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the CreateTelemetryMetricsProfile method.
message CreateTelemetryMetricsProfileResponse {
  // The created telemetry_metrics_profile.
  resources.telemetry.v1.TelemetryMetricsProfileResource telemetry_metrics_profile = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the GetTelemetryMetricsProfile method.
message GetTelemetryMetricsProfileRequest {
  // Name of the requested telemetry_metrics_profile.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the GetTelemetryMetricsProfile method.
message GetTelemetryMetricsProfileResponse {
  // The requested telemetry_metrics_profile.
  resources.telemetry.v1.TelemetryMetricsProfileResource telemetry_metrics_profile = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the ListTelemetryMetricsProfiles method.
message ListTelemetryMetricsProfilesRequest {
  // Defines the amount of items to be contained in a single page.
  // Default of 20.
  uint32 page_size = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 1
      lte: 100
    }
  ];
  // Index of the first item to return. This allows skipping items.
  uint32 offset = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 0
      lte: 10000
    }
  ];
  // Optional comma separated list of fields to specify a sorting order.
  // See https://google.aip.dev/132 for details.
  string order_by = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9., ]+$"
    }
  ];
  // Returns only the telemetry profiles that are assigned with the given instance identifier.
  string instance_id = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      pattern: "^inst-[0-9a-f]{8}$"
      max_bytes: 13
    }
  ];
  // Returns only the telemetry profiles that are assigned with the given siteID.
  string site_id = 5 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      pattern: "^site-[0-9a-f]{8}$"
      max_bytes: 13
    }
  ];
  // Returns only the telemetry profiles that are assigned with the given regionID.
  string region_id = 6 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      pattern: "^region-[0-9a-f]{8}$"
      max_bytes: 15
    }
  ];
  // Indicates if listed telemetry profiles should be extended with telemetry
  // profiles rendered from hierarchy. This flag is only used along with one
  // of siteId, regionId or instanceId. If siteId, regionId or instanceId are
  // not set, this flag is ignored.
  bool show_inherited = 7 [(google.api.field_behavior) = OPTIONAL];
}

// Response message for the ListTelemetryMetricsProfiles method.
message ListTelemetryMetricsProfilesResponse {
  // Sorted and filtered list of telemetry_metrics_profiles.
  repeated resources.telemetry.v1.TelemetryMetricsProfileResource telemetry_metrics_profiles = 1 [(google.api.field_behavior) = REQUIRED];
  // Count of items in the entire list, regardless of pagination.
  int32 total_elements = 2 [(google.api.field_behavior) = REQUIRED];
  // Inform if there are more elements
  bool has_next = 3 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the UpdateTelemetryMetricsProfile method.
message UpdateTelemetryMetricsProfileRequest {
  // Name of the telemetry_metrics_profile telemetry_metrics_profile to be updated.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
  // Updated values for the telemetry_metrics_profile.
  resources.telemetry.v1.TelemetryMetricsProfileResource telemetry_metrics_profile = 2 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the PatchTelemetryMetricsProfile method.
message PatchTelemetryMetricsProfileRequest {
  // ID of the resource to be updated.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
  // Updated values for the telemetry_metrics_profile.
  resources.telemetry.v1.TelemetryMetricsProfileResource telemetry_metrics_profile = 2 [(google.api.field_behavior) = REQUIRED];
  // Field mask to be applied on the patch of telemetry_metrics_profile.
  google.protobuf.FieldMask field_mask = 3;
}

// Request message for DeleteTelemetryMetricsProfile.
message DeleteTelemetryMetricsProfileRequest {
  // Name of the telemetry_metrics_profile telemetry_metrics_profile to be deleted.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for DeleteTelemetryMetricsProfile.
message DeleteTelemetryMetricsProfileResponse {}



/*
   ###################
   LocalAccount
   ###################
*/

// Request message for the CreateLocalAccount method.
message CreateLocalAccountRequest {
  // The localaccount to create.
  resources.localaccount.v1.LocalAccountResource local_account = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the CreateLocalAccount method.
message CreateLocalAccountResponse {
  // The created localaccount.
  resources.localaccount.v1.LocalAccountResource local_account = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the GetLocalAccount method.
message GetLocalAccountRequest {
  // Name of the requested localaccount.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the GetLocalAccount method.
message GetLocalAccountResponse {
  // The requested localaccount.
  resources.localaccount.v1.LocalAccountResource local_account = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the ListLocalAccounts method.
message ListLocalAccountsRequest {
  // Optional comma separated list of fields to specify a sorting order.
  // See https://google.aip.dev/132 for details.
  string order_by = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9., ]+$"
    }
  ];
  // Optional filter to return only item of interest.
  // See https://google.aip.dev/160 for details.
  string filter = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9.,:/=*(){}\"' ]+$"
    }
  ];
  // Defines the amount of items to be contained in a single page.
  // Default of 20.
  uint32 page_size = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 1
      lte: 100
    }
  ];
  // Index of the first item to return. This allows skipping items.
  uint32 offset = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 0
      lte: 10000
    }
  ];
}

// Response message for the ListLocalAccounts method.
message ListLocalAccountsResponse {
  // Sorted and filtered list of localaccounts.
  repeated resources.localaccount.v1.LocalAccountResource local_accounts = 1 [(google.api.field_behavior) = REQUIRED];
  // Count of items in the entire list, regardless of pagination.
  int32 total_elements = 2 [(google.api.field_behavior) = REQUIRED];
  // Inform if there are more elements
  bool has_next = 3 [(google.api.field_behavior) = REQUIRED];
}

// Request message for DeleteLocalAccount.
message DeleteLocalAccountRequest {
  // Name of the localaccount to be deleted.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for DeleteLocalAccount.
message DeleteLocalAccountResponse {}

// OS Update Policy.
service OSUpdatePolicy {
  // Create an OS Update Policy.
  rpc CreateOSUpdatePolicy(CreateOSUpdatePolicyRequest) returns (resources.compute.v1.OSUpdatePolicy) {
    option (google.api.http) = {
      post: "/edge-infra.orchestrator.apis/v2/os_update_policy"
      body: "os_update_policy"
    };
  }
  // Get a list of OS Update Policies.
  rpc ListOSUpdatePolicy(ListOSUpdatePolicyRequest) returns (ListOSUpdatePolicyResponse) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/os_update_policy"};
  }
  // Get a specific OS Update Policy.
  rpc GetOSUpdatePolicy(GetOSUpdatePolicyRequest) returns (resources.compute.v1.OSUpdatePolicy) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/os_update_policy/{resourceId}"};
  }
  // Delete a OS Update Policy.
  rpc DeleteOSUpdatePolicy(DeleteOSUpdatePolicyRequest) returns (DeleteOSUpdatePolicyResponse) {
    option (google.api.http) = {delete: "/edge-infra.orchestrator.apis/v2/os_update_policy/{resourceId}"};
  }
}

/*
   ###################
   OS Update Policy
   ###################
*/

// Request message for the CreateOSUpdatePolicy method.
message CreateOSUpdatePolicyRequest {
  // The OS Update policy to create.
  resources.compute.v1.OSUpdatePolicy os_update_policy = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the CreateOSUpdatePolicy method.
message CreateOSUpdatePolicyResponse {
  // The created os.
  resources.compute.v1.OSUpdatePolicy os_update_policy = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the GetOSUpdatePolicy method.
message GetOSUpdatePolicyRequest {
  // Name of the requested os.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the GetOSUpdatePolicy method.
message GetOSUpdatePolicyResponse {
  // The requested os.
  resources.compute.v1.OSUpdatePolicy os_update_policy = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the ListOSUpdatePolicy method.
message ListOSUpdatePolicyRequest {
  // Optional comma separated list of fields to specify a sorting order.
  // See https://google.aip.dev/132 for details.
  string order_by = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9., ]+$"
    }
  ];
  // Optional filter to return only item of interest.
  // See https://google.aip.dev/160 for details.
  string filter = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9.,:/=*(){}\"' ]+$"
    }
  ];
  // Defines the amount of items to be contained in a single page.
  // Default of 20.
  uint32 page_size = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 1
      lte: 100
    }
  ];
  // Index of the first item to return. This allows skipping items.
  uint32 offset = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 0
      lte: 10000
    }
  ];
}

// Response message for the ListOSUpdatePolicy method.
message ListOSUpdatePolicyResponse {
  // Sorted and filtered list of OS Update Policies.
  repeated resources.compute.v1.OSUpdatePolicy os_update_policies = 1 [(google.api.field_behavior) = REQUIRED];
  // Count of items in the entire list, regardless of pagination.
  int32 total_elements = 2 [(google.api.field_behavior) = REQUIRED];
  // Inform if there are more elements
  bool has_next = 3 [(google.api.field_behavior) = REQUIRED];
}

// Request message for DeleteOperatingSystem.
message DeleteOSUpdatePolicyRequest {
  // Name of the OS Update Policy to be deleted.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for DeleteOperatingSystem.
message DeleteOSUpdatePolicyResponse {}


// OS Update Run.
service OSUpdateRun {
  // Get a list of OS Update Policies.
  rpc ListOSUpdateRun(ListOSUpdateRunRequest) returns (ListOSUpdateRunResponse) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/os_update_run"};
  }
  // Get a specific OS Update Run.
  rpc GetOSUpdateRun(GetOSUpdateRunRequest) returns (resources.compute.v1.OSUpdateRun) {
    option (google.api.http) = {get: "/edge-infra.orchestrator.apis/v2/os_update_run/{resourceId}"};
  }
  // Delete a OS Update Run.
  rpc DeleteOSUpdateRun(DeleteOSUpdateRunRequest) returns (DeleteOSUpdateRunResponse) {
    option (google.api.http) = {delete: "/edge-infra.orchestrator.apis/v2/os_update_run/{resourceId}"};
  }
}

/*
   ###################
   OS Update Run
   ###################
*/

// Request message for the CreateOSUpdateRun method.
message CreateOSUpdateRunRequest {
  // The os update run to create.
  resources.compute.v1.OSUpdateRun os_update_run = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the CreateOSUpdateRun method.
message CreateOSUpdateRunResponse {
  // The created os.
  resources.compute.v1.OSUpdateRun os_update_run = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the GetOSUpdateRun method.
message GetOSUpdateRunRequest {
  // Name of the requested os.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the GetOSUpdateRun method.
message GetOSUpdateRunResponse {
  // The requested os.
  resources.compute.v1.OSUpdateRun os_update_run = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the ListOSUpdateRun method.
message ListOSUpdateRunRequest {
  // Optional comma separated list of fields to specify a sorting order.
  // See https://google.aip.dev/132 for details.
  string order_by = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9., ]+$"
    }
  ];
  // Optional filter to return only item of interest.
  // See https://google.aip.dev/160 for details.
  string filter = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9.,:/=*(){}\"' ]+$"
    }
  ];
  // Defines the amount of items to be contained in a single page.
  // Default of 20.
  uint32 page_size = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 1
      lte: 100
    }
  ];
  // Index of the first item to return. This allows skipping items.
  uint32 offset = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).uint32 = {
      gte: 0
      lte: 10000
    }
  ];
}

// Response message for the ListOSUpdateRun method.
message ListOSUpdateRunResponse {
  // Sorted and filtered list of os update policies.
  repeated resources.compute.v1.OSUpdateRun os_update_policies = 1 [(google.api.field_behavior) = REQUIRED];
  // Count of items in the entire list, regardless of pagination.
  int32 total_elements = 2 [(google.api.field_behavior) = REQUIRED];
  // Inform if there are more elements
  bool has_next = 3 [(google.api.field_behavior) = REQUIRED];
}

// Request message for DeleteOperatingSystem.
message DeleteOSUpdateRunRequest {
  // Name of the os update run to be deleted.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for DeleteOperatingSystem.
message DeleteOSUpdateRunResponse {}



/*
   ###################
   CustomConfig
   ###################
*/

// Request message for the CreateCustomConfig method.
message CreateCustomConfigRequest {
  // The custom configuration to create.
  resources.customconfig.v1.CustomConfigResource custom_config = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the CreateCustomConfig method.
message CreateCustomConfigResponse {
  // The created custom configuration.
  resources.customconfig.v1.CustomConfigResource custom_config = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the GetCustomConfig method.
message GetCustomConfigRequest {
  // Name of the requested custom configuration.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the GetCustomConfig method.
message GetCustomConfigResponse {
  // The requested custom configuration.
  resources.customconfig.v1.CustomConfigResource custom_config = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the ListCustomConfigs method.
message ListCustomConfigsRequest {
  // Optional comma separated list of fields to specify a sorting order.
  // See https://google.aip.dev/132 for details.
  string order_by = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9., ]+$"
    }
  ];
  // Optional filter to return only item of interest.
  // See https://google.aip.dev/160 for details.
  string filter = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      max_len: 1000
      pattern: "^$|^[a-zA-Z-_0-9.,:/=*(){}\"' ]+$"
    }
  ];
  // Defines the amount of items to be contained in a single page.
  // Default of 20.
  int32 page_size = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).int32 = {
      gte: 1
      lte: 100
    }
  ];
  // Index of the first item to return. This allows skipping items.
  int32 offset = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).int32 = {
      gte: 0
      lte: 10000
    }
  ];
}

// Response message for the ListCustomConfigs method.
message ListCustomConfigsResponse {
  // Sorted and filtered list of customconfigs.
  repeated resources.customconfig.v1.CustomConfigResource custom_configs = 1 [(google.api.field_behavior) = REQUIRED];
  // Count of items in the entire list, regardless of pagination.
  int32 total_elements = 2 [(google.api.field_behavior) = REQUIRED];
  // Inform if there are more elements
  bool has_next = 3 [(google.api.field_behavior) = REQUIRED];
}

// Request message for DeleteCustomConfig.
message DeleteCustomConfigRequest {
  // Name of the customconfig to be deleted.
  string resourceId = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for DeleteCustomConfig.
message DeleteCustomConfigResponse {}
