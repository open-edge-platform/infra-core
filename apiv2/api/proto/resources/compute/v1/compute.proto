// SPDX-FileCopyrightText: (C) 2025 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package resources.compute.v1;

import "google/api/field_behavior.proto";
import "resources/common/v1/common.proto";
import "resources/location/v1/location.proto";
import "resources/os/v1/os.proto";
import "resources/localaccount/v1/localaccount.proto";
import "resources/network/v1/network.proto";
import "resources/status/v1/status.proto";
import "validate/validate.proto";

option go_package = "github.com/open-edge-platform/infra-core/apiv2/v2/internal/pbapi/resources/compute/v1;computev1";

// States of the host.
enum HostState {
  HOST_STATE_UNSPECIFIED = 0;
  HOST_STATE_DELETED = 2;
  HOST_STATE_ONBOARDED = 3;
  HOST_STATE_UNTRUSTED = 4;
  HOST_STATE_REGISTERED = 5;
}

// The type of BMC.
enum BaremetalControllerKind {
  BAREMETAL_CONTROLLER_KIND_UNSPECIFIED = 0;
  BAREMETAL_CONTROLLER_KIND_NONE = 1;
  BAREMETAL_CONTROLLER_KIND_IPMI = 2;
  BAREMETAL_CONTROLLER_KIND_VPRO = 3;
  BAREMETAL_CONTROLLER_KIND_PDU = 4;
}

// A Host resource.
message HostResource {
  // Resource ID, generated on Create.
  string resource_id = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (validate.rules).string = {
      pattern: "^host-[0-9a-f]{8}$"
      max_len: 13
    }
  ];

  // The host name.
  string name = 3 [
    (google.api.field_behavior) = REQUIRED,
    (validate.rules).string = {
      pattern: "^$|^[a-zA-Z-_0-9./: ]+$"
      max_len: 50
    }
  ];

  // The desired state of the Host.
  HostState desired_state = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The current state of the Host.
  HostState current_state = 5 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The site resource associated with the host.
  resources.location.v1.SiteResource site = 8 [
    (google.api.field_behavior) = OPTIONAL,
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // The note associated with the host.
  string note = 13 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (validate.rules).string = {
      min_len: 1
      max_len: 512
      pattern: "^$|^[a-zA-Z-_0-9./:;=@?!#,<>*()\" ]+$"
    }
  ];

  // SMBIOS device serial number.
  string serial_number = 16 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The host UUID identifier; UUID is unique and immutable.
  string uuid = 17 [
    (google.api.field_behavior) = OPTIONAL,
    (validate.rules).string = {
      min_len: 0
      max_len: 36
      pattern: "^$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
    }
  ];

  // Quantity of memory (RAM) in the system in bytes.
  string memory_bytes = 18 [(google.api.field_behavior) = OUTPUT_ONLY];
  // CPU model of the Host.
  string cpu_model = 19 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Number of physical CPU sockets.
  uint32 cpu_sockets = 20 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Number of CPU cores.
  uint32 cpu_cores = 21 [(google.api.field_behavior) = OUTPUT_ONLY];
  // String list of all CPU capabilities (possibly JSON).
  string cpu_capabilities = 22 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Architecture of the CPU model, e.g. x86_64.
  string cpu_architecture = 23 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Total Number of threads supported by the CPU.
  uint32 cpu_threads = 24 [(google.api.field_behavior) = OUTPUT_ONLY];
  // JSON field storing the CPU topology, refer to HDA/HRM docs for the JSON schema.
  string cpu_topology = 25 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Kind of BMC.
  BaremetalControllerKind bmc_kind = 34 [(google.api.field_behavior) = OUTPUT_ONLY];
  // BMC IP address, such as "192.0.0.1".
  string bmc_ip = 35 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Hostname.
  string hostname = 43 [(google.api.field_behavior) = OUTPUT_ONLY];
  // System Product Name.
  string product_name = 44 [(google.api.field_behavior) = OUTPUT_ONLY];
  // BIOS Version.
  string bios_version = 46 [(google.api.field_behavior) = OUTPUT_ONLY];
  // BIOS Release Date.
  string bios_release_date = 47 [(google.api.field_behavior) = OUTPUT_ONLY];
  // BIOS Vendor.
  string bios_vendor = 48 [(google.api.field_behavior) = OUTPUT_ONLY];

  // textual message that describes the runtime status of Host. Set by RMs only.
  string host_status = 60 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (validate.rules).string = {max_len: 1024}
  ];
  // Indicates interpretation of host_status. Set by RMs only.
  status.v1.StatusIndication host_status_indicator = 61 [(google.api.field_behavior) = OUTPUT_ONLY];
  // UTC timestamp when host_status was last changed. Set by RMs only.
  uint32 host_status_timestamp = 62 [(google.api.field_behavior) = OUTPUT_ONLY];

  // textual message that describes the onboarding status of Host. Set by RMs only.
  string onboarding_status = 63 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (validate.rules).string = {max_len: 1024}
  ];
  // Indicates interpretation of onboarding_status. Set by RMs only.
  status.v1.StatusIndication onboarding_status_indicator = 64 [(google.api.field_behavior) = OUTPUT_ONLY];
  // UTC timestamp when onboarding_status was last changed. Set by RMs only.
  uint32 onboarding_status_timestamp = 65 [(google.api.field_behavior) = OUTPUT_ONLY];

  // textual message that describes the onboarding status of Host. Set by RMs only.
  string registration_status = 66 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (validate.rules).string = {max_len: 1024}
  ];
  // Indicates interpretation of registration_status. Set by RMs only.
  status.v1.StatusIndication registration_status_indicator = 67 [(google.api.field_behavior) = OUTPUT_ONLY];
  // UTC timestamp when registration_status was last changed. Set by RMs only.
  uint32 registration_status_timestamp = 68 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Back-reference to attached host storage resources.
  repeated HoststorageResource host_storages = 70 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Back-reference to attached host NIC resources.
  repeated HostnicResource host_nics = 71 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Back-reference to attached host USB resources.
  repeated HostusbResource host_usbs = 72 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Back-reference to attached host GPU resources.
  repeated HostgpuResource host_gpus = 73 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The instance associated with the host.
  InstanceResource instance = 90 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The site where the host is located.
  string site_id = 5001 [
    (google.api.field_behavior) = INPUT_ONLY,
    (validate.rules).string = {
      pattern: "^$|^site-[0-9a-f]{8}$"
      max_len: 13
    }
  ];

  // The metadata associated with the host, represented by a list of key:value pairs.
  repeated resources.common.v1.MetadataItem metadata = 5003 [(google.api.field_behavior) = OPTIONAL];
  // The metadata inherited by the host, represented by a list of key:value pairs, rendered by location and logical structures.
  repeated resources.common.v1.MetadataItem inherited_metadata = 5004 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Timestamps associated to the resource.
  resources.common.v1.Timestamps timestamps = 50100 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// The state of the Host component.
enum HostComponentState {
  HOST_COMPONENT_STATE_UNSPECIFIED = 0;
  HOST_COMPONENT_STATE_ERROR = 1;
  HOST_COMPONENT_STATE_DELETED = 2;
  HOST_COMPONENT_STATE_EXISTS = 3;
}

// The set of available host storage capabilities.
message HoststorageResource {
  string resource_id = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (validate.rules).string = {
      pattern: "^hoststorage-[0-9a-f]{8}$"
      max_len: 20
    }
  ];

  // The storage device unique identifier.
  string wwid = 16 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The storage device unique serial number.
  string serial = 17 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The Storage device vendor.
  string vendor = 18 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The storage device model.
  string model = 19 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The storage device Capacity (size) in bytes.
  string capacity_bytes = 20 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The storage device device name (OS provided, like sda, sdb, etc.)
  string device_name = 21 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Timestamps associated to the resource.
  resources.common.v1.Timestamps timestamps = 50100 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// The state of the network interface.
enum NetworkInterfaceLinkState {
  NETWORK_INTERFACE_LINK_STATE_UNSPECIFIED = 0;
  NETWORK_INTERFACE_LINK_STATE_UP = 1;
  NETWORK_INTERFACE_LINK_STATE_DOWN = 2;
}

// The set of available host interfaces.
message HostnicResource {
  string resource_id = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (validate.rules).string = {
      pattern: "^hostnic-[0-9a-f]{8}$"
      max_len: 16
    }
  ];
  // The device name (OS provided, like eth0, enp1s0, etc.).
  string device_name = 16 [(google.api.field_behavior) = OUTPUT_ONLY];
  // PCI identifier string for this network interface.
  string pci_identifier = 17 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The interface MAC address.
  string mac_addr = 18 [(google.api.field_behavior) = OUTPUT_ONLY];
  // If the interface has SRIOV enabled.
  bool sriov_enabled = 19 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The number of VFs currently provisioned on the interface, if SR-IOV is supported.
  uint32 sriov_vfs_num = 20 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The maximum number of VFs the interface supports, if SR-IOV is supported.
  uint32 sriov_vfs_total = 31 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The features of this interface, comma separated.
  string features = 30 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Maximum transmission unit of the interface.
  uint32 mtu = 40 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Link state of this interface.
  NetworkInterfaceLinkState link_state = 41 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Whether this is a bmc interface or not.
  bool bmc_interface = 43 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The interface's IP address list.
  repeated resources.network.v1.IPAddressResource ip_addresses = 50001 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Timestamps associated to the resource.
  resources.common.v1.Timestamps timestamps = 50100 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// The set of host USB resources.
message HostusbResource {
  string resource_id = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (validate.rules).string = {
      pattern: "^hostusb-[0-9a-f]{8}$"
      max_len: 20
    }
  ];

  // Hexadecimal number representing ID of the USB device vendor.
  string idvendor = 10 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Hexadecimal number representing ID of the USB device product.
  string idproduct = 11 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Bus number of device connected with.
  uint32 bus = 12 [(google.api.field_behavior) = OUTPUT_ONLY];
  // USB Device number assigned by OS.
  uint32 addr = 13 [(google.api.field_behavior) = OUTPUT_ONLY];
  // class defined by USB-IF.
  string class = 20 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Serial number of device.
  string serial = 21 [(google.api.field_behavior) = OUTPUT_ONLY];
  // the OS-provided device name.
  string device_name = 22 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Timestamps associated to the resource.
  resources.common.v1.Timestamps timestamps = 50100 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// The set of available host GPU cards.
message HostgpuResource {
  string resource_id = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (validate.rules).string = {
      pattern: "^hostgpu-[0-9a-f]{8}$"
      max_len: 16
    }
  ];

  // The GPU device PCI identifier.
  string pci_id = 20 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The GPU device model.
  string product = 21 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The GPU device vendor.
  string vendor = 22 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The human-readable GPU device description.
  string description = 23 [(google.api.field_behavior) = OUTPUT_ONLY];
  // GPU name as reported by OS.
  string device_name = 24 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The features of this GPU device, comma separated.
  string features = 25 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Timestamps associated to the resource.
  resources.common.v1.Timestamps timestamps = 50100 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// The Instance States.
enum InstanceState {
  // unconfigured
  INSTANCE_STATE_UNSPECIFIED = 0;
  // OS is Running
  INSTANCE_STATE_RUNNING = 1;
  // OS should be Deleted
  INSTANCE_STATE_DELETED = 2;
  // OS should not be trusted anymore
  INSTANCE_STATE_UNTRUSTED = 3;
}

// The Instance kind.
enum InstanceKind {
  INSTANCE_KIND_UNSPECIFIED = 0;
  // INSTANCE_KIND_VM = 1;
  INSTANCE_KIND_METAL = 2;
}

// InstanceResource describes an instantiated OS install, running on either a
// host or hypervisor.
message InstanceResource {
  // Resource ID, generated on Create.
  string resource_id = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (validate.rules).string = {
      pattern: "^inst-[0-9a-f]{8}$"
      max_len: 13
    }
  ];
  // Kind of resource. Frequently tied to Provider.
  InstanceKind kind = 2;
  // The instance's human-readable name.
  string name = 3 [(validate.rules).string = {
    pattern: "^$|^[a-zA-Z-_0-9./: ]+$"
    max_len: 50
  }];

  // The Instance desired state.
  InstanceState desired_state = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The Instance current state.
  InstanceState current_state = 5 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Host this Instance is placed on. Only applicable to baremetal instances.
  HostResource host = 9 [(google.api.field_behavior) = OUTPUT_ONLY];
  // OS resource that should be installed to this Instance.
  resources.os.v1.OperatingSystemResource os = 10 [(google.api.field_behavior) = OUTPUT_ONLY];
  // OS resource that should be installed to this Instance.
  resources.os.v1.OperatingSystemResource desired_os = 11 [(google.api.field_behavior) = OUTPUT_ONLY];
  // OS resource that is currently installed for this Instance.
  resources.os.v1.OperatingSystemResource current_os = 25 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Select to enable security features such as Secure Boot (SB) and Full Disk Encryption (FDE).
  resources.os.v1.SecurityFeature security_feature = 14;

  // textual message that describes the current instance status. Set by RMs only.
  string instance_status = 15 [(validate.rules).string = {max_len: 1024},
    (google.api.field_behavior) = OUTPUT_ONLY
  ];
  // Indicates interpretation of instance_status. Set by RMs only.
  status.v1.StatusIndication instance_status_indicator = 16 [(google.api.field_behavior) = OUTPUT_ONLY];
  // UTC timestamp when instance_status was last changed. Set by RMs only.
  uint32 instance_status_timestamp = 17 [(google.api.field_behavior) = OUTPUT_ONLY];

  // textual message that describes the provisioning status of Instance. Set by RMs only.
  string provisioning_status = 18 [(validate.rules).string = {max_len: 1024},
    (google.api.field_behavior) = OUTPUT_ONLY
  ];
  // Indicates interpretation of provisioning_status. Set by RMs only.
  status.v1.StatusIndication provisioning_status_indicator = 19 [(google.api.field_behavior) = OUTPUT_ONLY];
  // UTC timestamp when provisioning_status was last changed. Set by RMs only.
  uint32 provisioning_status_timestamp = 20 [(google.api.field_behavior) = OUTPUT_ONLY];

  // textual message that describes the update status of Instance. Set by RMs only.
  string update_status = 21 [(validate.rules).string = {max_len: 1024},
    (google.api.field_behavior) = OUTPUT_ONLY
  ];
  // Indicates interpretation of update_status. Set by RMs only.
  status.v1.StatusIndication update_status_indicator = 22 [(google.api.field_behavior) = OUTPUT_ONLY];
  // UTC timestamp when update_status was last changed. Set by RMs only.
  uint32 update_status_timestamp = 23 [(google.api.field_behavior) = OUTPUT_ONLY];
  // JSON field storing details of Instance update status. Set by RMs only. Beta, subject to change.
  string update_status_detail = 24 [(validate.rules).string = {max_len: 100000},
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // textual message that describes the trusted_attestation status of Instance. Set by RMs only.
  string trusted_attestation_status = 26 [
    (validate.rules).string = {max_len: 1024},
    (google.api.field_behavior) = OUTPUT_ONLY
  ];
  // Indicates interpretation of trusted_attestation_status. Set by RMs only.
  status.v1.StatusIndication trusted_attestation_status_indicator = 27 [(google.api.field_behavior) = OUTPUT_ONLY];
  // UTC timestamp when trusted_attestation_status was last changed. Set by RMs only.
  uint32 trusted_attestation_status_timestamp = 28 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The workload members associated with the instance.
  repeated WorkloadMember workload_members = 30 [(google.api.field_behavior) = OUTPUT_ONLY]; // back-reference to the Workload Members associated to this Instance
  // Local Account associated with this Instance
  resources.localaccount.v1.LocalAccountResource localaccount = 41 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Deprecated, The instance's unique identifier. Alias of resourceID.
  string instanceID = 5001 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (validate.rules).string = {
      pattern: "^inst-[0-9a-f]{8}$"
      max_len: 13
    }
  ];

  // The host's unique identifier associated with the instance.
  string hostID = 5002 [
    (google.api.field_behavior) = INPUT_ONLY,
    (validate.rules).string = {
      pattern: "^host-[0-9a-f]{8}$"
      max_len: 13
    }
  ];

  // The unique identifier of OS resource that must be installed on the instance.
  string osID = 5003 [
    (google.api.field_behavior) = INPUT_ONLY,
    (validate.rules).string = {
      pattern: "^os-[0-9a-f]{8}$"
      max_len: 11
    }
  ];

  // The unique identifier of local account will be associated with the instance.
  string local_accountID = 5004 [
    (google.api.field_behavior) = INPUT_ONLY,
    (validate.rules).string = {
      pattern: "^localaccount-[0-9a-f]{8}$"
      max_len: 21
    }
  ];
  // Timestamps associated to the resource.
  resources.common.v1.Timestamps timestamps = 50100 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// Represents the Workload state, used for both current and desired state.
enum WorkloadState {
  WORKLOAD_STATE_UNSPECIFIED = 0;
  WORKLOAD_STATE_ERROR = 1;
  WORKLOAD_STATE_DELETING = 2;
  WORKLOAD_STATE_DELETED = 3;
  WORKLOAD_STATE_PROVISIONED = 4;
}

// Represents the type of workload.
enum WorkloadKind {
  // Should never be used.
  WORKLOAD_KIND_UNSPECIFIED = 0;
  // Cluster workload.
  WORKLOAD_KIND_CLUSTER = 1;
}

// A generic way to group compute resources to obtain a workload.
message WorkloadResource {
  // resource ID, generated by the inventory on Create.
  string resource_id = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (validate.rules).string = {
      pattern: "^workload-[0-9a-f]{8}$"
      max_len: 17
    }
  ];

  // Type of workload.
  WorkloadKind kind = 2 [(google.api.field_behavior) = REQUIRED];
  // Human-readable name for the workload.
  string name = 3 [(validate.rules).string = {
    pattern: "^$|^[a-zA-Z-_0-9./: ]+$"
    max_len: 50
  }];

  // The ID of the external resource, used to link to resources outside the realm of Edge Infrastructure Manager.
  string external_id = 5 [(validate.rules).string = {
    max_len: 40
    pattern: "^$|^[a-zA-Z-_0-9./: ]+$"
  }];

  // Human-readable status of the workload.
  string status = 15 [(validate.rules).string = {
    max_len: 500
    pattern: "^$|^[a-zA-Z-_0-9./:;=?@!#,<>*() ]+$"
  }];

  // The members of the workload.
  repeated WorkloadMember members = 20 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // Deprecated, The workload unique identifier. Alias of resourceId.
  string workload_id = 5001 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (validate.rules).string = {
      pattern: "^workload-[0-9a-f]{8}$"
      max_len: 17
    }
  ];

  // Timestamps associated to the resource.
  resources.common.v1.Timestamps timestamps = 50100 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// Represents the type of the workload member.
enum WorkloadMemberKind {
  // Should never be used.
  WORKLOAD_MEMBER_KIND_UNSPECIFIED = 0;
  // Node of a cluster workload.
  WORKLOAD_MEMBER_KIND_CLUSTER_NODE = 1;
}

// Intermediate resource to represent a relation between a workload and a compute resource (i.e., instance).
message WorkloadMember {
  // Resource ID, generated by the inventory on Create.
  string resource_id = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (validate.rules).string = {
      pattern: "^workloadmember-[0-9a-f]{8}$"
      max_len: 23
    }
  ];

  // The kind of the workload member.
  WorkloadMemberKind kind = 2 [(google.api.field_behavior) = REQUIRED];
  // The workload resource associated with the workload member.
  WorkloadResource workload = 10 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The instance resource associated with the workload member.
  InstanceResource instance = 11 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Deprecated, The workload unique identifier. Alias of resourceId.
  string workload_member_id = 5001 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (validate.rules).string = {
      pattern: "^workloadmember-[0-9a-f]{8}$"
      max_len: 23
    }
  ];

  // The reference of the Instance member of the workload.
  InstanceResource member = 5002 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The workload unique identifier.
  string workload_id = 5003 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.field_behavior) = INPUT_ONLY,
    (validate.rules).string = {
      pattern: "^workload-[0-9a-f]{8}$"
      max_len: 17
    }
  ];

  // The unique identifier of the instance.
  string instance_id = 5004 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.field_behavior) = INPUT_ONLY,
    (validate.rules).string = {
      pattern: "^inst-[0-9a-f]{8}$"
      max_len: 13
    }
  ];

  // Timestamps associated to the resource.
  resources.common.v1.Timestamps timestamps = 50100 [(google.api.field_behavior) = OUTPUT_ONLY];
}
