// SPDX-FileCopyrightText: (C) 2025 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package resources.schedule.v1;

import "google/api/field_behavior.proto";
import "resources/common/v1/common.proto";
import "resources/compute/v1/compute.proto";
import "resources/location/v1/location.proto";
import "validate/validate.proto";

option go_package = "github.com/open-edge-platform/infra-core/apiv2/v2/internal/pbapi/resources/schedule/v1;schedulev1";

// The representation of a schedule's status.
enum ScheduleStatus {
  SCHEDULE_STATUS_UNSPECIFIED = 0;
  // Generic maintenance.
  SCHEDULE_STATUS_MAINTENANCE = 1;
  // SCHEDULE_STATUS_SHIPPING = 2; // being shipped/in transit

  // for performing OS updates.
  SCHEDULE_STATUS_OS_UPDATE = 3;
  // SCHEDULE_STATUS_FIRMWARE_UPDATE = 4; // for peforming firmware updates
  // SCHEDULE_STATUS_CLUSTER_UPDATE = 5; // for peforming cluster updates
}

// A single schedule resource.
message SingleScheduleResource {
  // Resource ID, generated by the inventory on Create.
  string resource_id = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (validate.rules).string = {
      pattern: "^singlesche-[0-9a-f]{8}$"
      max_bytes: 19
    }
  ];

  // The schedule status.
  ScheduleStatus schedule_status = 2 [(google.api.field_behavior) = REQUIRED]; // status of one-time-schedule
  // The schedule's name.
  string name = 3 [(validate.rules).string = {
    pattern: "^$|^[a-zA-Z-_0-9./: ]+$"
    max_len: 50
  }];

  // These three relations are mutually exclusive
  oneof relation {
    // Resource ID of Site this applies to.
    resources.location.v1.SiteResource target_site = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
    // Resource ID of Host this applies to.
    resources.compute.v1.HostResource target_host = 5 [(google.api.field_behavior) = OUTPUT_ONLY];
    // Resource ID of Region this applies to.
    resources.location.v1.RegionResource target_region = 7 [(google.api.field_behavior) = OUTPUT_ONLY];
  }

  // The start time in seconds, of the single schedule.
  int64 start_seconds = 9 [(google.api.field_behavior) = REQUIRED,
    (validate.rules).int64 = {gte:1}
  ];
  // The end time in seconds, of the single schedule.
  // The value of endSeconds must be equal to or bigger than the value of startSeconds.
  int64 end_seconds = 10 [(validate.rules).int64 = {gte:1}];

  // The single schedule resource's unique identifier. Alias of resourceId.
  string single_scheduleID = 5001 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (validate.rules).string = {
      pattern: "^singlesche-[0-9a-f]{8}$"
      max_bytes: 19
    }
  ];

  // The target host ID of the schedule.
  // Only one target can be provided per schedule.
  // This field cannot be used as filter.
  string target_host_id = 5002 [
    (google.api.field_behavior) = INPUT_ONLY,
    (validate.rules).string = {
      pattern: "^$|^host-[0-9a-f]{8}$"
      max_bytes: 13
    }
  ];

  // The target site ID of the schedule.
  // Only one target can be provided per schedule.
  // This field cannot be used as filter.
  string target_site_id = 5003 [
    (google.api.field_behavior) = INPUT_ONLY,
    (validate.rules).string = {
      pattern: "^$|^site-[0-9a-f]{8}$"
      max_bytes: 13
    }
  ];

  // The target region ID of the schedule.
  // Only one target can be provided per schedule.
  // This field cannot be used as filter.
  string target_region_id = 5004 [
    (google.api.field_behavior) = INPUT_ONLY,
    (validate.rules).string = {
      pattern: "^$|^region-[0-9a-f]{8}$"
      max_bytes: 15
    }
  ];
  // Timestamps associated to the resource.
  resources.common.v1.Timestamps timestamps = 50100 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// A repeated-schedule resource.
message RepeatedScheduleResource {
  // Resource ID, generated by the inventory on Create.
  string resource_id = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (validate.rules).string = {
      pattern: "^repeatedsche-[0-9a-f]{8}$"
      max_bytes: 21
    }
  ];

  // The schedule status.
  ScheduleStatus schedule_status = 2 [(google.api.field_behavior) = REQUIRED];
  // The schedule's name.
  string name = 3 [(validate.rules).string = {
    pattern: "^$|^[a-zA-Z-_0-9./: ]+$"
    max_len: 50
  }];

  // These three relations are mutually exclusive.
  oneof relation {
    // Resource ID of Site this applies to.
    resources.location.v1.SiteResource target_site = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
    // Resource ID of Host this applies to.
    resources.compute.v1.HostResource target_host = 5 [(google.api.field_behavior) = OUTPUT_ONLY];
    // Resource ID of Region this applies to.
    resources.location.v1.RegionResource target_region = 21 [(google.api.field_behavior) = OUTPUT_ONLY];
  }

  // The duration in seconds of the repeated schedule, per schedule.
  uint32 duration_seconds = 6 [
    (google.api.field_behavior) = REQUIRED,
    (validate.rules).uint32 = {
      gte: 1
      lte: 86400
    }
  ];
  // cron style minutes (0-59), it can be empty only when used in a Filter.
  string cron_minutes = 9 [
    (google.api.field_behavior) = REQUIRED,
    (validate.rules).string = {pattern: "^([*]|([0-9]|([1-5][0-9]))((,([0-9]|([1-5][0-9])))*))$"}
  ];
  // cron style hours (0-23), it can be empty only when used in a Filter
  string cron_hours = 10 [
    (google.api.field_behavior) = REQUIRED,
    (validate.rules).string = {pattern: "^([*]|([0-9]|1[0-9]|2[0-3])((,([0-9]|1[0-9]|2[0-3]))*))$"}
  ];
  // cron style day of month (1-31), it can be empty only when used in a Filter
  string cron_day_month = 11 [
    (google.api.field_behavior) = REQUIRED,
    (validate.rules).string = {pattern: "^([*]|([1-9]|([12][0-9])|3[01])((,([1-9]|([12][0-9])|3[01]))*))$"}
  ];
  // cron style month (1-12), it can be empty only when used in a Filter
  string cron_month = 12 [
    (google.api.field_behavior) = REQUIRED,
    (validate.rules).string = {pattern: "^([*]|([1-9]|1[012])((,([1-9]|1[012]))*))$"}
  ];
  // cron style day of week (0-6), it can be empty only when used in a Filter
  string cron_day_week = 13 [
    (google.api.field_behavior) = REQUIRED,
    (validate.rules).string = {pattern: "^([*]|([0-6])((,([0-6]))*))$"}
  ];

  // The repeated schedule's unique identifier. Alias of resourceId.
  string repeated_scheduleID = 5001 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (validate.rules).string = {
      pattern: "^repeatedsche-[0-9a-f]{8}$"
      max_bytes: 21
    }
  ];

  // The target region ID of the schedule.
  // Only one target can be provided per schedule.
  // This field cannot be used as filter.
  string target_host_id = 5002 [
    (google.api.field_behavior) = INPUT_ONLY,
    (validate.rules).string = {
      pattern: "^$|^host-[0-9a-f]{8}$"
      max_bytes: 13
    }
  ];

  // The target site ID of the schedule.
  // Only one target can be provided per schedule.
  // This field cannot be used as filter.
  string target_site_id = 5003 [
    (google.api.field_behavior) = INPUT_ONLY,
    (validate.rules).string = {
      pattern: "^$|^site-[0-9a-f]{8}$"
      max_bytes: 13
    }
  ];

  // The target region ID of the schedule.
  // Only one target can be provided per schedule.
  // This field cannot be used as filter.
  string target_region_id = 5004 [
    (google.api.field_behavior) = INPUT_ONLY,
    (validate.rules).string = {
      pattern: "^$|^region-[0-9a-f]{8}$"
      max_bytes: 15
    }
  ];
  // Timestamps associated to the resource.
  resources.common.v1.Timestamps timestamps = 50100 [(google.api.field_behavior) = OUTPUT_ONLY];
}
